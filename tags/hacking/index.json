{
    "data": {
        
        
        "taxonomy": "tag",
        "term": "hacking",
        
        "count": 2,
        "items": [
            
            {
    "kind": "page",
    "title": "Password security is important. Start treating it like it is.",
    "description": "",
    "summary": {
        "content": "My friend Michelle recently explained to me that password is a perfectly valid password to use. Her reason? “People always say not to use it. So now that nobody uses it anymore, it’s totally secure again!” How I’d Hack Your Weak Passwords In this case, Michelle made a fatal assumption. She assumed that human beings would be manually typing in guessed passwords. What she failed to understand is that it’s really, really easy for any off-the-shelf computer to chew through possible passwords at an incredible pace.",
        "isTruncated": true
    },
    "published": "2013-11-07T07:13:53Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2013/password-security-is-important-start-treating-it-like-it-is/",
    "relativePermalink": "/posts/2013/password-security-is-important-start-treating-it-like-it-is/",
    "aliases": ["/2013/11/06/password-security-is-important-start-treating-it-like-it-is/"],
    "images": ["https://cdn.ryanparman.com/hugo/posts/2013/ive-made-a-huge-mistake@2x.png", "https://cdn.ryanparman.com/hugo/posts/2013/password-strength.jpg", "https://cdn.ryanparman.com/hugo/posts/2013/password-trends@2x.jpg", "https://cdn.ryanparman.com/hugo/posts/2013/waahht@2x.png", "https://cdn.ryanparman.com/hugo/posts/2013/breached@2x.png"],
    "videos": [],
    "categories": ["Privacy and Security"],
    "tags": ["passwords", "hacking", "1password", "multifactor authentication"],
    "series": ["Editors Choice", "Passwords"],
    "keywords": [],
    "meta": {
        "wordCount": 1557,
        "readingTime": "8 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2013/20131107-password-security-is-important-start-treating-it-like-it-is.md",
        "logicalName": "20131107-password-security-is-important-start-treating-it-like-it-is.md",
        "translationBaseName": "20131107-password-security-is-important-start-treating-it-like-it-is",
        "baseFileName": "20131107-password-security-is-important-start-treating-it-like-it-is",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2013/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#how-id-hack-your-weak-passwords\"\u003eHow I’d Hack Your Weak Passwords\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#everything-you-know-about-passwords-is-wrong\"\u003eEverything you know (about passwords) is wrong\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#we-need-to-start-doing-a-better-job\"\u003eWe need to start doing a better job\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#okay-okay-what-should-i-do-differently\"\u003eOkay, okay. What should I do differently?\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#got-it-what-else-can-i-do\"\u003eGot it. What else can I do?\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp itemprop=\"description\" class=\"f5 f4-m f3-l mt0 lh-copy p-summary entry-summary\"\u003e\nMy friend Michelle recently explained to me that \u003cem\u003epassword\u003c/em\u003e is a perfectly valid password to use. Her reason? “People always say not to use it. So now that nobody uses it anymore, it’s totally secure again!”\n\u003c/p\u003e\n\n\u003cdiv class=\"pa2-ns\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2013/waahht.png\" layout=\"responsive\" width=\"\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"how-id-hack-your-weak-passwords\"\u003eHow I’d Hack Your Weak Passwords\u003c/h2\u003e\n\u003cp\u003eIn this case, Michelle made a fatal assumption. She assumed that human beings would be \u003cem\u003emanually\u003c/em\u003e typing in guessed passwords. What she failed to understand is that it’s really, really easy for any off-the-shelf computer to chew through possible passwords at an incredible pace.\u003c/p\u003e\n\u003cp\u003eYou know where they start? With \u003cem\u003epassword\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2013/password-trends@2x.jpg\" layout=\"responsive\" width=\"\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eIn an article written for Lifehacker entitled \u003ca href=\"https://web.archive.org/web/20131107071353/http://lifehacker.com/5505400/how-id-hack-your-weak-passwords\"\u003eHow I’d Hack Your Weak Passwords\u003c/a\u003e, author John Pozadzides says the following:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf you invited me to try and crack your password, you know the one that you use over and over for like every web page you visit, how many guesses would it take before I got it?\u003c/p\u003e\n\u003cp\u003eLet’s see… here is my top 10 list. I can obtain most of this information much easier than you think, then I might just be able to get into your e-mail, computer, or online banking. After all, if I get into one I’ll probably get into all of them.\u003c/p\u003e\n\u003cp\u003eYour partner, child, or pet’s name, possibly followed by a 0 or 1 (because they’re always making you use a number, aren’t they?)\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eThe last 4 digits of your social security number.\u003c/li\u003e\n\u003cli\u003e123 or 1234 or 123456.\u003c/li\u003e\n\u003cli\u003e“password”\u003c/li\u003e\n\u003cli\u003eYour city, or college, football team name.\u003c/li\u003e\n\u003cli\u003eDate of birth – yours, your partner’s or your child’s.\u003c/li\u003e\n\u003cli\u003e“god”\u003c/li\u003e\n\u003cli\u003e“letmein”\u003c/li\u003e\n\u003cli\u003e“money”\u003c/li\u003e\n\u003cli\u003e“love”\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eStatistically speaking that should probably cover about 20% of you. But don’t worry. If I didn’t get it yet it will probably only take a few more minutes before I do…\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"everything-you-know-about-passwords-is-wrong\"\u003eEverything you know (about passwords) is wrong\u003c/h2\u003e\n\u003cp\u003eMichelle and I share a cell phone plan. The other day, she asked me for the account info so that she could login and do some stuff. So I gave her my information (because I trust her).\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUsername: \u003ccode\u003emy.email@address.com\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ePassword: \u003ccode\u003ecVWXDD$XkA25eZo437F£$^Xp\u003c/code\u003e (not my real password)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eShe flipped-out on me. “Who’s going to try to hack into your AT\u0026amp;T account?!” I tried to explain how that wasn’t the point, but she’d already moved on to the next shiny object.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2013/breached@2x.png\" layout=\"responsive\" width=\"\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eI talked a couple of months ago about how I’d \u003ca href=\"/2013/08/10/breaking-my-bad-password-habits-with-1password-authy-oauth-openid/\"\u003echanged every single password I have\u003c/a\u003e. Why? Because I was re-using the same passwords all over the place, and it was time to fix that.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn short, one of my hard-to-guess-but-used-in-lots-of-places passwords was one of the ones that was obtained by hackers. As such, I had the fine work ahead of me to change the password for every single site that used the password that got hacked.\u003c/p\u003e\n\u003cp\u003e1Password to the rescue! It took me about 90 minutes, but I was able to lookup all of the sites where this password was being used, and change the password for all of them. This event ended up making me re-think how I managed my passwords.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIt’s not that anybody would care about my AT\u0026amp;T account. It’s that if I re-use the same password across multiple websites, it increases the likelihood that if a site gets hacked, that they can use that information to access other sites where you use that password.\u003c/p\u003e\n\u003ch2 id=\"we-need-to-start-doing-a-better-job\"\u003eWe need to start doing a better job\u003c/h2\u003e\n\u003cp\u003eGoing back to the piece by John Pozadzides:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eYou probably use the same password for lots of stuff right?\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSome sites you access such as your Bank or work VPN probably have pretty decent security, so I’m not going to attack them.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eHowever, other sites like the Hallmark e-mail greeting cards site, an online forum you frequent, or an e-commerce site you’ve shopped at might not be as well prepared. So those are the ones I’d work on.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSo, all we have to do now is unleash Brutus, wwwhack, or THC Hydra on their server with instructions to try say 10,000 (or 100,000 – whatever makes you happy) different usernames and passwords as fast as possible.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOnce we’ve got several login+password pairings we can then go back and test them on targeted sites.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eBut wait… How do I know which bank you use and what your login ID is for the sites you frequent? All those cookies are simply stored, unencrypted and nicely named, in your Web browser’s cache.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAny moderately-determined person could figure out how to hack passwords.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2013/password-strength.jpg\" layout=\"responsive\" width=\"\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eNormally, when you sign-up for a service, they don’t actually store your password. Instead they store a one-way \u003cem\u003ehash\u003c/em\u003e of your password. What does this mean?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eReal password: \u003ccode\u003emonkeyfarts\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eHashed password (SHA–1): \u003ccode\u003ea05727a789efdeaaa0b3f45e7f944c1f17691da6\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis way, they don’t know your password (yay, security!), and since it’s a \u003cem\u003eone-way\u003c/em\u003e hash, they can’t figure out your real password if all they have is the hashed password.\u003c/p\u003e\n\u003cp\u003eBut here’s the problem: If someone were to get a giant list of hashed passwords, there are enough pieces of the puzzle there to be able to begin figuring out common password patterns.\u003c/p\u003e\n\u003cp\u003eThis is what happened in 2009 when a site called RockYou got hacked and a giant (32.6 \u003cem\u003emillion\u003c/em\u003e) list of usernames and \u003cem\u003ehashed\u003c/em\u003e passwords were stolen. (RockYou makes fun little things for Facebook, and used to make fun things for MySpace. There’s a very good chance that you’ve used something they’ve done.)\u003c/p\u003e\n\u003cp\u003eIn \u003ca href=\"https://web.archive.org/web/20131107071353/http://www.passcape.com/index.php?section=blog\u0026amp;cmd=details\u0026amp;id=17\"\u003eBrief Analysis of RockYou Passwords\u003c/a\u003e, we learn:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eDictionary passwords, that is, words like “password,” “monkey,” and so on, make one of the most stable groups.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDigital passwords based on easily memorized numeric combinations, phone numbers, document numbers, birth dates, and more make another group, which is as stable as the previous one, and maybe even more popular.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePasswords based on names and their derivatives. For example, a user may use the name of himself, his pet, some city, some place, and so on.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePasswords based on keyboard combinations, such as “abc123,” “qwerty,” etc.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eEmotional passwords, such as “iloveyou,” “hateu,” “lovely,” “ihatemyboss,” or “ILoveJohn.”\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e[…]\u003c/p\u003e\n\u003cp\u003eCuriously enough, some users choose obscenely long passwords consisting of more than 20 characters, word combinations, or phrases. Here are some of these wonderful passwords (did you really think that nobody knows what you are typing?):\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eHahaithinkilovejessebutthenagainmaybenotcuzheisadiknob\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLets you come back for your Countdown Timer\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eme plus food equals more sleep each night\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003etommmmmmmmmmmmmmmmmmmmmmmmmmmm\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003etruongcaodangcongdonghaiphong\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eicantbelievethisshit.12345\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ebanditbanditbandit1bandit1bandit1banditbandit\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e11111111111111111111111111111111111111111111\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFUCKSCHOOLANDALLTHETEACHERSINIT\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eilovepalmermyfuturehusband\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e1delightyourselfinthelord!\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eImaprincessbecausemyfatheristheking\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eiluvanjabisset4evashesmawebaexxx\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003estuartandchrisrmybestmatesforeva\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ethisismypasswordyoullnevergetit\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eJust for fun, I downloaded a copy of \u003ca href=\"https://web.archive.org/web/20131107071353/http://hashcat.net/hashcat/\"\u003ehashcat\u003c/a\u003e and the \u003ca href=\"https://web.archive.org/web/20131107071353/http://wiki.skullsecurity.org/Passwords\"\u003erockyou.txt\u003c/a\u003e list of hashed passwords. Within 30 minutes, I’d managed to crack several thousand passwords from the list.\u003c/p\u003e\n\u003cp\u003eThis is not hard to do.\u003c/p\u003e\n\u003ch2 id=\"okay-okay-what-should-i-do-differently\"\u003eOkay, okay. What should I do differently?\u003c/h2\u003e\n\u003cp\u003eFirst of all, if you’re using \u003cem\u003epassword\u003c/em\u003e as your password, you’re fired.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2013/ive-made-a-huge-mistake@2x.png\" layout=\"responsive\" width=\"\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eDon’t use a word that can be found in the dictionary.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you choose to use a word, replace some of the letters with numbers or special characters. (Instead of \u003ccode\u003emonkeyfarts\u003c/code\u003e, use \u003ccode\u003em0ñKeyƒår†s\u003c/code\u003e.)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe longer the password, the better. Most sites require a minimum of 6 characters. I’d say to use a minimum of 10 characters. (Most of mine are in the 24–32 character range.)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDon’t use the same password twice. I know this may seem hard, but let’s get to the next bullet-point.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eStop trying to memorize your passwords. Let a password manager do it for you. \u003ca href=\"https://web.archive.org/web/20131107071353/https://agilebits.com/onepassword\"\u003e1Password\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20131107071353/https://lastpass.com\"\u003eLastPass\u003c/a\u003e and \u003ca href=\"https://web.archive.org/web/20131107071353/http://passwordsafe.sourceforge.net\"\u003ePassword Safe\u003c/a\u003e are all good solutions.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eEnhance your passwords with a second level of security. If a service you use supports Two-Factor Authentication (or Multi-Factor Authentication), enable it. This way, even if your password gets hacked, they won’t be able to access your account without a special code that only you have.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eLots of services are adding support: App.net, Apple, Amazon Web Services, Dreamhost, Dropbox, Evernote, Facebook, GoDaddy, Google, Microsoft (including Hotmail, MSN \u0026amp; Xbox Live), Paypal, Stripe.com, Yahoo!, WordPress.com (including Gravatar), and more!\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eIf you’re worried about someone (perhaps someone you know) figuring out your password and using it for nefarious purposes (including simply violating your personal privacy, e.g., checking your messages, reading your emails), I would \u003cstrong\u003ehighly recommend\u003c/strong\u003e doing all 6 things on this list.\u003c/p\u003e\n\u003ch2 id=\"got-it-what-else-can-i-do\"\u003eGot it. What else can I do?\u003c/h2\u003e\n\u003cp\u003eLots and lots. Siraj Datoo published a really good list on Quartz called \u003ca href=\"https://web.archive.org/web/20131107071353/http://qz.com/120946/the-complete-guide-to-not-being-that-idiot-who-got-the-company-hacked/\"\u003eThe complete guide to not being that idiot who got the company hacked\u003c/a\u003e. This list is good for the home as well. I would encourage you to read the whole post, but here are the bullet points:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eInstall \u003ca href=\"https://web.archive.org/web/20131107071353/https://www.eff.org/https-everywhere\"\u003eHTTPS Everywhere\u003c/a\u003e in your browser. (Switches to secured HTTPS traffic for several popular sites, among other things.)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePut a password on your home Wi-Fi. (Also: Use the \u003ccode\u003eWPA2\u003c/code\u003e security mode.)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePut passwords on all your devices. (Quit butt-dialing me like my friend Lindsey.)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eEmploy two-step authentication on everything. (We already covered this.)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eEncrypt your laptop’s hard drive, especially if it’s a Mac. (It’s really easy on a Mac. System Preferences → Security → FileVault.)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNever send or save your password electronically. (Email, IMs and other forms of electronic communication leave a trail. Don’t be the weakest link.)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse 1Password or a similar service. (We already covered this.)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRead your emails carefully to avoid phishing attempts.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eTake precautions when you use an open Wi-Fi network. (Anybody can connect to an open network and listen for unsecured web traffic to figure out your secrets. This is a very easy thing to do.)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eKnow which applications are connecting to the Internet. (If you have a Mac, \u003ca href=\"https://web.archive.org/web/20131107071353/https://www.obdev.at/products/littlesnitch/index.html\"\u003eLittle Snitch\u003c/a\u003e is a worthwhile investment.)\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n",
        "plain":"My friend Michelle recently explained to me that password is a perfectly valid password to use. Her reason? “People always say not to use it. So now that nobody uses it anymore, it’s totally secure again!”   How I’d Hack Your Weak Passwords In this case, Michelle made a fatal assumption. She assumed that human beings would be manually typing in guessed passwords. What she failed to understand is that it’s really, really easy for any off-the-shelf computer to chew through possible passwords at an incredible pace.\nYou know where they start? With password.\n  In an article written for Lifehacker entitled How I’d Hack Your Weak Passwords, author John Pozadzides says the following:\n If you invited me to try and crack your password, you know the one that you use over and over for like every web page you visit, how many guesses would it take before I got it?\nLet’s see… here is my top 10 list. I can obtain most of this information much easier than you think, then I might just be able to get into your e-mail, computer, or online banking. After all, if I get into one I’ll probably get into all of them.\nYour partner, child, or pet’s name, possibly followed by a 0 or 1 (because they’re always making you use a number, aren’t they?)\n The last 4 digits of your social security number. 123 or 1234 or 123456. “password” Your city, or college, football team name. Date of birth – yours, your partner’s or your child’s. “god” “letmein” “money” “love”  Statistically speaking that should probably cover about 20% of you. But don’t worry. If I didn’t get it yet it will probably only take a few more minutes before I do…\n Everything you know (about passwords) is wrong Michelle and I share a cell phone plan. The other day, she asked me for the account info so that she could login and do some stuff. So I gave her my information (because I trust her).\n Username: my.email@address.com Password: cVWXDD$XkA25eZo437F£$^Xp (not my real password)  She flipped-out on me. “Who’s going to try to hack into your AT\u0026amp;T account?!” I tried to explain how that wasn’t the point, but she’d already moved on to the next shiny object.\n  I talked a couple of months ago about how I’d changed every single password I have. Why? Because I was re-using the same passwords all over the place, and it was time to fix that.\n In short, one of my hard-to-guess-but-used-in-lots-of-places passwords was one of the ones that was obtained by hackers. As such, I had the fine work ahead of me to change the password for every single site that used the password that got hacked.\n1Password to the rescue! It took me about 90 minutes, but I was able to lookup all of the sites where this password was being used, and change the password for all of them. This event ended up making me re-think how I managed my passwords.\n It’s not that anybody would care about my AT\u0026amp;T account. It’s that if I re-use the same password across multiple websites, it increases the likelihood that if a site gets hacked, that they can use that information to access other sites where you use that password.\nWe need to start doing a better job Going back to the piece by John Pozadzides:\n   You probably use the same password for lots of stuff right?\n  Some sites you access such as your Bank or work VPN probably have pretty decent security, so I’m not going to attack them.\n  However, other sites like the Hallmark e-mail greeting cards site, an online forum you frequent, or an e-commerce site you’ve shopped at might not be as well prepared. So those are the ones I’d work on.\n  So, all we have to do now is unleash Brutus, wwwhack, or THC Hydra on their server with instructions to try say 10,000 (or 100,000 – whatever makes you happy) different usernames and passwords as fast as possible.\n  Once we’ve got several login+password pairings we can then go back and test them on targeted sites.\n  But wait… How do I know which bank you use and what your login ID is for the sites you frequent? All those cookies are simply stored, unencrypted and nicely named, in your Web browser’s cache.\n   Any moderately-determined person could figure out how to hack passwords.\n  Normally, when you sign-up for a service, they don’t actually store your password. Instead they store a one-way hash of your password. What does this mean?\n Real password: monkeyfarts Hashed password (SHA–1): a05727a789efdeaaa0b3f45e7f944c1f17691da6.  This way, they don’t know your password (yay, security!), and since it’s a one-way hash, they can’t figure out your real password if all they have is the hashed password.\nBut here’s the problem: If someone were to get a giant list of hashed passwords, there are enough pieces of the puzzle there to be able to begin figuring out common password patterns.\nThis is what happened in 2009 when a site called RockYou got hacked and a giant (32.6 million) list of usernames and hashed passwords were stolen. (RockYou makes fun little things for Facebook, and used to make fun things for MySpace. There’s a very good chance that you’ve used something they’ve done.)\nIn Brief Analysis of RockYou Passwords, we learn:\n   Dictionary passwords, that is, words like “password,” “monkey,” and so on, make one of the most stable groups.\n  Digital passwords based on easily memorized numeric combinations, phone numbers, document numbers, birth dates, and more make another group, which is as stable as the previous one, and maybe even more popular.\n  Passwords based on names and their derivatives. For example, a user may use the name of himself, his pet, some city, some place, and so on.\n  Passwords based on keyboard combinations, such as “abc123,” “qwerty,” etc.\n  Emotional passwords, such as “iloveyou,” “hateu,” “lovely,” “ihatemyboss,” or “ILoveJohn.”\n  […]\nCuriously enough, some users choose obscenely long passwords consisting of more than 20 characters, word combinations, or phrases. Here are some of these wonderful passwords (did you really think that nobody knows what you are typing?):\n  Hahaithinkilovejessebutthenagainmaybenotcuzheisadiknob\n  Lets you come back for your Countdown Timer\n  me plus food equals more sleep each night\n  tommmmmmmmmmmmmmmmmmmmmmmmmmmm\n  truongcaodangcongdonghaiphong\n  icantbelievethisshit.12345\n  banditbanditbandit1bandit1bandit1banditbandit\n  11111111111111111111111111111111111111111111\n  aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n  FUCKSCHOOLANDALLTHETEACHERSINIT\n  ilovepalmermyfuturehusband\n  1delightyourselfinthelord!\n  Imaprincessbecausemyfatheristheking\n  iluvanjabisset4evashesmawebaexxx\n  stuartandchrisrmybestmatesforeva\n  thisismypasswordyoullnevergetit\n   Just for fun, I downloaded a copy of hashcat and the rockyou.txt list of hashed passwords. Within 30 minutes, I’d managed to crack several thousand passwords from the list.\nThis is not hard to do.\nOkay, okay. What should I do differently? First of all, if you’re using password as your password, you’re fired.\n    Don’t use a word that can be found in the dictionary.\n  If you choose to use a word, replace some of the letters with numbers or special characters. (Instead of monkeyfarts, use m0ñKeyƒår†s.)\n  The longer the password, the better. Most sites require a minimum of 6 characters. I’d say to use a minimum of 10 characters. (Most of mine are in the 24–32 character range.)\n  Don’t use the same password twice. I know this may seem hard, but let’s get to the next bullet-point.\n  Stop trying to memorize your passwords. Let a password manager do it for you. 1Password, LastPass and Password Safe are all good solutions.\n  Enhance your passwords with a second level of security. If a service you use supports Two-Factor Authentication (or Multi-Factor Authentication), enable it. This way, even if your password gets hacked, they won’t be able to access your account without a special code that only you have.\n Lots of services are adding support: App.net, Apple, Amazon Web Services, Dreamhost, Dropbox, Evernote, Facebook, GoDaddy, Google, Microsoft (including Hotmail, MSN \u0026amp; Xbox Live), Paypal, Stripe.com, Yahoo!, WordPress.com (including Gravatar), and more!    If you’re worried about someone (perhaps someone you know) figuring out your password and using it for nefarious purposes (including simply violating your personal privacy, e.g., checking your messages, reading your emails), I would highly recommend doing all 6 things on this list.\nGot it. What else can I do? Lots and lots. Siraj Datoo published a really good list on Quartz called The complete guide to not being that idiot who got the company hacked. This list is good for the home as well. I would encourage you to read the whole post, but here are the bullet points:\n  Install HTTPS Everywhere in your browser. (Switches to secured HTTPS traffic for several popular sites, among other things.)\n  Put a password on your home Wi-Fi. (Also: Use the WPA2 security mode.)\n  Put passwords on all your devices. (Quit butt-dialing me like my friend Lindsey.)\n  Employ two-step authentication on everything. (We already covered this.)\n  Encrypt your laptop’s hard drive, especially if it’s a Mac. (It’s really easy on a Mac. System Preferences → Security → FileVault.)\n  Never send or save your password electronically. (Email, IMs and other forms of electronic communication leave a trail. Don’t be the weakest link.)\n  Use 1Password or a similar service. (We already covered this.)\n  Read your emails carefully to avoid phishing attempts.\n  Take precautions when you use an open Wi-Fi network. (Anybody can connect to an open network and listen for unsecured web traffic to figure out your secrets. This is a very easy thing to do.)\n  Know which applications are connecting to the Internet. (If you have a Mac, Little Snitch is a worthwhile investment.)\n  ",
        "source":"\n{{\u003c description \u003e}}\nMy friend Michelle recently explained to me that \u003cem\u003epassword\u003c/em\u003e is a perfectly valid password to use. Her reason? “People always say not to use it. So now that nobody uses it anymore, it’s totally secure again!”\n{{\u003c /description \u003e}}\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/waahht.png\"\u003e}}\n\n## How I’d Hack Your Weak Passwords\n\nIn this case, Michelle made a fatal assumption. She assumed that human beings would be *manually* typing in guessed passwords. What she failed to understand is that it’s really, really easy for any off-the-shelf computer to chew through possible passwords at an incredible pace.\n\nYou know where they start? With *password*.\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/password-trends@2x.jpg\"\u003e}}\n\nIn an article written for Lifehacker entitled [How I’d Hack Your Weak Passwords]({{% wayback \"http://lifehacker.com/5505400/how-id-hack-your-weak-passwords\" %}}), author John Pozadzides says the following:\n\n\u003e If you invited me to try and crack your password, you know the one that you use over and over for like every web page you visit, how many guesses would it take before I got it?\n\u003e\n\u003e Let’s see… here is my top 10 list. I can obtain most of this information much easier than you think, then I might just be able to get into your e-mail, computer, or online banking. After all, if I get into one I’ll probably get into all of them.\n\u003e\n\u003e Your partner, child, or pet’s name, possibly followed by a 0 or 1 (because they’re always making you use a number, aren’t they?)\n\u003e\n\u003e 1. The last 4 digits of your social security number.\n\u003e 2. 123 or 1234 or 123456.\n\u003e 3. “password”\n\u003e 4. Your city, or college, football team name.\n\u003e 5. Date of birth – yours, your partner’s or your child’s.\n\u003e 6. “god”\n\u003e 7. “letmein”\n\u003e 8. “money”\n\u003e 9. “love”\n\u003e\n\u003e Statistically speaking that should probably cover about 20% of you. But don’t worry. If I didn’t get it yet it will probably only take a few more minutes before I do…\n\n## Everything you know (about passwords) is wrong\n\nMichelle and I share a cell phone plan. The other day, she asked me for the account info so that she could login and do some stuff. So I gave her my information (because I trust her).\n\n* Username: `my.email@address.com`\n* Password: `cVWXDD$XkA25eZo437F£$^Xp` (not my real password)\n\nShe flipped-out on me. “Who’s going to try to hack into your AT\u0026T account?!” I tried to explain how that wasn’t the point, but she’d already moved on to the next shiny object.\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/breached@2x.png\"\u003e}}\n\nI talked a couple of months ago about how I’d [changed every single password I have](/2013/08/10/breaking-my-bad-password-habits-with-1password-authy-oauth-openid/). Why? Because I was re-using the same passwords all over the place, and it was time to fix that.\n\n\u003e In short, one of my hard-to-guess-but-used-in-lots-of-places passwords was one of the ones that was obtained by hackers. As such, I had the fine work ahead of me to change the password for every single site that used the password that got hacked.\n\u003e\n\u003e 1Password to the rescue! It took me about 90 minutes, but I was able to lookup all of the sites where this password was being used, and change the password for all of them. This event ended up making me re-think how I managed my passwords.\n\nIt’s not that anybody would care about my AT\u0026T account. It’s that if I re-use the same password across multiple websites, it increases the likelihood that if a site gets hacked, that they can use that information to access other sites where you use that password.\n\n## We need to start doing a better job\n\nGoing back to the piece by John Pozadzides:\n\n\u003e * You probably use the same password for lots of stuff right?\n\u003e\n\u003e * Some sites you access such as your Bank or work VPN probably have pretty decent security, so I’m not going to attack them.\n\u003e\n\u003e * However, other sites like the Hallmark e-mail greeting cards site, an online forum you frequent, or an e-commerce site you’ve shopped at might not be as well prepared. So those are the ones I’d work on.\n\u003e\n\u003e * So, all we have to do now is unleash Brutus, wwwhack, or THC Hydra on their server with instructions to try say 10,000 (or 100,000 – whatever makes you happy) different usernames and passwords as fast as possible.\n\u003e\n\u003e * Once we’ve got several login+password pairings we can then go back and test them on targeted sites.\n\u003e\n\u003e * But wait… How do I know which bank you use and what your login ID is for the sites you frequent? All those cookies are simply stored, unencrypted and nicely named, in your Web browser’s cache.\n\nAny moderately-determined person could figure out how to hack passwords.\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/password-strength.jpg\"\u003e}}\n\nNormally, when you sign-up for a service, they don’t actually store your password. Instead they store a one-way *hash* of your password. What does this mean?\n\n* Real password: `monkeyfarts`\n* Hashed password (SHA–1): `a05727a789efdeaaa0b3f45e7f944c1f17691da6`.\n\nThis way, they don’t know your password (yay, security!), and since it’s a *one-way* hash, they can’t figure out your real password if all they have is the hashed password.\n\nBut here’s the problem: If someone were to get a giant list of hashed passwords, there are enough pieces of the puzzle there to be able to begin figuring out common password patterns.\n\nThis is what happened in 2009 when a site called RockYou got hacked and a giant (32.6 *million*) list of usernames and *hashed* passwords were stolen. (RockYou makes fun little things for Facebook, and used to make fun things for MySpace. There’s a very good chance that you’ve used something they’ve done.)\n\nIn [Brief Analysis of RockYou Passwords]({{% wayback \"http://www.passcape.com/index.php?section=blog\u0026cmd=details\u0026id=17\" %}}), we learn:\n\n\u003e * Dictionary passwords, that is, words like “password,” “monkey,” and so on, make one of the most stable groups.\n\u003e\n\u003e * Digital passwords based on easily memorized numeric combinations, phone numbers, document numbers, birth dates, and more make another group, which is as stable as the previous one, and maybe even more popular.\n\u003e\n\u003e * Passwords based on names and their derivatives. For example, a user may use the name of himself, his pet, some city, some place, and so on.\n\u003e\n\u003e * Passwords based on keyboard combinations, such as “abc123,” “qwerty,” etc.\n\u003e\n\u003e * Emotional passwords, such as “iloveyou,” “hateu,” “lovely,” “ihatemyboss,” or “ILoveJohn.”\n\u003e\n\u003e \\[…\\]\n\u003e\n\u003e Curiously enough, some users choose obscenely long passwords consisting of more than 20 characters, word combinations, or phrases. Here are some of these wonderful passwords (did you really think that nobody knows what you are typing?):\n\u003e\n\u003e * Hahaithinkilovejessebutthenagainmaybenotcuzheisadiknob\n\u003e\n\u003e * Lets you come back for your Countdown Timer\n\u003e * me plus food equals more sleep each night\n\u003e * tommmmmmmmmmmmmmmmmmmmmmmmmmmm\n\u003e * truongcaodangcongdonghaiphong\n\u003e * icantbelievethisshit.12345\n\u003e * banditbanditbandit1bandit1bandit1banditbandit\n\u003e * 11111111111111111111111111111111111111111111\n\u003e * aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\u003e * FUCKSCHOOLANDALLTHETEACHERSINIT\n\u003e * ilovepalmermyfuturehusband\n\u003e * 1delightyourselfinthelord!\n\u003e * Imaprincessbecausemyfatheristheking\n\u003e * iluvanjabisset4evashesmawebaexxx\n\u003e * stuartandchrisrmybestmatesforeva\n\u003e * thisismypasswordyoullnevergetit\n\nJust for fun, I downloaded a copy of [hashcat]({{% wayback \"http://hashcat.net/hashcat/\" %}}) and the [rockyou.txt]({{% wayback \"http://wiki.skullsecurity.org/Passwords\" %}}) list of hashed passwords. Within 30 minutes, I’d managed to crack several thousand passwords from the list.\n\nThis is not hard to do.\n\n## Okay, okay. What should I do differently?\n\nFirst of all, if you’re using *password* as your password, you’re fired.\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/ive-made-a-huge-mistake@2x.png\"\u003e}}\n\n1. Don’t use a word that can be found in the dictionary.\n\n2. If you choose to use a word, replace some of the letters with numbers or special characters. (Instead of `monkeyfarts`, use `m0ñKeyƒår†s`.)\n\n3. The longer the password, the better. Most sites require a minimum of 6 characters. I’d say to use a minimum of 10 characters. (Most of mine are in the 24–32 character range.)\n\n4. Don’t use the same password twice. I know this may seem hard, but let’s get to the next bullet-point.\n\n5. Stop trying to memorize your passwords. Let a password manager do it for you. [1Password]({{% wayback \"https://agilebits.com/onepassword\" %}}), [LastPass]({{% wayback \"https://lastpass.com\" %}}) and [Password Safe]({{% wayback \"http://passwordsafe.sourceforge.net\" %}}) are all good solutions.\n\n6. Enhance your passwords with a second level of security. If a service you use supports Two-Factor Authentication (or Multi-Factor Authentication), enable it. This way, even if your password gets hacked, they won’t be able to access your account without a special code that only you have.\n\n    * Lots of services are adding support: App.net, Apple, Amazon Web Services, Dreamhost, Dropbox, Evernote, Facebook, GoDaddy, Google, Microsoft (including Hotmail, MSN \u0026 Xbox Live), Paypal, Stripe.com, Yahoo!, WordPress.com (including Gravatar), and more!\n\nIf you’re worried about someone (perhaps someone you know) figuring out your password and using it for nefarious purposes (including simply violating your personal privacy, e.g., checking your messages, reading your emails), I would **highly recommend** doing all 6 things on this list.\n\n## Got it. What else can I do?\n\nLots and lots. Siraj Datoo published a really good list on Quartz called [The complete guide to not being that idiot who got the company hacked]({{% wayback \"http://qz.com/120946/the-complete-guide-to-not-being-that-idiot-who-got-the-company-hacked/\" %}}). This list is good for the home as well. I would encourage you to read the whole post, but here are the bullet points:\n\n1. Install [HTTPS Everywhere]({{% wayback \"https://www.eff.org/https-everywhere\" %}}) in your browser. (Switches to secured HTTPS traffic for several popular sites, among other things.)\n\n2. Put a password on your home Wi-Fi. (Also: Use the `WPA2` security mode.)\n\n3. Put passwords on all your devices. (Quit butt-dialing me like my friend Lindsey.)\n\n4. Employ two-step authentication on everything. (We already covered this.)\n\n5. Encrypt your laptop’s hard drive, especially if it’s a Mac. (It’s really easy on a Mac. System Preferences → Security → FileVault.)\n\n6. Never send or save your password electronically. (Email, IMs and other forms of electronic communication leave a trail. Don’t be the weakest link.)\n\n7. Use 1Password or a similar service. (We already covered this.)\n\n8. Read your emails carefully to avoid phishing attempts.\n\n9. Take precautions when you use an open Wi-Fi network. (Anybody can connect to an open network and listen for unsecured web traffic to figure out your secrets. This is a very easy thing to do.)\n\n10. Know which applications are connecting to the Internet. (If you have a Mac, [Little Snitch]({{% wayback \"https://www.obdev.at/products/littlesnitch/index.html\" %}}) is a worthwhile investment.)\n"},
    "links": {
        "prev": {"title": "Apple’s 2013 iPad Announcement", "permalink": "https://ryanparman.com/posts/2013/apples-2013-ipad-announcement/"},
        "next": {"title": "FISA, The NSA, PRISM and Edward Snowden", "permalink": "https://ryanparman.com/posts/2013/fisa-the-nsa-prism-and-edward-snowden/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Breaking my bad password habits with 1Password, Authy, OAuth and OpenID",
    "description": "",
    "summary": {
        "content": "I learned at a relatively young age what makes a good password versus a bad password, and I’ve tried to always use these qualities in the passwords that I choose. The Problem Unfortunately, even with the best intentions, you inevitably end up re-using one or a few passwords across every single website you log into. Some people do things as dumb as using the name of their significant other. Or their pet. Or a birthdate. Or something else equally guessable by one of the many supercomputers that exist (whereby “supercomputer”, I mean pretty much any computer invented in the past 5–7 years).",
        "isTruncated": true
    },
    "published": "2013-08-10T09:03:48Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2013/breaking-my-bad-password-habits-with-1password-authy-oauth-openid/",
    "relativePermalink": "/posts/2013/breaking-my-bad-password-habits-with-1password-authy-oauth-openid/",
    "aliases": ["/2013/08/10/breaking-my-bad-password-habits-with-1password-authy-oauth-openid/"],
    "images": ["https://cdn.ryanparman.com/hugo/posts/2013/1password@2x.png", "https://cdn.ryanparman.com/hugo/posts/2013/password-hacking@2x.jpg", "https://cdn.ryanparman.com/hugo/posts/2013/oauth@2x.png", "https://cdn.ryanparman.com/hugo/posts/2013/authy.jpg", "https://cdn.ryanparman.com/hugo/posts/2013/shepherd-book@2x.jpg", "https://cdn.ryanparman.com/hugo/posts/2013/excited@2x.jpg"],
    "videos": [],
    "categories": ["Privacy and Security"],
    "tags": ["1password", "passwords", "authy", "oauth", "openid", "hacking", "sony", "playstation", "multifactor authentication", "app.net", "apple", "aws", "dreamhost", "dropbox", "evernote", "facebook", "godaddy", "google", "microsoft", "hotmail", "xbox", "paypal", "stripe", "wordpress", "gravatar"],
    "series": ["Editors Choice", "Passwords"],
    "keywords": [],
    "meta": {
        "wordCount": 1278,
        "readingTime": "6 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2013/20130810-breaking-my-bad-password-habits-with-1password-authy-oauth-openid.md",
        "logicalName": "20130810-breaking-my-bad-password-habits-with-1password-authy-oauth-openid.md",
        "translationBaseName": "20130810-breaking-my-bad-password-habits-with-1password-authy-oauth-openid",
        "baseFileName": "20130810-breaking-my-bad-password-habits-with-1password-authy-oauth-openid",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2013/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#the-problem\"\u003eThe Problem\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#enter-1password\"\u003eEnter 1Password\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#openid-and-oauth\"\u003eOpenID and OAuth\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#sonys-playstation-network-got-hacked\"\u003eSony’s Playstation Network got hacked\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#authy-and-2-factor-authentication\"\u003eAuthy and 2-Factor Authentication\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#changing-every-password\"\u003eChanging every password\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#end\"\u003eEnd\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#update\"\u003eUpdate\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp itemprop=\"description\" class=\"f5 f4-m f3-l mt0 lh-copy p-summary entry-summary\"\u003e\nI learned at a relatively young age what makes a good password versus a bad password, and I’ve tried to always use these qualities in the passwords that I choose.\n\u003c/p\u003e\n\n\u003cdiv class=\"pa2-ns\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2013/password-hacking@2x.jpg\" layout=\"responsive\" width=\"\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"the-problem\"\u003eThe Problem\u003c/h2\u003e\n\u003cp\u003eUnfortunately, even with the best intentions, you inevitably end up re-using one or a few passwords across every single website you log into. Some people do things as dumb as using the name of their significant other. Or their pet. Or a birthdate. Or something else equally guessable by one of the many supercomputers that exist (whereby “supercomputer”, I mean pretty much any computer invented in the past 5–7 years).\u003c/p\u003e\n\u003cp\u003eMy approach was this: Whenever a website would auto-generate a random password for me, instead of changing it to something I could remember, I simply memorized it. They were usually a blend of 8 alphanumeric and/or symbol characters. Nothing too wild, but after a while, I established some muscle memory around typing them and began to rely on them. This is a better approach than most people use, but it’s still a terrible practice. Over time, I began appending special characters here, or prepending them there. Sometimes I would stick a dollar sign or two somewhere in the middle to mix things up.\u003c/p\u003e\n\u003ch2 id=\"enter-1password\"\u003eEnter 1Password\u003c/h2\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2013/1password@2x.png\" layout=\"responsive\" width=\"\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eThen in 2008, I discovered a piece of software called \u003ca href=\"https://web.archive.org/web/20130810090348/https://agilebits.com/onepassword\"\u003e1Password\u003c/a\u003e. Initially I balked at the price. \u0026ldquo;You want me to \u003cem\u003epay\u003c/em\u003e for software?!\u0026rdquo; Clearly I was still in a Windows-user’s state of mind when it came to things like that. But I sucked it up, bought a license, and started using it regularly.\u003c/p\u003e\n\u003cp\u003eIt is the single best investment I’ve ever made. Software-wise, anyway.\u003c/p\u003e\n\u003ch2 id=\"openid-and-oauth\"\u003eOpenID and OAuth\u003c/h2\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2013/oauth@2x.png\" layout=\"responsive\" width=\"\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eAround the same time as when I discovered 1Password, I also learned about something called \u003ca href=\"https://web.archive.org/web/20130810090348/http://openid.net\"\u003eOpenID\u003c/a\u003e. The approach that OpenID takes is known as \u003cem\u003eFederated Identity\u003c/em\u003e. It’s essentially a system where two people don’t know or trust each other, but they both trust a third person, and that third person vouches for each of the first two. Eric and Jeff don’t know each other, but they both know me. I vouch for Jeff with Eric saying that he’s a cool dude, and vice-versa. Make sense?\u003c/p\u003e\n\u003cp\u003eIt allowed me to trust a company of my choosing to vouch for me, whenever I came to log into sites which supported OpenID. If something happened and I didn’t trust that middle company any more, I could simply change the company/service which vouched for me. In that way, I only had to remember the username and password for that one company that was vouching for me, instead of having to create all-new accounts for every service I signed-up for.\u003c/p\u003e\n\u003cp\u003eBut there were some quirks that made OpenID a bit harder to understand for normal folks, so the great minds of the Internet got together and bore a different system known as \u003ca href=\"https://web.archive.org/web/20130810090348/http://oauth.net\"\u003eOAuth\u003c/a\u003e. You know all of those sites you visit that have a big blue button that says “Login with Facebook”? That’s OAuth in action.\u003c/p\u003e\n\u003cp\u003eOAuth works a bit differently behind the scenes. You say, “I want to sign up for your site”. The website says, \u0026ldquo;Either give me your information so I can register you, or you can \u003cem\u003eauthorize\u003c/em\u003e me to get your information from someone else who already has it.\u0026rdquo; And you respond with, “Sure. Facebook has it.” You then click the blue button, tell Facebook that you authorize the new site to pull your information, and away you go. Between the two approaches, OAuth is used about a zillion times more often than OpenID is.\u003c/p\u003e\n\u003cp\u003eI would recommend using OpenID or OAuth for handling your login information if at all possible because it reduces the number of passwords you need to keep track of.\u003c/p\u003e\n\u003ch2 id=\"sonys-playstation-network-got-hacked\"\u003eSony’s Playstation Network got hacked\u003c/h2\u003e\n\u003cp\u003eRemember when this happened? Where Sony was storing passwords in \u003cem\u003em********king plain text?!\u003c/em\u003e (To paraphrase Shepherd Book from \u003cem\u003eFirefly/Serenity\u003c/em\u003e, there is a special place in Hell for people who rape, murder, talk during movies, and store passwords in plain text.)\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2013/shepherd-book@2x.jpg\" layout=\"responsive\" width=\"\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eIn short, one of my hard-to-guess-but-used-in-lots-of-places passwords was one of the ones that was obtained by hackers. As such, I had the fine work ahead of me to change the password for every single site that used the password that got hacked.\u003c/p\u003e\n\u003cp\u003e1Password to the rescue! It took me about 90 minutes, but I was able to lookup all of the sites where this password was being used, and change the password for all of them. This event ended up making me re-think how I managed my passwords.\u003c/p\u003e\n\u003ch2 id=\"authy-and-2-factor-authentication\"\u003eAuthy and 2-Factor Authentication\u003c/h2\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2013/authy.jpg\" layout=\"responsive\" width=\"\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eOver the past couple of years, I’ve started to see more and more websites begin leveraging something called 2-Factor Authentication (or, Multi-Factor Authentication). This is where besides having the username and password (i.e., the first “factor”), you also need a code from a key fob or something else that you have with you at all times (i.e., the second “factor”). This way, even if somebody figured out your username and password, they still wouldn’t be able to get into your account unless they also had either a key fob with a code, or more commonly, your cell phone.\u003c/p\u003e\n\u003cp\u003eBesides having a key fob for logging into my company’s VPN remotely, I’d never heard of 2-Factor Authentication until Amazon Web Services announced it as a new feature of their \u003cem\u003eIdentity and Access Management (IAM)\u003c/em\u003e service. The Google added support for it. Then Facebook added support. Then a few more services added support. Most of them leveraged an app that ran on modern smartphones called \u003cem\u003eGoogle Authenticator\u003c/em\u003e which would generate a code that you could type in after your username and password.\u003c/p\u003e\n\u003cp\u003eWhen \u003ca href=\"https://web.archive.org/web/20130810090348/https://alpha.app.net\"\u003eADN\u003c/a\u003e added support for it was when I learned about \u003ca href=\"https://web.archive.org/web/20130810090348/https://authy.com\"\u003eAuthy\u003c/a\u003e. Besides looking and working WAY better than Google Authenticator, it supported lots of different accounts. The switch was a no-brainer.\u003c/p\u003e\n\u003cp\u003eSites that I’m currently aware of that support 2-Factor Authentication are:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eADN (aka, App.net)\u003c/li\u003e\n\u003cli\u003eApple (account management, only)\u003c/li\u003e\n\u003cli\u003eAmazon Web Services (AWS)\u003c/li\u003e\n\u003cli\u003eDreamhost\u003c/li\u003e\n\u003cli\u003eDropbox\u003c/li\u003e\n\u003cli\u003eEvernote (Premium accounts)\u003c/li\u003e\n\u003cli\u003eFacebook\u003c/li\u003e\n\u003cli\u003eGoDaddy\u003c/li\u003e\n\u003cli\u003eGoogle\u003c/li\u003e\n\u003cli\u003eMicrosoft (including Hotmail \u0026amp; Xbox)\u003c/li\u003e\n\u003cli\u003ePaypal\u003c/li\u003e\n\u003cli\u003eStripe.com\u003c/li\u003e\n\u003cli\u003eWordPress.com (including Gravatar)\u003c/li\u003e\n\u003cli\u003eand more!\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eYou can even install the Authy plugin in your self-hosted WordPress installation to enable extra security for your blog. I would absolutely recommend enabling 2-Factor Authentication (using Authy, of course) for every single service you use that supports it.\u003c/p\u003e\n\u003ch2 id=\"changing-every-password\"\u003eChanging every password\u003c/h2\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2013/excited@2x.jpg\" layout=\"responsive\" width=\"\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003e2 days ago, I decided to bite the bullet and put in the work to change \u003cem\u003eevery single password\u003c/em\u003e I had stored in 1Password (around 250). Using their built-in password generator, I created a brand-new, completely randomized password, using a mix of upper/lower-case letters, numbers and symbols. These new passwords are all 24–30 characters long, except for services that required shorter ones, or only allowed alphanumeric characters.\u003c/p\u003e\n\u003cp\u003eI have absolutely no idea what any of my passwords are. But I’m relying on 1Password to manage them for me, and to sync them to the copies of 1Password I have installed on my iPhone and iPads.\u003c/p\u003e\n\u003cp\u003eCouple long, randomly-generated passwords, with 2-Factor Authentication, and I’m never worried about getting hacked. If Sony gets their servers hacked again and that password gets stolen, no worries. I’ll just create a new randomly-generated password for it and keep right on going.\u003c/p\u003e\n\u003ch2 id=\"end\"\u003eEnd\u003c/h2\u003e\n\u003cp\u003eYes this was several hours of work, but I believe was well-worth it. If you can swing it, I would confidently — even \u003cem\u003eexuberantly\u003c/em\u003e — recommend 1Password to anyone just getting started with making their online life more secure. Definitely take a look at Authy as well, and start leveraging OpenID and OAuth logins on every site that supports them. You’ll be better off for it.\u003c/p\u003e\n\u003ch2 id=\"update\"\u003eUpdate\u003c/h2\u003e\n\u003cp\u003eSee my follow-up post: \u003ca href=\"/2013/08/10/things-i-learned-about-how-websites-manage-passwords/\"\u003e“Things I learned about how websites manage passwords”\u003c/a\u003e.\u003c/p\u003e\n",
        "plain":"I learned at a relatively young age what makes a good password versus a bad password, and I’ve tried to always use these qualities in the passwords that I choose.   The Problem Unfortunately, even with the best intentions, you inevitably end up re-using one or a few passwords across every single website you log into. Some people do things as dumb as using the name of their significant other. Or their pet. Or a birthdate. Or something else equally guessable by one of the many supercomputers that exist (whereby “supercomputer”, I mean pretty much any computer invented in the past 5–7 years).\nMy approach was this: Whenever a website would auto-generate a random password for me, instead of changing it to something I could remember, I simply memorized it. They were usually a blend of 8 alphanumeric and/or symbol characters. Nothing too wild, but after a while, I established some muscle memory around typing them and began to rely on them. This is a better approach than most people use, but it’s still a terrible practice. Over time, I began appending special characters here, or prepending them there. Sometimes I would stick a dollar sign or two somewhere in the middle to mix things up.\nEnter 1Password   Then in 2008, I discovered a piece of software called 1Password. Initially I balked at the price. \u0026ldquo;You want me to pay for software?!\u0026rdquo; Clearly I was still in a Windows-user’s state of mind when it came to things like that. But I sucked it up, bought a license, and started using it regularly.\nIt is the single best investment I’ve ever made. Software-wise, anyway.\nOpenID and OAuth   Around the same time as when I discovered 1Password, I also learned about something called OpenID. The approach that OpenID takes is known as Federated Identity. It’s essentially a system where two people don’t know or trust each other, but they both trust a third person, and that third person vouches for each of the first two. Eric and Jeff don’t know each other, but they both know me. I vouch for Jeff with Eric saying that he’s a cool dude, and vice-versa. Make sense?\nIt allowed me to trust a company of my choosing to vouch for me, whenever I came to log into sites which supported OpenID. If something happened and I didn’t trust that middle company any more, I could simply change the company/service which vouched for me. In that way, I only had to remember the username and password for that one company that was vouching for me, instead of having to create all-new accounts for every service I signed-up for.\nBut there were some quirks that made OpenID a bit harder to understand for normal folks, so the great minds of the Internet got together and bore a different system known as OAuth. You know all of those sites you visit that have a big blue button that says “Login with Facebook”? That’s OAuth in action.\nOAuth works a bit differently behind the scenes. You say, “I want to sign up for your site”. The website says, \u0026ldquo;Either give me your information so I can register you, or you can authorize me to get your information from someone else who already has it.\u0026rdquo; And you respond with, “Sure. Facebook has it.” You then click the blue button, tell Facebook that you authorize the new site to pull your information, and away you go. Between the two approaches, OAuth is used about a zillion times more often than OpenID is.\nI would recommend using OpenID or OAuth for handling your login information if at all possible because it reduces the number of passwords you need to keep track of.\nSony’s Playstation Network got hacked Remember when this happened? Where Sony was storing passwords in m********king plain text?! (To paraphrase Shepherd Book from Firefly/Serenity, there is a special place in Hell for people who rape, murder, talk during movies, and store passwords in plain text.)\n  In short, one of my hard-to-guess-but-used-in-lots-of-places passwords was one of the ones that was obtained by hackers. As such, I had the fine work ahead of me to change the password for every single site that used the password that got hacked.\n1Password to the rescue! It took me about 90 minutes, but I was able to lookup all of the sites where this password was being used, and change the password for all of them. This event ended up making me re-think how I managed my passwords.\nAuthy and 2-Factor Authentication   Over the past couple of years, I’ve started to see more and more websites begin leveraging something called 2-Factor Authentication (or, Multi-Factor Authentication). This is where besides having the username and password (i.e., the first “factor”), you also need a code from a key fob or something else that you have with you at all times (i.e., the second “factor”). This way, even if somebody figured out your username and password, they still wouldn’t be able to get into your account unless they also had either a key fob with a code, or more commonly, your cell phone.\nBesides having a key fob for logging into my company’s VPN remotely, I’d never heard of 2-Factor Authentication until Amazon Web Services announced it as a new feature of their Identity and Access Management (IAM) service. The Google added support for it. Then Facebook added support. Then a few more services added support. Most of them leveraged an app that ran on modern smartphones called Google Authenticator which would generate a code that you could type in after your username and password.\nWhen ADN added support for it was when I learned about Authy. Besides looking and working WAY better than Google Authenticator, it supported lots of different accounts. The switch was a no-brainer.\nSites that I’m currently aware of that support 2-Factor Authentication are:\n ADN (aka, App.net) Apple (account management, only) Amazon Web Services (AWS) Dreamhost Dropbox Evernote (Premium accounts) Facebook GoDaddy Google Microsoft (including Hotmail \u0026amp; Xbox) Paypal Stripe.com WordPress.com (including Gravatar) and more!  You can even install the Authy plugin in your self-hosted WordPress installation to enable extra security for your blog. I would absolutely recommend enabling 2-Factor Authentication (using Authy, of course) for every single service you use that supports it.\nChanging every password   2 days ago, I decided to bite the bullet and put in the work to change every single password I had stored in 1Password (around 250). Using their built-in password generator, I created a brand-new, completely randomized password, using a mix of upper/lower-case letters, numbers and symbols. These new passwords are all 24–30 characters long, except for services that required shorter ones, or only allowed alphanumeric characters.\nI have absolutely no idea what any of my passwords are. But I’m relying on 1Password to manage them for me, and to sync them to the copies of 1Password I have installed on my iPhone and iPads.\nCouple long, randomly-generated passwords, with 2-Factor Authentication, and I’m never worried about getting hacked. If Sony gets their servers hacked again and that password gets stolen, no worries. I’ll just create a new randomly-generated password for it and keep right on going.\nEnd Yes this was several hours of work, but I believe was well-worth it. If you can swing it, I would confidently — even exuberantly — recommend 1Password to anyone just getting started with making their online life more secure. Definitely take a look at Authy as well, and start leveraging OpenID and OAuth logins on every site that supports them. You’ll be better off for it.\nUpdate See my follow-up post: “Things I learned about how websites manage passwords”.\n",
        "source":"\n{{\u003c description \u003e}}\nI learned at a relatively young age what makes a good password versus a bad password, and I’ve tried to always use these qualities in the passwords that I choose.\n{{\u003c /description \u003e}}\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/password-hacking@2x.jpg\"\u003e}}\n\n## The Problem\n\nUnfortunately, even with the best intentions, you inevitably end up re-using one or a few passwords across every single website you log into. Some people do things as dumb as using the name of their significant other. Or their pet. Or a birthdate. Or something else equally guessable by one of the many supercomputers that exist (whereby “supercomputer”, I mean pretty much any computer invented in the past 5–7 years).\n\nMy approach was this: Whenever a website would auto-generate a random password for me, instead of changing it to something I could remember, I simply memorized it. They were usually a blend of 8 alphanumeric and/or symbol characters. Nothing too wild, but after a while, I established some muscle memory around typing them and began to rely on them. This is a better approach than most people use, but it’s still a terrible practice. Over time, I began appending special characters here, or prepending them there. Sometimes I would stick a dollar sign or two somewhere in the middle to mix things up.\n\n## Enter 1Password\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/1password@2x.png\"\u003e}}\n\nThen in 2008, I discovered a piece of software called [1Password]({{% wayback \"https://agilebits.com/onepassword\" %}}). Initially I balked at the price. \"You want me to *pay* for software?!\" Clearly I was still in a Windows-user’s state of mind when it came to things like that. But I sucked it up, bought a license, and started using it regularly.\n\nIt is the single best investment I’ve ever made. Software-wise, anyway.\n\n## OpenID and OAuth\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/oauth@2x.png\"\u003e}}\n\nAround the same time as when I discovered 1Password, I also learned about something called [OpenID]({{% wayback \"http://openid.net\" %}}). The approach that OpenID takes is known as *Federated Identity*. It’s essentially a system where two people don’t know or trust each other, but they both trust a third person, and that third person vouches for each of the first two. Eric and Jeff don’t know each other, but they both know me. I vouch for Jeff with Eric saying that he’s a cool dude, and vice-versa. Make sense?\n\nIt allowed me to trust a company of my choosing to vouch for me, whenever I came to log into sites which supported OpenID. If something happened and I didn’t trust that middle company any more, I could simply change the company/service which vouched for me. In that way, I only had to remember the username and password for that one company that was vouching for me, instead of having to create all-new accounts for every service I signed-up for.\n\nBut there were some quirks that made OpenID a bit harder to understand for normal folks, so the great minds of the Internet got together and bore a different system known as [OAuth]({{% wayback \"http://oauth.net\" %}}). You know all of those sites you visit that have a big blue button that says “Login with Facebook”? That’s OAuth in action.\n\nOAuth works a bit differently behind the scenes. You say, “I want to sign up for your site”. The website says, \"Either give me your information so I can register you, or you can *authorize* me to get your information from someone else who already has it.\" And you respond with, “Sure. Facebook has it.” You then click the blue button, tell Facebook that you authorize the new site to pull your information, and away you go. Between the two approaches, OAuth is used about a zillion times more often than OpenID is.\n\nI would recommend using OpenID or OAuth for handling your login information if at all possible because it reduces the number of passwords you need to keep track of.\n\n## Sony’s Playstation Network got hacked\n\nRemember when this happened? Where Sony was storing passwords in *m\\*\\*\\*\\*\\*\\*\\*\\*king plain text?!* (To paraphrase Shepherd Book from *Firefly/Serenity*, there is a special place in Hell for people who rape, murder, talk during movies, and store passwords in plain text.)\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/shepherd-book@2x.jpg\"\u003e}}\n\nIn short, one of my hard-to-guess-but-used-in-lots-of-places passwords was one of the ones that was obtained by hackers. As such, I had the fine work ahead of me to change the password for every single site that used the password that got hacked.\n\n1Password to the rescue! It took me about 90 minutes, but I was able to lookup all of the sites where this password was being used, and change the password for all of them. This event ended up making me re-think how I managed my passwords.\n\n## Authy and 2-Factor Authentication\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/authy.jpg\"\u003e}}\n\nOver the past couple of years, I’ve started to see more and more websites begin leveraging something called 2-Factor Authentication (or, Multi-Factor Authentication). This is where besides having the username and password (i.e., the first “factor”), you also need a code from a key fob or something else that you have with you at all times (i.e., the second “factor”). This way, even if somebody figured out your username and password, they still wouldn’t be able to get into your account unless they also had either a key fob with a code, or more commonly, your cell phone.\n\nBesides having a key fob for logging into my company’s VPN remotely, I’d never heard of 2-Factor Authentication until Amazon Web Services announced it as a new feature of their *Identity and Access Management (IAM)* service. The Google added support for it. Then Facebook added support. Then a few more services added support. Most of them leveraged an app that ran on modern smartphones called *Google Authenticator* which would generate a code that you could type in after your username and password.\n\nWhen [ADN]({{% wayback \"https://alpha.app.net\" %}}) added support for it was when I learned about [Authy]({{% wayback \"https://authy.com\" %}}). Besides looking and working WAY better than Google Authenticator, it supported lots of different accounts. The switch was a no-brainer.\n\nSites that I’m currently aware of that support 2-Factor Authentication are:\n\n* ADN (aka, App.net)\n* Apple (account management, only)\n* Amazon Web Services (AWS)\n* Dreamhost\n* Dropbox\n* Evernote (Premium accounts)\n* Facebook\n* GoDaddy\n* Google\n* Microsoft (including Hotmail \u0026 Xbox)\n* Paypal\n* Stripe.com\n* WordPress.com (including Gravatar)\n* and more!\n\nYou can even install the Authy plugin in your self-hosted WordPress installation to enable extra security for your blog. I would absolutely recommend enabling 2-Factor Authentication (using Authy, of course) for every single service you use that supports it.\n\n## Changing every password\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/excited@2x.jpg\"\u003e}}\n\n2 days ago, I decided to bite the bullet and put in the work to change *every single password* I had stored in 1Password (around 250). Using their built-in password generator, I created a brand-new, completely randomized password, using a mix of upper/lower-case letters, numbers and symbols. These new passwords are all 24–30 characters long, except for services that required shorter ones, or only allowed alphanumeric characters.\n\nI have absolutely no idea what any of my passwords are. But I’m relying on 1Password to manage them for me, and to sync them to the copies of 1Password I have installed on my iPhone and iPads.\n\nCouple long, randomly-generated passwords, with 2-Factor Authentication, and I’m never worried about getting hacked. If Sony gets their servers hacked again and that password gets stolen, no worries. I’ll just create a new randomly-generated password for it and keep right on going.\n\n## End\n\nYes this was several hours of work, but I believe was well-worth it. If you can swing it, I would confidently — even *exuberantly* — recommend 1Password to anyone just getting started with making their online life more secure. Definitely take a look at Authy as well, and start leveraging OpenID and OAuth logins on every site that supports them. You’ll be better off for it.\n\n## Update\n\nSee my follow-up post: [“Things I learned about how websites manage passwords”](/2013/08/10/things-i-learned-about-how-websites-manage-passwords/).\n"},
    "links": {
        "prev": {"title": "Running", "permalink": "https://ryanparman.com/posts/2013/running/"},
        "next": {"title": "Things I learned about how websites manage passwords", "permalink": "https://ryanparman.com/posts/2013/things-i-learned-about-how-websites-manage-passwords/"},
        "ignore": "me"
    }
}

            
        ]
    }
}
