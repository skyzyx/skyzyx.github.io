{
    "data": {
        
        
        "count": 1,
        "items": [
            
            {
    "kind": "page",
    "title": "Easily SSH into Amazon EC2 instances using the Name tag",
    "description": "",
    "summary": {
        "content": "It’s been a while since I’ve written about code, so I thought I’d post this little AWS-related tip for OS X and Linux users. If you have the Unified AWS CLI Tools configured, you can add these functions to your Bash profile (typically either ~/.bash_profile or ~/.profile) to enable you to SSH into an instance by “Name” tag, or simply lookup the IP address or DNS hostname. hostname_from_instance \u0026lt;instance-name\u0026gt; ip_from_instance \u0026lt;instance-name\u0026gt; ssh-aws \u0026lt;instance-name\u0026gt; Bash code function hostname_from_instance() { echo $(aws ec2 describe-instances --filters \u0026#34;{\\\u0026#34;Name\\\u0026#34;:\\\u0026#34;tag:Name\\\u0026#34;, \\\u0026#34;Values\\\u0026#34;:[\\\u0026#34;$1\\\u0026#34;]}\u0026#34; --query=\u0026#39;Reservations[0].",
        "isTruncated": true
    },
    "published": "2014-01-29T10:42:14Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2014/easily-ssh-into-amazon-ec2-instances-using-the-name-tag/",
    "relativePermalink": "/posts/2014/easily-ssh-into-amazon-ec2-instances-using-the-name-tag/",
    "aliases": ["/2014/01/29/easily-ssh-into-amazon-ec2-instances-using-the-name-tag/"],
    "images": [],
    "videos": [],
    "categories": ["Projects and Code"],
    "tags": ["aws", "ec2", "ssh", "aws-cli", "jmespath"],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 268,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2014/20140129-easily-ssh-into-amazon-ec2-instances-using-the-name-tag.md",
        "logicalName": "20140129-easily-ssh-into-amazon-ec2-instances-using-the-name-tag.md",
        "translationBaseName": "20140129-easily-ssh-into-amazon-ec2-instances-using-the-name-tag",
        "baseFileName": "20140129-easily-ssh-into-amazon-ec2-instances-using-the-name-tag",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2014/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#bash-code\"\u003eBash code\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#notes\"\u003eNotes\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#references\"\u003eReferences\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eIt’s been a while since I’ve written about code, so I thought I’d post this little AWS-related tip for OS X and Linux users.\u003c/p\u003e\n\u003cp\u003eIf you have the \u003ca href=\"https://web.archive.org/web/20140129104214/https://github.com/aws/aws-cli/\"\u003eUnified AWS CLI Tools\u003c/a\u003e configured, you can add these functions to your Bash profile (typically either \u003ccode\u003e~/.bash_profile\u003c/code\u003e or \u003ccode\u003e~/.profile\u003c/code\u003e) to enable you to SSH into an instance by “Name” tag, or simply lookup the IP address or DNS hostname.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ehostname_from_instance \u0026lt;instance-name\u0026gt;\n\nip_from_instance \u0026lt;instance-name\u0026gt;\n\nssh-aws \u0026lt;instance-name\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"bash-code\"\u003eBash code\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e hostname_from_instance\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n    echo \u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003eaws ec2 describe-instances --filters \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{\\\u0026#34;Name\\\u0026#34;:\\\u0026#34;tag:Name\\\u0026#34;, \\\u0026#34;Values\\\u0026#34;:[\\\u0026#34;\u003c/span\u003e$1\u003cspan style=\"color:#e6db74\"\u003e\\\u0026#34;]}\u0026#34;\u003c/span\u003e --query\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Reservations[0].Instances[0].PublicDnsName\u0026#39;\u003c/span\u003e | tr -d \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\n\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e ip_from_instance\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n    echo \u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003eaws ec2 describe-instances --filters \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{\\\u0026#34;Name\\\u0026#34;:\\\u0026#34;tag:Name\\\u0026#34;, \\\u0026#34;Values\\\u0026#34;:[\\\u0026#34;\u003c/span\u003e$1\u003cspan style=\"color:#e6db74\"\u003e\\\u0026#34;]}\u0026#34;\u003c/span\u003e --query\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;Reservations[0].Instances[0].PublicIpAddress\u0026#39;\u003c/span\u003e | tr -d \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\n\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e ssh-aws\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n    ssh -i ~/.ssh/your-keypair.pem ec2-user@\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003eip_from_instance \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$1\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"notes\"\u003eNotes\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eThis assumes that every instance you have has a unique “Name” tag, and will return the IP address or public DNS hostname of that instance (for use with SSH access). If multiple instances share the same “Name” tag, it will simply use the first “Name” match.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you’re running instances inside a (private) VPC, you should expect to lookup the public Elastic IP address for the instance.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you’re running instances inside a (public, classic) EC2, you should expect to lookup the public DNS hostname (unless you’ve configured an Elastic IP — in which case, go nuts).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the case where you’re running instances in the private subnet of a VPC, and SSH access to those instances is only possible from a bastion host in the public subnet, this is not the solution for you.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFeel free to tweak/adjust as necessary.\u003c/p\u003e\n\u003ch2 id=\"references\"\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20140129104214/https://github.com/aws/aws-cli/\"\u003eUnified AWS CLI Tools\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20140129104214/https://github.com/boto/jmespath\"\u003eJMESpath\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20140129104214/http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeInstances.html\"\u003eEC2 API Reference: DescribeInstances\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n",
        "plain":"It’s been a while since I’ve written about code, so I thought I’d post this little AWS-related tip for OS X and Linux users.\nIf you have the Unified AWS CLI Tools configured, you can add these functions to your Bash profile (typically either ~/.bash_profile or ~/.profile) to enable you to SSH into an instance by “Name” tag, or simply lookup the IP address or DNS hostname.\nhostname_from_instance \u0026lt;instance-name\u0026gt; ip_from_instance \u0026lt;instance-name\u0026gt; ssh-aws \u0026lt;instance-name\u0026gt; Bash code function hostname_from_instance() { echo $(aws ec2 describe-instances --filters \u0026#34;{\\\u0026#34;Name\\\u0026#34;:\\\u0026#34;tag:Name\\\u0026#34;, \\\u0026#34;Values\\\u0026#34;:[\\\u0026#34;$1\\\u0026#34;]}\u0026#34; --query=\u0026#39;Reservations[0].Instances[0].PublicDnsName\u0026#39; | tr -d \u0026#39;\u0026#34;\u0026#39;) } function ip_from_instance() { echo $(aws ec2 describe-instances --filters \u0026#34;{\\\u0026#34;Name\\\u0026#34;:\\\u0026#34;tag:Name\\\u0026#34;, \\\u0026#34;Values\\\u0026#34;:[\\\u0026#34;$1\\\u0026#34;]}\u0026#34; --query=\u0026#39;Reservations[0].Instances[0].PublicIpAddress\u0026#39; | tr -d \u0026#39;\u0026#34;\u0026#39;) } function ssh-aws() { ssh -i ~/.ssh/your-keypair.pem ec2-user@$(ip_from_instance \u0026#34;$1\u0026#34;) } Notes   This assumes that every instance you have has a unique “Name” tag, and will return the IP address or public DNS hostname of that instance (for use with SSH access). If multiple instances share the same “Name” tag, it will simply use the first “Name” match.\n  If you’re running instances inside a (private) VPC, you should expect to lookup the public Elastic IP address for the instance.\n  If you’re running instances inside a (public, classic) EC2, you should expect to lookup the public DNS hostname (unless you’ve configured an Elastic IP — in which case, go nuts).\n  In the case where you’re running instances in the private subnet of a VPC, and SSH access to those instances is only possible from a bastion host in the public subnet, this is not the solution for you.\n  Feel free to tweak/adjust as necessary.\nReferences  Unified AWS CLI Tools JMESpath EC2 API Reference: DescribeInstances  ",
        "source":"\nIt’s been a while since I’ve written about code, so I thought I’d post this little AWS-related tip for OS X and Linux users.\n\nIf you have the [Unified AWS CLI Tools]({{% wayback \"https://github.com/aws/aws-cli/\" %}}) configured, you can add these functions to your Bash profile (typically either `~/.bash_profile` or `~/.profile`) to enable you to SSH into an instance by “Name” tag, or simply lookup the IP address or DNS hostname.\n\n```bash\nhostname_from_instance \u003cinstance-name\u003e\n\nip_from_instance \u003cinstance-name\u003e\n\nssh-aws \u003cinstance-name\u003e\n```\n\n## Bash code\n\n```bash\nfunction hostname_from_instance() {\n    echo $(aws ec2 describe-instances --filters \"{\\\"Name\\\":\\\"tag:Name\\\", \\\"Values\\\":[\\\"$1\\\"]}\" --query='Reservations[0].Instances[0].PublicDnsName' | tr -d '\"')\n}\n\nfunction ip_from_instance() {\n    echo $(aws ec2 describe-instances --filters \"{\\\"Name\\\":\\\"tag:Name\\\", \\\"Values\\\":[\\\"$1\\\"]}\" --query='Reservations[0].Instances[0].PublicIpAddress' | tr -d '\"')\n}\n\nfunction ssh-aws() {\n    ssh -i ~/.ssh/your-keypair.pem ec2-user@$(ip_from_instance \"$1\")\n}\n```\n\n## Notes\n\n* This assumes that every instance you have has a unique “Name” tag, and will return the IP address or public DNS hostname of that instance (for use with SSH access). If multiple instances share the same “Name” tag, it will simply use the first “Name” match.\n\n* If you’re running instances inside a (private) VPC, you should expect to lookup the public Elastic IP address for the instance.\n\n* If you’re running instances inside a (public, classic) EC2, you should expect to lookup the public DNS hostname (unless you’ve configured an Elastic IP — in which case, go nuts).\n\n* In the case where you’re running instances in the private subnet of a VPC, and SSH access to those instances is only possible from a bastion host in the public subnet, this is not the solution for you.\n\nFeel free to tweak/adjust as necessary.\n\n## References\n\n* [Unified AWS CLI Tools]({{% wayback \"https://github.com/aws/aws-cli/\" %}})\n* [JMESpath]({{% wayback \"https://github.com/boto/jmespath\" %}})\n* [EC2 API Reference: DescribeInstances]({{% wayback \"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeInstances.html\" %}})\n"},
    "links": {
        "prev": {"title": "Games of the Year, 2013", "permalink": "https://ryanparman.com/posts/2014/games-of-the-year-2013/"},
        "next": {"title": "If your website supports passwords, please stop sucking at it", "permalink": "https://ryanparman.com/posts/2014/if-your-website-supports-passwords-please-stop-sucking-at-it/"},
        "ignore": "me"
    }
}

            
        ]
    }
}
