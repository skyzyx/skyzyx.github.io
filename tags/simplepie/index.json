{
    "data": {
        
        
        "count": 4,
        "items": [
            
            {
    "kind": "page",
    "title": "PHP, DOMDocument, XPath 1.0, Case-Insensitivity, and Performance",
    "description": "",
    "summary": {
        "content": "TL;DR: How I improved the performance of case-insensitive XPath queries by 30–35%, reducing an 8× performance hit to only 4.5–5×. This was originally posted to the SimplePie NG blog. Parse-at-all-costs Most feeds are a mess. The old SimplePie “OG” took a parse-at-all-costs philosophy, and could handle many of the most broken feeds you could find — at a cost. While the early versions of SimplePie supported the letter of the RSS 2.0 specification, there were a surprising number of feeds which didn’t.",
        "isTruncated": true
    },
    "published": "2018-02-04T00:26:21Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2018/php-domdocument-xpath-1-0-case-insensitivity-and-performance/",
    "relativePermalink": "/posts/2018/php-domdocument-xpath-1-0-case-insensitivity-and-performance/",
    "aliases": ["/2018/02/04/php-domdocument-xpath-1-0-case-insensitivity-and-performance"],
    "images": ["https://cdn.ryanparman.com/hugo/posts/2017/hackerman.jpg"],
    "videos": [],
    "categories": ["Projects and Code"],
    "tags": ["simplepie", "simplepie-ng", "php", "xpath", "xslt", "rss", "domdocument", "performance"],
    "series": ["Editors Choice"],
    "keywords": [],
    "meta": {
        "wordCount": 1178,
        "readingTime": "6 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2018/20180204-php-domdocument-xpath-1-0-case-insensitivity-and-performance.md",
        "logicalName": "20180204-php-domdocument-xpath-1-0-case-insensitivity-and-performance.md",
        "translationBaseName": "20180204-php-domdocument-xpath-1-0-case-insensitivity-and-performance",
        "baseFileName": "20180204-php-domdocument-xpath-1-0-case-insensitivity-and-performance",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2018/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#parse-at-all-costs\"\u003eParse-at-all-costs\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#introducing-xpath\"\u003eIntroducing XPath\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#performance-testing\"\u003ePerformance-testing\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#test-machine-and-environment\"\u003eTest machine and environment\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#first-pass-case-insensitive-with-xpath-translate\"\u003eFirst pass; Case-insensitive with XPath translate()\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#second-pass-normal-case-sensitive\"\u003eSecond pass; Normal, case-sensitive\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#experimentation\"\u003eExperimentation\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#xslt\"\u003eXSLT\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#enabling-php-functions-in-xpath\"\u003eEnabling PHP functions in XPath\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#simplify-translate\"\u003eSimplify translate()\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#wrapping-up\"\u003eWrapping-up\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp itemprop=\"description\" class=\"f5 f4-m f3-l mt0 lh-copy p-summary entry-summary\"\u003e\nTL;DR: How I improved the performance of case-insensitive XPath queries by 30–35%, reducing an 8× performance hit to only 4.5–5×.\n\u003c/p\u003e\n\n\n\u003caside class=\"age aside container flex\"\u003e\u003cp\u003eThis was originally posted to the \u003ca href=\"https://medium.com/simplepie-ng/php-domdocument-xpath-1-0-case-insensitivity-and-performance-ad962b98e71c\"\u003eSimplePie NG blog\u003c/a\u003e.\u003c/p\u003e\n\u003c/aside\u003e\n\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/hugo/posts/2017/hackerman.webp\" alt=\"Title card for “Hackerman”, a character from the short film “Kung Fury”. http://www.kungfury.com\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/hugo/posts/2017/hackerman.jpg\" alt=\"Title card for “Hackerman”, a character from the short film “Kung Fury”. http://www.kungfury.com\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"parse-at-all-costs\"\u003eParse-at-all-costs\u003c/h2\u003e\n\u003cp\u003eMost feeds are a mess. The old SimplePie “OG” took a parse-at-all-costs philosophy, and could handle many of the most broken feeds you could find — at a cost. While the early versions of SimplePie supported the letter of the RSS 2.0 specification, there were a surprising number of feeds which didn’t.\u003c/p\u003e\n\u003cp\u003eOnce SimplePie started to get popular (2006–2008), we started getting bug reports from users who were working with RSS feeds containing elements such as \u003ccode\u003e\u0026lt;pubdate\u0026gt;\u003c/code\u003e (instead of \u003ca href=\"https://web.archive.org/web/20180204002621/http://www.rssboard.org/rss-specification\"\u003e\u003ccode\u003e\u0026lt;pubDate\u0026gt;\u003c/code\u003e\u003c/a\u003e) and \u003ccode\u003e\u0026lt;managingeditor\u0026gt;\u003c/code\u003e (instead of \u003ca href=\"https://web.archive.org/web/20180204002621/http://www.rssboard.org/rss-specification\"\u003e\u003ccode\u003e\u0026lt;managingEditor\u0026gt;\u003c/code\u003e\u003c/a\u003e). At first we told users that the feeds were broken — which they were. But then we started getting enough reports that we decided to do something about it.\u003c/p\u003e\n\u003ch2 id=\"introducing-xpath\"\u003eIntroducing XPath\u003c/h2\u003e\n\u003cp\u003eFast-forward to the summer of 2017 when I started work on SimplePie NG in earnest. There are a number of things I’m doing differently (read: better) this time around. The first is that the \u003cem\u003efastest\u003c/em\u003e approach is the \u003cem\u003edefault\u003c/em\u003e approach. A corollary to this principle is that if you want to do more things, you will pay for them with performance penalties.\u003c/p\u003e\n\u003cp\u003eDuring my time working at Amazon Web Services on the SDK for PHP, I discovered some substantial performance gains by moving a lot of the response-parsing code to XPath. As such, the core XML parsing in SimplePie NG is all built around \u003ca href=\"https://web.archive.org/web/20180204002621/https://secure.php.net/domdocument\"\u003eDOMDocument\u003c/a\u003e and \u003ca href=\"https://web.archive.org/web/20180204002621/https://secure.php.net/domxpath\"\u003eXPath\u003c/a\u003e queries.\u003c/p\u003e\n\u003cp\u003eTo solve this case-insensitivity problem, \u003ca href=\"https://web.archive.org/web/20180204002621/https://stackoverflow.com/questions/2893551/case-insensitive-matching-in-xpath\"\u003esearching Stack Overflow for “case insensitive xpath”\u003c/a\u003e tells you about the XPath 2.0 functions \u003ca href=\"https://web.archive.org/web/20180204002621/https://www.w3.org/TR/xpath-functions/#func-matches\"\u003e\u003ccode\u003ematches()\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://web.archive.org/web/20180204002621/https://www.w3.org/TR/xpath-functions/#func-lower-case\"\u003e\u003ccode\u003elower-case()\u003c/code\u003e\u003c/a\u003e. However, I was surprised to learn that PHP only supports XPath 1.0. After doing some digging, the reason appears to be that the underlying \u003ca href=\"https://web.archive.org/web/20180204002621/http://xmlsoft.org\"\u003elibxml2\u003c/a\u003e library only supports XPath 1.0, with \u003ca href=\"https://web.archive.org/web/20180204002621/https://mail.gnome.org/archives/xml/2007-February/msg00077.html\"\u003eno updated support on the horizon\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe only alternative that Google and Stack Overflow had for me was the XPath 1.0 function, \u003ca href=\"https://web.archive.org/web/20180204002621/https://www.w3.org/TR/xpath/#function-translate\"\u003e\u003ccode\u003etranslate()\u003c/code\u003e\u003c/a\u003e. In PHP, the case-insensitive query for the \u003ccode\u003e\u0026lt;rss\u0026gt;\u003c/code\u003e element would be:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-php\" data-lang=\"php\"\u003e\u003cspan style=\"color:#f92672\"\u003e/*\u003c/span\u003e[\u003cspan style=\"color:#a6e22e\"\u003etranslate\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e(), \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;abcdefghijklmnopqrstuvwxyz\u0026#39;\u003c/span\u003e) \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;rss\u0026#39;\u003c/span\u003e]\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIt’s simple enough to turn this into a pattern inside of a function. Case-insensitive XML parsing. Done. Boo-yah.\u003c/p\u003e\n\u003ch2 id=\"performance-testing\"\u003ePerformance-testing\u003c/h2\u003e\n\u003cp\u003eA little while later, I started some early work on benchmarking SimplePie NG. I parsed a number of normal-sized feeds, and got back a bunch of perfectly reasonable results. But one thing that I wanted to test was memory usage to make sure there were no memory leaks.\u003c/p\u003e\n\u003cp\u003eI put together a quick and dirty test suite by starting with Tim Bray’s feed (one of the more nuanced and complex Atom 1.0 feeds), \u003ca href=\"https://web.archive.org/web/20180204002621/https://raw.githubusercontent.com/simplepie/simplepie-ng/master/tests/Integration/feeds/full/atom10/tim-bray-500.xml\"\u003eduplicating the entries to a total of 500\u003c/a\u003e (increasing the size to around 3 MB), and then \u003ca href=\"https://web.archive.org/web/20180204002621/https://github.com/simplepie/simplepie-ng/blob/master/tests/benchmarks/atom10.php\"\u003ewrote a test that flexed everything\u003c/a\u003e about SimplePie NG that I could think of. I then started running the test over and over again, collecting data about the timing and memory usage, and when the cache kicks-in and the engine warms up.\u003c/p\u003e\n\u003ch3 id=\"test-machine-and-environment\"\u003eTest machine and environment\u003c/h3\u003e\n\u003cp\u003eI’m running this on a \u003ca href=\"https://web.archive.org/web/20180204002621/https://everymac.com/systems/apple/macbook_pro/specs/macbook-pro-core-i7-2.2-17-early-2011-unibody-thunderbolt-specs.html\"\u003e2011 “Core i7” MacBook Pro\u003c/a\u003e, with 16 GB of RAM and an after-market SATA-III SSD. I have various background processes running, so it isn’t the same as running it on a fresh Linux web server. I also have \u003cem\u003eXDebug\u003c/em\u003e enabled, and I’m testing on the CLI where \u003cem\u003eZend OpCache\u003c/em\u003e is disabled.\u003c/p\u003e\n\u003ch3 id=\"first-pass-case-insensitive-with-xpath-translate\"\u003eFirst pass; Case-insensitive with XPath translate()\u003c/h3\u003e\n\u003cp\u003eThe intial results for this 3 MB, 500-entry feed — with case-insensitivity enabled by way of the XPath \u003ccode\u003etranslate()\u003c/code\u003e function — had an average runtime of \u003cstrong\u003e26 seconds\u003c/strong\u003e. That was \u003cem\u003equite\u003c/em\u003e a bit slower than I was hoping for (especially on PHP 7.2), but then again it \u003cem\u003ewas\u003c/em\u003e a big file with \u003cem\u003ea lot\u003c/em\u003e of entries.\u003c/p\u003e\n\u003cp\u003eLet’s compare to case-insensitivity turned off (i.e., case-sensitive XML parsing).\u003c/p\u003e\n\u003ch3 id=\"second-pass-normal-case-sensitive\"\u003eSecond pass; Normal, case-sensitive\u003c/h3\u003e\n\u003cp\u003eThe next round of results on the same 3 MB, 500-entry feed—with standard case-sensitive XPath queries—had an average runtime of \u003cstrong\u003e3.5 seconds\u003c/strong\u003e. That’s \u003cem\u003ea lot\u003c/em\u003e better.\u003c/p\u003e\n\u003cp\u003eTo do some quick math, the normal query took only \u003cstrong\u003e14%\u003c/strong\u003e of the amount of time it took to do a case-insensitive query. Or, put another way, the case-insensitive query took around \u003cstrong\u003e7.5×\u003c/strong\u003e longer than the normal query. \u003cem\u003eThat’s awful!\u003c/em\u003e\u003c/p\u003e\n\u003ch2 id=\"experimentation\"\u003eExperimentation\u003c/h2\u003e\n\u003cp\u003eI had to find a way to improve the performance of the case-insensitive XPath query. Could I reduce the number of times I had to call \u003ccode\u003etranslate()\u003c/code\u003e?\u003c/p\u003e\n\u003ch3 id=\"xslt\"\u003eXSLT\u003c/h3\u003e\n\u003cp\u003eI tried experimenting with XSLT for a few days. The goal was to transform the XML \u003cem\u003eonce\u003c/em\u003e with XSLT into a new XML document where all elements were lowercase, then I could just use regular XPath queries and avoid \u003ccode\u003etranslate()\u003c/code\u003e all-together.\u003c/p\u003e\n\u003cp\u003eOverall, I still think this is a fantastic idea if \u003cem\u003eyou know where your XML data is coming from\u003c/em\u003e. Unfortunately for me, I don’t, and I was completely unable to craft an appropriate XSLT template that would allow me to convert all tag names to lowercase without breaking a bunch of other things (e.g., entities). I ended up having to abandon this path.\u003c/p\u003e\n\u003ch3 id=\"enabling-php-functions-in-xpath\"\u003eEnabling PHP functions in XPath\u003c/h3\u003e\n\u003cp\u003eI only dabbled with this briefly, but there was no discernable performance improvement that I can recall. Also, the PHP documentation is lacking around this feature, so it was a lot of trial and error.\u003c/p\u003e\n\u003ch3 id=\"simplify-translate\"\u003eSimplify translate()\u003c/h3\u003e\n\u003cp\u003eFinally, I wondered if I could reduce the amount of time that \u003ccode\u003etranslate()\u003c/code\u003e takes if I simply gave it less work to do. Instead of giving it the entire alphabet, what if I only gave it the letters that were in the XML element name?\u003c/p\u003e\n\u003cp\u003ePHP has a function \u003ca href=\"https://web.archive.org/web/20180204002621/https://secure.php.net/manual/en/function.count-chars.php\"\u003e\u003ccode\u003ecount_chars()\u003c/code\u003e\u003c/a\u003e that can return the unique characters in a string. From here, we can create upper and lower-case versions of the string, and just use those in the \u003cem\u003etranslate()\u003c/em\u003e function.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-php\" data-lang=\"php\"\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;?\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ephp\u003c/span\u003e\n\n$word           \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;rss\u0026#39;\u003c/span\u003e;\n$elementLetters \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e\\count_chars\u003c/span\u003e($word, \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e);\n$lettersLower   \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e\\mb_strtolower\u003c/span\u003e($elementLetters);\n$lettersUpper   \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e\\mb_strtoupper\u003c/span\u003e($elementLetters);\n\n$query \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e\\sprintf\u003c/span\u003e(\n    \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;/*[translate(name(), \\\u0026#39;%s\\\u0026#39;, \\\u0026#39;%s\\\u0026#39;) = \\\u0026#39;%s\\\u0026#39;]\u0026#39;\u003c/span\u003e,\n    $lettersUpper,\n    $lettersLower,\n    $word\n);\n\n\u003cspan style=\"color:#75715e\"\u003e# /*[translate(name(), \u0026#39;RS\u0026#39;, \u0026#39;rs\u0026#39;) = \u0026#39;rss\u0026#39;\n\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e$results \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e $domxpath\u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003equery\u003c/span\u003e($query);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTesting this approach on the same 3 MB, 500-entry feed — with case-insensitivity enabled by way of our smarter \u003ccode\u003etranslate()\u003c/code\u003e function — had an average runtime of \u003cstrong\u003e17 seconds\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eRunning the same benchmarks against my other test feeds consistently showed a \u003cstrong\u003e30–35% improvement\u003c/strong\u003e in performance when using only the required letters in the \u003ccode\u003etranslate()\u003c/code\u003e function instead of the entire alphabet.\u003c/p\u003e\n\u003ch2 id=\"wrapping-up\"\u003eWrapping-up\u003c/h2\u003e\n\u003cp\u003eEven with this technique (on this particular set of data, with this particular testing approach), case-insensitive queries are still \u003cstrong\u003e4.5–5×\u003c/strong\u003e slower than their case-sensitive counterparts. Using the \u003ccode\u003etranslate()\u003c/code\u003e XPath 1.0 function in PHP has a substantial impact on performance, so \u003cem\u003edon’t use it if you don’t have to\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eI still think that there is some viability in leveraging XSLT in a first pass, which I expect would substantially reduce the case-insensitive processing time, but someone with more XSLT experience than me would need to contribute that code.\u003c/p\u003e\n\u003cp\u003eLastly, SimplePie NG performs the faster case-sensitive queries by default. You are able to opt-in to case-insensitive mode on a per-feed basis. If you’re just processing a few average-sized feeds with this mode enabled, you probably won’t notice much of an impact.\u003c/p\u003e\n",
        "plain":"TL;DR: How I improved the performance of case-insensitive XPath queries by 30–35%, reducing an 8× performance hit to only 4.5–5×. This was originally posted to the SimplePie NG blog.\n   Parse-at-all-costs Most feeds are a mess. The old SimplePie “OG” took a parse-at-all-costs philosophy, and could handle many of the most broken feeds you could find — at a cost. While the early versions of SimplePie supported the letter of the RSS 2.0 specification, there were a surprising number of feeds which didn’t.\nOnce SimplePie started to get popular (2006–2008), we started getting bug reports from users who were working with RSS feeds containing elements such as \u0026lt;pubdate\u0026gt; (instead of \u0026lt;pubDate\u0026gt;) and \u0026lt;managingeditor\u0026gt; (instead of \u0026lt;managingEditor\u0026gt;). At first we told users that the feeds were broken — which they were. But then we started getting enough reports that we decided to do something about it.\nIntroducing XPath Fast-forward to the summer of 2017 when I started work on SimplePie NG in earnest. There are a number of things I’m doing differently (read: better) this time around. The first is that the fastest approach is the default approach. A corollary to this principle is that if you want to do more things, you will pay for them with performance penalties.\nDuring my time working at Amazon Web Services on the SDK for PHP, I discovered some substantial performance gains by moving a lot of the response-parsing code to XPath. As such, the core XML parsing in SimplePie NG is all built around DOMDocument and XPath queries.\nTo solve this case-insensitivity problem, searching Stack Overflow for “case insensitive xpath” tells you about the XPath 2.0 functions matches() and lower-case(). However, I was surprised to learn that PHP only supports XPath 1.0. After doing some digging, the reason appears to be that the underlying libxml2 library only supports XPath 1.0, with no updated support on the horizon.\nThe only alternative that Google and Stack Overflow had for me was the XPath 1.0 function, translate(). In PHP, the case-insensitive query for the \u0026lt;rss\u0026gt; element would be:\n/*[translate(name(), \u0026#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ\u0026#39;, \u0026#39;abcdefghijklmnopqrstuvwxyz\u0026#39;) = \u0026#39;rss\u0026#39;] It’s simple enough to turn this into a pattern inside of a function. Case-insensitive XML parsing. Done. Boo-yah.\nPerformance-testing A little while later, I started some early work on benchmarking SimplePie NG. I parsed a number of normal-sized feeds, and got back a bunch of perfectly reasonable results. But one thing that I wanted to test was memory usage to make sure there were no memory leaks.\nI put together a quick and dirty test suite by starting with Tim Bray’s feed (one of the more nuanced and complex Atom 1.0 feeds), duplicating the entries to a total of 500 (increasing the size to around 3 MB), and then wrote a test that flexed everything about SimplePie NG that I could think of. I then started running the test over and over again, collecting data about the timing and memory usage, and when the cache kicks-in and the engine warms up.\nTest machine and environment I’m running this on a 2011 “Core i7” MacBook Pro, with 16 GB of RAM and an after-market SATA-III SSD. I have various background processes running, so it isn’t the same as running it on a fresh Linux web server. I also have XDebug enabled, and I’m testing on the CLI where Zend OpCache is disabled.\nFirst pass; Case-insensitive with XPath translate() The intial results for this 3 MB, 500-entry feed — with case-insensitivity enabled by way of the XPath translate() function — had an average runtime of 26 seconds. That was quite a bit slower than I was hoping for (especially on PHP 7.2), but then again it was a big file with a lot of entries.\nLet’s compare to case-insensitivity turned off (i.e., case-sensitive XML parsing).\nSecond pass; Normal, case-sensitive The next round of results on the same 3 MB, 500-entry feed—with standard case-sensitive XPath queries—had an average runtime of 3.5 seconds. That’s a lot better.\nTo do some quick math, the normal query took only 14% of the amount of time it took to do a case-insensitive query. Or, put another way, the case-insensitive query took around 7.5× longer than the normal query. That’s awful!\nExperimentation I had to find a way to improve the performance of the case-insensitive XPath query. Could I reduce the number of times I had to call translate()?\nXSLT I tried experimenting with XSLT for a few days. The goal was to transform the XML once with XSLT into a new XML document where all elements were lowercase, then I could just use regular XPath queries and avoid translate() all-together.\nOverall, I still think this is a fantastic idea if you know where your XML data is coming from. Unfortunately for me, I don’t, and I was completely unable to craft an appropriate XSLT template that would allow me to convert all tag names to lowercase without breaking a bunch of other things (e.g., entities). I ended up having to abandon this path.\nEnabling PHP functions in XPath I only dabbled with this briefly, but there was no discernable performance improvement that I can recall. Also, the PHP documentation is lacking around this feature, so it was a lot of trial and error.\nSimplify translate() Finally, I wondered if I could reduce the amount of time that translate() takes if I simply gave it less work to do. Instead of giving it the entire alphabet, what if I only gave it the letters that were in the XML element name?\nPHP has a function count_chars() that can return the unique characters in a string. From here, we can create upper and lower-case versions of the string, and just use those in the translate() function.\n\u0026lt;?php $word = \u0026#39;rss\u0026#39;; $elementLetters = \\count_chars($word, 3); $lettersLower = \\mb_strtolower($elementLetters); $lettersUpper = \\mb_strtoupper($elementLetters); $query = \\sprintf( \u0026#39;/*[translate(name(), \\\u0026#39;%s\\\u0026#39;, \\\u0026#39;%s\\\u0026#39;) = \\\u0026#39;%s\\\u0026#39;]\u0026#39;, $lettersUpper, $lettersLower, $word ); # /*[translate(name(), \u0026#39;RS\u0026#39;, \u0026#39;rs\u0026#39;) = \u0026#39;rss\u0026#39; $results = $domxpath-\u0026gt;query($query); Testing this approach on the same 3 MB, 500-entry feed — with case-insensitivity enabled by way of our smarter translate() function — had an average runtime of 17 seconds.\nRunning the same benchmarks against my other test feeds consistently showed a 30–35% improvement in performance when using only the required letters in the translate() function instead of the entire alphabet.\nWrapping-up Even with this technique (on this particular set of data, with this particular testing approach), case-insensitive queries are still 4.5–5× slower than their case-sensitive counterparts. Using the translate() XPath 1.0 function in PHP has a substantial impact on performance, so don’t use it if you don’t have to.\nI still think that there is some viability in leveraging XSLT in a first pass, which I expect would substantially reduce the case-insensitive processing time, but someone with more XSLT experience than me would need to contribute that code.\nLastly, SimplePie NG performs the faster case-sensitive queries by default. You are able to opt-in to case-insensitive mode on a per-feed basis. If you’re just processing a few average-sized feeds with this mode enabled, you probably won’t notice much of an impact.\n",
        "source":"\n{{\u003cdescription\u003e}}\nTL;DR: How I improved the performance of case-insensitive XPath queries by 30–35%, reducing an 8× performance hit to only 4.5–5×.\n{{\u003c/description\u003e}}\n\n{{% aside %}}\nThis was originally posted to the \u003ca href=\"https://medium.com/simplepie-ng/php-domdocument-xpath-1-0-case-insensitivity-and-performance-ad962b98e71c\"\u003eSimplePie NG blog\u003c/a\u003e.\n{{% /aside %}}\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2017/hackerman.jpg\" alt=\"Title card for “Hackerman”, a character from the short film “Kung Fury”. http://www.kungfury.com\" \u003e}}\n\n## Parse-at-all-costs\n\nMost feeds are a mess. The old SimplePie “OG” took a parse-at-all-costs philosophy, and could handle many of the most broken feeds you could find — at a cost. While the early versions of SimplePie supported the letter of the RSS 2.0 specification, there were a surprising number of feeds which didn’t.\n\nOnce SimplePie started to get popular (2006–2008), we started getting bug reports from users who were working with RSS feeds containing elements such as `\u003cpubdate\u003e` (instead of [`\u003cpubDate\u003e`]({{\u003c wayback \"http://www.rssboard.org/rss-specification\" \u003e}})) and `\u003cmanagingeditor\u003e` (instead of [`\u003cmanagingEditor\u003e`]({{\u003c wayback \"http://www.rssboard.org/rss-specification\" \u003e}})). At first we told users that the feeds were broken — which they were. But then we started getting enough reports that we decided to do something about it.\n\n## Introducing XPath\n\nFast-forward to the summer of 2017 when I started work on SimplePie NG in earnest. There are a number of things I’m doing differently (read: better) this time around. The first is that the _fastest_ approach is the _default_ approach. A corollary to this principle is that if you want to do more things, you will pay for them with performance penalties.\n\nDuring my time working at Amazon Web Services on the SDK for PHP, I discovered some substantial performance gains by moving a lot of the response-parsing code to XPath. As such, the core XML parsing in SimplePie NG is all built around [DOMDocument]({{\u003c wayback \"https://secure.php.net/domdocument\" \u003e}}) and [XPath]({{\u003c wayback \"https://secure.php.net/domxpath\" \u003e}}) queries.\n\nTo solve this case-insensitivity problem, [searching Stack Overflow for “case insensitive xpath”]({{\u003c wayback \"https://stackoverflow.com/questions/2893551/case-insensitive-matching-in-xpath\" \u003e}}) tells you about the XPath 2.0 functions [`matches()`]({{\u003c wayback \"https://www.w3.org/TR/xpath-functions/#func-matches\" \u003e}}) and [`lower-case()`]({{\u003c wayback \"https://www.w3.org/TR/xpath-functions/#func-lower-case\" \u003e}}). However, I was surprised to learn that PHP only supports XPath 1.0. After doing some digging, the reason appears to be that the underlying [libxml2]({{\u003c wayback \"http://xmlsoft.org\" \u003e}}) library only supports XPath 1.0, with [no updated support on the horizon]({{\u003c wayback \"https://mail.gnome.org/archives/xml/2007-February/msg00077.html\" \u003e}}).\n\nThe only alternative that Google and Stack Overflow had for me was the XPath 1.0 function, [`translate()`]({{\u003c wayback \"https://www.w3.org/TR/xpath/#function-translate\" \u003e}}). In PHP, the case-insensitive query for the `\u003crss\u003e` element would be:\n\n```php\n/*[translate(name(), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz') = 'rss']\n```\n\nIt’s simple enough to turn this into a pattern inside of a function. Case-insensitive XML parsing. Done. Boo-yah.\n\n## Performance-testing\n\nA little while later, I started some early work on benchmarking SimplePie NG. I parsed a number of normal-sized feeds, and got back a bunch of perfectly reasonable results. But one thing that I wanted to test was memory usage to make sure there were no memory leaks.\n\nI put together a quick and dirty test suite by starting with Tim Bray’s feed (one of the more nuanced and complex Atom 1.0 feeds), [duplicating the entries to a total of 500]({{\u003c wayback \"https://raw.githubusercontent.com/simplepie/simplepie-ng/master/tests/Integration/feeds/full/atom10/tim-bray-500.xml\" \u003e}}) (increasing the size to around 3 MB), and then [wrote a test that flexed everything]({{\u003c wayback \"https://github.com/simplepie/simplepie-ng/blob/master/tests/benchmarks/atom10.php\" \u003e}}) about SimplePie NG that I could think of. I then started running the test over and over again, collecting data about the timing and memory usage, and when the cache kicks-in and the engine warms up.\n\n### Test machine and environment\n\nI’m running this on a [2011 “Core i7” MacBook Pro]({{\u003c wayback \"https://everymac.com/systems/apple/macbook_pro/specs/macbook-pro-core-i7-2.2-17-early-2011-unibody-thunderbolt-specs.html\" \u003e}}), with 16 GB of RAM and an after-market SATA-III SSD. I have various background processes running, so it isn’t the same as running it on a fresh Linux web server. I also have _XDebug_ enabled, and I’m testing on the CLI where _Zend OpCache_ is disabled.\n\n### First pass; Case-insensitive with XPath translate()\n\nThe intial results for this 3 MB, 500-entry feed — with case-insensitivity enabled by way of the XPath `translate()` function — had an average runtime of **26 seconds**. That was _quite_ a bit slower than I was hoping for (especially on PHP 7.2), but then again it _was_ a big file with _a lot_ of entries.\n\nLet’s compare to case-insensitivity turned off (i.e., case-sensitive XML parsing).\n\n### Second pass; Normal, case-sensitive\n\nThe next round of results on the same 3 MB, 500-entry feed—with standard case-sensitive XPath queries—had an average runtime of **3.5 seconds**. That’s _a lot_ better.\n\nTo do some quick math, the normal query took only **14%** of the amount of time it took to do a case-insensitive query. Or, put another way, the case-insensitive query took around **7.5×** longer than the normal query. _That’s awful!_\n\n## Experimentation\n\nI had to find a way to improve the performance of the case-insensitive XPath query. Could I reduce the number of times I had to call `translate()`?\n\n### XSLT\n\nI tried experimenting with XSLT for a few days. The goal was to transform the XML _once_ with XSLT into a new XML document where all elements were lowercase, then I could just use regular XPath queries and avoid `translate()` all-together.\n\nOverall, I still think this is a fantastic idea if _you know where your XML data is coming from_. Unfortunately for me, I don’t, and I was completely unable to craft an appropriate XSLT template that would allow me to convert all tag names to lowercase without breaking a bunch of other things (e.g., entities). I ended up having to abandon this path.\n\n### Enabling PHP functions in XPath\n\nI only dabbled with this briefly, but there was no discernable performance improvement that I can recall. Also, the PHP documentation is lacking around this feature, so it was a lot of trial and error.\n\n### Simplify translate()\n\nFinally, I wondered if I could reduce the amount of time that `translate()` takes if I simply gave it less work to do. Instead of giving it the entire alphabet, what if I only gave it the letters that were in the XML element name?\n\nPHP has a function [`count_chars()`]({{\u003c wayback \"https://secure.php.net/manual/en/function.count-chars.php\" \u003e}}) that can return the unique characters in a string. From here, we can create upper and lower-case versions of the string, and just use those in the _translate()_ function.\n\n```php\n\u003c?php\n\n$word           = 'rss';\n$elementLetters = \\count_chars($word, 3);\n$lettersLower   = \\mb_strtolower($elementLetters);\n$lettersUpper   = \\mb_strtoupper($elementLetters);\n\n$query = \\sprintf(\n    '/*[translate(name(), \\'%s\\', \\'%s\\') = \\'%s\\']',\n    $lettersUpper,\n    $lettersLower,\n    $word\n);\n\n# /*[translate(name(), 'RS', 'rs') = 'rss'\n$results = $domxpath-\u003equery($query);\n```\n\nTesting this approach on the same 3 MB, 500-entry feed — with case-insensitivity enabled by way of our smarter `translate()` function — had an average runtime of **17 seconds**.\n\nRunning the same benchmarks against my other test feeds consistently showed a **30–35% improvement** in performance when using only the required letters in the `translate()` function instead of the entire alphabet.\n\n## Wrapping-up\n\nEven with this technique (on this particular set of data, with this particular testing approach), case-insensitive queries are still **4.5–5×** slower than their case-sensitive counterparts. Using the `translate()` XPath 1.0 function in PHP has a substantial impact on performance, so _don’t use it if you don’t have to_.\n\nI still think that there is some viability in leveraging XSLT in a first pass, which I expect would substantially reduce the case-insensitive processing time, but someone with more XSLT experience than me would need to contribute that code.\n\nLastly, SimplePie NG performs the faster case-sensitive queries by default. You are able to opt-in to case-insensitive mode on a per-feed basis. If you’re just processing a few average-sized feeds with this mode enabled, you probably won’t notice much of an impact.\n"},
    "links": {
        "prev": {"title": "A Refresh of the SimplePie Logo", "permalink": "https://ryanparman.com/posts/2017/a-refresh-of-the-simplepie-logo/"},
        "next": {"title": "Dear Nintendo, Part II", "permalink": "https://ryanparman.com/posts/2018/dear-nintendo-part-ii/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "A Refresh of the SimplePie Logo",
    "description": "",
    "summary": {
        "content": "Today, I’m introducing a refresh of the SimplePie logo and the most visible part of its brand. I’m calling this new branding style SimplePie Neue. This was originally posted to the SimplePie NG blog. The Icon I designed the original SimplePie logo back in 2005. At the time, Web 2.0 and Ajax were brand-new things to most web developers. Mac OS X “Tiger” 10.4 was the latest OS running on my 17” PowerBook G4, and while the hard glossy feel hadn’t yet taken over the Internet, shadows and gradients definitely had.",
        "isTruncated": true
    },
    "published": "2017-12-17T23:36:16Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2017/a-refresh-of-the-simplepie-logo/",
    "relativePermalink": "/posts/2017/a-refresh-of-the-simplepie-logo/",
    "aliases": ["/2017/12/17/a-refresh-of-the-simplepie-logo"],
    "images": ["https://cdn.ryanparman.com/hugo/posts/2017/simplepie-classic.png", "https://cdn.ryanparman.com/hugo/posts/2017/simplepie-neue.png", "https://cdn.ryanparman.com/hugo/posts/2017/simplepie-neue-wordmark.png", "https://cdn.ryanparman.com/hugo/posts/2017/simplepie-classic-wordmark.png"],
    "videos": [],
    "categories": ["Projects and Code"],
    "tags": ["simplepie", "simplepie-ng", "design", "logo", "powerbook-g4", "wordmark", "magpie rss", "wordpress"],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 718,
        "readingTime": "4 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2017/20171217-a-refresh-of-the-simplepie-logo.md",
        "logicalName": "20171217-a-refresh-of-the-simplepie-logo.md",
        "translationBaseName": "20171217-a-refresh-of-the-simplepie-logo",
        "baseFileName": "20171217-a-refresh-of-the-simplepie-logo",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2017/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#the-icon\"\u003eThe Icon\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#the-word\"\u003eThe Word\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#coming-soon\"\u003eComing Soon…\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp itemprop=\"description\" class=\"f5 f4-m f3-l mt0 lh-copy p-summary entry-summary\"\u003e\nToday, I’m introducing a refresh of the SimplePie logo and the most visible part of its brand. I’m calling this new branding style \u003cem\u003eSimplePie Neue\u003c/em\u003e.\n\u003c/p\u003e\n\n\n\u003caside class=\"age aside container flex\"\u003e\u003cp\u003eThis was originally posted to the \u003ca href=\"https://medium.com/simplepie-ng/a-refresh-of-the-simplepie-logo-eeb8bf46fd91\"\u003eSimplePie NG blog\u003c/a\u003e.\u003c/p\u003e\n\u003c/aside\u003e\n\n\u003ch2 id=\"the-icon\"\u003eThe Icon\u003c/h2\u003e\n\u003cp\u003eI designed the original SimplePie logo back in 2005. At the time, Web 2.0 and Ajax were brand-new things to most web developers. Mac OS X “Tiger” 10.4 was the latest OS running on my 17” PowerBook G4, and while the \u003ca href=\"https://duckduckgo.com/?q=web 2.0 logo\"\u003ehard glossy feel\u003c/a\u003e hadn’t yet taken over the Internet, shadows and gradients definitely had.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns pv4-l\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2017/simplepie-classic.png\" layout=\"responsive\" width=\"400\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003eThe SimplePie logo (2005–2017)\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eStill to this day, I enjoy looking at this logo. I remember spending hours and hours on the colors of the gradients to get just the right look.\u003c/p\u003e\n\u003cp\u003eBut times change, and so do tastes. I’d lost the original logo source years ago, and all I had left was this one PNG file. So to go with \u003ca href=\"https://web.archive.org/web/20171217233616/https://github.com/simplepie/simplepie-ng\"\u003ekickstarting the development of the next-generation of SimplePie\u003c/a\u003e, I decided it was time for a brand refresh (and I wanted to make sure I worked with vector art this time around!).\u003c/p\u003e\n\u003cp\u003eTo pay homage and and honor to the well-liked and familiar SimplePie logo, I wanted to keep the primary identifying elements. But I also wanted to simplify and clean it up.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns pv4-l\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2017/simplepie-neue.png\" layout=\"responsive\" width=\"400\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003eThe SimplePie logo (2017–)\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eJust like the Apple logo in 1998, I realized that it wasn’t the unordered rainbow stripes, or the gloss of the System 7.5 variation of the logo—it was the shape itself that people identified with. Similarly, I’ve kept the major themes of the logo, while simplifying it and enabling it to scale better from \u003cem\u003etiny\u003c/em\u003e to \u003cem\u003elarge\u003c/em\u003e resolutions.\u003c/p\u003e\n\u003cp\u003ePart of me still looks at the depth and gradients of the original logo and misses them. But in wanting to change the personality of the SimplePie brand, I think that the change is a positive one.\u003c/p\u003e\n\u003ch2 id=\"the-word\"\u003eThe Word\u003c/h2\u003e\n\u003cp\u003eSimplePie is an amalgamation of the phrase “Simple API for Magpie RSS”. Magpie RSS was the RSS parser \u003cem\u003edu jour\u003c/em\u003e for PHP developers in 2004, and the earliest versions of SimplePie simply wrapped it.\u003c/p\u003e\n\u003cp\u003eBut SimplePie has come to be (strangely and unexpectedly) a well-known bit of software over the years (I don’t believe that \u003cem\u003emillions of users\u003c/em\u003e is an exaggeration). Like with the icon, I wanted to pay homage to the original icon and wordmark, but as I mentioned, I want to change the personality of SimplePie moving forward — particularly with SimplePie NG.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns pv4-l\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2017/simplepie-classic-wordmark.png\" layout=\"responsive\" width=\"180\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003eThe SimplePie wordmark (2005–2017)\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eThe original personality was fun, a little smart-aleky, and would bend over backwards to work with even the least-skilled PHP users. The font was \u003ca href=\"https://web.archive.org/web/20171217233616/https://www.dafont.com/yanone-kaffeesatz.font\"\u003eYanone Kaffeesatz, Bold\u003c/a\u003e, and the letter spacing was pulled \u003cem\u003eway\u003c/em\u003e-in.\u003c/p\u003e\n\u003cp\u003eThe new SimplePie is not designed for \u003cem\u003eye olde WordPress user\u003c/em\u003e. It is designed as high-quality, professional-grade software for PHP Software Engineers. I intend for its peers to be \u003ca href=\"https://web.archive.org/web/20171217233616/http://guzzlephp.org\"\u003eGuzzle\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20171217233616/http://symfony.com\"\u003eSymfony\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20171217233616/https://aws.amazon.com/sdk-for-php/\"\u003eAWS SDK for PHP\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20171217233616/https://seldaek.github.io/monolog/\"\u003eMonolog\u003c/a\u003e, and other professional-grade software packages. And with all of this intended professionalism, there isn’t as much room for goofing off. SimplePie NG is more \u003cem\u003esmart\u003c/em\u003e and less \u003cem\u003e-aleky\u003c/em\u003e. And it will still help you out, but you need to understand your fundamentals. And no, it’s probably not going to work with your crappy $3/mo shared hosting plan.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns pv4-l\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2017/simplepie-neue-wordmark.png\" layout=\"responsive\" width=\"324\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003eThe SimplePie wordmark (2017–)\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eThe first thing you’ll probably notice is the typeface change to \u003ca href=\"https://web.archive.org/web/20171217233616/https://developer.apple.com/fonts/\"\u003eSF Pro Display, Medium\u003c/a\u003e—the newest (2017) version of Apple’s San Francisco typeface that it uses throughout its products and on its website. The letter spacing is still pulled-in, but much less so than before.\u003c/p\u003e\n\u003cp\u003eI also added the “ɴԍ” using the following glyphs: \u003ca href=\"https://web.archive.org/web/20171217233616/http://www.fileformat.info/info/unicode/char/0274/index.htm\"\u003eLATIN LETTER SMALL CAPITAL N\u003c/a\u003e, and \u003ca href=\"https://web.archive.org/web/20171217233616/http://www.fileformat.info/info/unicode/char/50d/index.htm\"\u003eCYRILLIC SMALL LETTER KOMI SJE\u003c/a\u003e. I made them about 45% smaller than the rest of the text, centered them horizontally, and left the same amount of space around the word “SimplePie”.\u003c/p\u003e\n\u003cp\u003eSwitching to San Francisco Pro gives the logo a cleaner, more professional look while still maintaining the overall spirit of the original logo. It’s like looking at one of those \u003cem\u003emakeover\u003c/em\u003e shows on TV.\u003c/p\u003e\n\u003ch2 id=\"coming-soon\"\u003eComing Soon…\u003c/h2\u003e\n\u003cp\u003eI’m planning to do a complete reboot of the website when SimplePie NG ships its 1.0 release. While you will begin seeing the \u003cem\u003eNeue\u003c/em\u003e branding here and \u003ca href=\"https://web.archive.org/web/20171217233616/https://github.com/simplepie/simplepie-ng\"\u003eon GitHub\u003c/a\u003e, look for a freshly-redesigned website with the new feel when 1.0 gets tagged and released to Composer.\u003c/p\u003e\n",
        "plain":"Today, I’m introducing a refresh of the SimplePie logo and the most visible part of its brand. I’m calling this new branding style SimplePie Neue. This was originally posted to the SimplePie NG blog.\n The Icon I designed the original SimplePie logo back in 2005. At the time, Web 2.0 and Ajax were brand-new things to most web developers. Mac OS X “Tiger” 10.4 was the latest OS running on my 17” PowerBook G4, and while the hard glossy feel hadn’t yet taken over the Internet, shadows and gradients definitely had.\n The SimplePie logo (2005–2017)\n Still to this day, I enjoy looking at this logo. I remember spending hours and hours on the colors of the gradients to get just the right look.\nBut times change, and so do tastes. I’d lost the original logo source years ago, and all I had left was this one PNG file. So to go with kickstarting the development of the next-generation of SimplePie, I decided it was time for a brand refresh (and I wanted to make sure I worked with vector art this time around!).\nTo pay homage and and honor to the well-liked and familiar SimplePie logo, I wanted to keep the primary identifying elements. But I also wanted to simplify and clean it up.\n The SimplePie logo (2017–)\n Just like the Apple logo in 1998, I realized that it wasn’t the unordered rainbow stripes, or the gloss of the System 7.5 variation of the logo—it was the shape itself that people identified with. Similarly, I’ve kept the major themes of the logo, while simplifying it and enabling it to scale better from tiny to large resolutions.\nPart of me still looks at the depth and gradients of the original logo and misses them. But in wanting to change the personality of the SimplePie brand, I think that the change is a positive one.\nThe Word SimplePie is an amalgamation of the phrase “Simple API for Magpie RSS”. Magpie RSS was the RSS parser du jour for PHP developers in 2004, and the earliest versions of SimplePie simply wrapped it.\nBut SimplePie has come to be (strangely and unexpectedly) a well-known bit of software over the years (I don’t believe that millions of users is an exaggeration). Like with the icon, I wanted to pay homage to the original icon and wordmark, but as I mentioned, I want to change the personality of SimplePie moving forward — particularly with SimplePie NG.\n The SimplePie wordmark (2005–2017)\n The original personality was fun, a little smart-aleky, and would bend over backwards to work with even the least-skilled PHP users. The font was Yanone Kaffeesatz, Bold, and the letter spacing was pulled way-in.\nThe new SimplePie is not designed for ye olde WordPress user. It is designed as high-quality, professional-grade software for PHP Software Engineers. I intend for its peers to be Guzzle, Symfony, AWS SDK for PHP, Monolog, and other professional-grade software packages. And with all of this intended professionalism, there isn’t as much room for goofing off. SimplePie NG is more smart and less -aleky. And it will still help you out, but you need to understand your fundamentals. And no, it’s probably not going to work with your crappy $3/mo shared hosting plan.\n The SimplePie wordmark (2017–)\n The first thing you’ll probably notice is the typeface change to SF Pro Display, Medium—the newest (2017) version of Apple’s San Francisco typeface that it uses throughout its products and on its website. The letter spacing is still pulled-in, but much less so than before.\nI also added the “ɴԍ” using the following glyphs: LATIN LETTER SMALL CAPITAL N, and CYRILLIC SMALL LETTER KOMI SJE. I made them about 45% smaller than the rest of the text, centered them horizontally, and left the same amount of space around the word “SimplePie”.\nSwitching to San Francisco Pro gives the logo a cleaner, more professional look while still maintaining the overall spirit of the original logo. It’s like looking at one of those makeover shows on TV.\nComing Soon… I’m planning to do a complete reboot of the website when SimplePie NG ships its 1.0 release. While you will begin seeing the Neue branding here and on GitHub, look for a freshly-redesigned website with the new feel when 1.0 gets tagged and released to Composer.\n",
        "source":"\n{{\u003cdescription\u003e}}\nToday, I’m introducing a refresh of the SimplePie logo and the most visible part of its brand. I’m calling this new branding style \u003cem\u003eSimplePie Neue\u003c/em\u003e.\n{{\u003c/description\u003e}}\n\n{{% aside %}}\nThis was originally posted to the \u003ca href=\"https://medium.com/simplepie-ng/a-refresh-of-the-simplepie-logo-eeb8bf46fd91\"\u003eSimplePie NG blog\u003c/a\u003e.\n{{% /aside %}}\n\n## The Icon\n\nI designed the original SimplePie logo back in 2005. At the time, Web 2.0 and Ajax were brand-new things to most web developers. Mac OS X “Tiger” 10.4 was the latest OS running on my 17” PowerBook G4, and while the [hard glossy feel]({{\u003c search \"web 2.0 logo\" \u003e}}) hadn’t yet taken over the Internet, shadows and gradients definitely had.\n\n{{\u003cfullimage-noshadow src=\"https://cdn.ryanparman.com/hugo/posts/2017/simplepie-classic.png\" alt=\"The SimplePie logo (2005–2017)\" figure=\"The SimplePie logo (2005–2017)\" width=\"400\"\u003e}}\n\nStill to this day, I enjoy looking at this logo. I remember spending hours and hours on the colors of the gradients to get just the right look.\n\nBut times change, and so do tastes. I’d lost the original logo source years ago, and all I had left was this one PNG file. So to go with [kickstarting the development of the next-generation of SimplePie]({{\u003c wayback \"https://github.com/simplepie/simplepie-ng\" \u003e}}), I decided it was time for a brand refresh (and I wanted to make sure I worked with vector art this time around!).\n\nTo pay homage and and honor to the well-liked and familiar SimplePie logo, I wanted to keep the primary identifying elements. But I also wanted to simplify and clean it up.\n\n{{\u003cfullimage-noshadow src=\"https://cdn.ryanparman.com/hugo/posts/2017/simplepie-neue.png\" alt=\"The SimplePie logo (2017–)\" figure=\"The SimplePie logo (2017–)\" width=\"400\"\u003e}}\n\nJust like the Apple logo in 1998, I realized that it wasn’t the unordered rainbow stripes, or the gloss of the System 7.5 variation of the logo—it was the shape itself that people identified with. Similarly, I’ve kept the major themes of the logo, while simplifying it and enabling it to scale better from _tiny_ to _large_ resolutions.\n\nPart of me still looks at the depth and gradients of the original logo and misses them. But in wanting to change the personality of the SimplePie brand, I think that the change is a positive one.\n\n## The Word\n\nSimplePie is an amalgamation of the phrase “Simple API for Magpie RSS”. Magpie RSS was the RSS parser _du jour_ for PHP developers in 2004, and the earliest versions of SimplePie simply wrapped it.\n\nBut SimplePie has come to be (strangely and unexpectedly) a well-known bit of software over the years (I don’t believe that _millions of users_ is an exaggeration). Like with the icon, I wanted to pay homage to the original icon and wordmark, but as I mentioned, I want to change the personality of SimplePie moving forward — particularly with SimplePie NG.\n\n{{\u003cfullimage-noshadow src=\"https://cdn.ryanparman.com/hugo/posts/2017/simplepie-classic-wordmark.png\" alt=\"The SimplePie wordmark (2005–2017)\" figure=\"The SimplePie wordmark (2005–2017)\" width=\"180\"\u003e}}\n\nThe original personality was fun, a little smart-aleky, and would bend over backwards to work with even the least-skilled PHP users. The font was [Yanone Kaffeesatz, Bold]({{\u003c wayback \"https://www.dafont.com/yanone-kaffeesatz.font\" \u003e}}), and the letter spacing was pulled _way_-in.\n\nThe new SimplePie is not designed for _ye olde WordPress user_. It is designed as high-quality, professional-grade software for PHP Software Engineers. I intend for its peers to be [Guzzle]({{\u003c wayback \"http://guzzlephp.org\" \u003e}}), [Symfony]({{\u003c wayback \"http://symfony.com\" \u003e}}), [AWS SDK for PHP]({{\u003c wayback \"https://aws.amazon.com/sdk-for-php/\" \u003e}}), [Monolog]({{\u003c wayback \"https://seldaek.github.io/monolog/\" \u003e}}), and other professional-grade software packages. And with all of this intended professionalism, there isn’t as much room for goofing off. SimplePie NG is more _smart_ and less _-aleky_. And it will still help you out, but you need to understand your fundamentals. And no, it’s probably not going to work with your crappy $3/mo shared hosting plan.\n\n{{\u003cfullimage-noshadow src=\"https://cdn.ryanparman.com/hugo/posts/2017/simplepie-neue-wordmark.png\" alt=\"The SimplePie wordmark (2017–)\" figure=\"The SimplePie wordmark (2017–)\" width=\"324\"\u003e}}\n\nThe first thing you’ll probably notice is the typeface change to [SF Pro Display, Medium]({{\u003c wayback \"https://developer.apple.com/fonts/\" \u003e}})—the newest (2017) version of Apple’s San Francisco typeface that it uses throughout its products and on its website. The letter spacing is still pulled-in, but much less so than before.\n\nI also added the “ɴԍ” using the following glyphs: [LATIN LETTER SMALL CAPITAL N]({{\u003c wayback \"http://www.fileformat.info/info/unicode/char/0274/index.htm\" \u003e}}), and [CYRILLIC SMALL LETTER KOMI SJE]({{\u003c wayback \"http://www.fileformat.info/info/unicode/char/50d/index.htm\" \u003e}}). I made them about 45% smaller than the rest of the text, centered them horizontally, and left the same amount of space around the word “SimplePie”.\n\nSwitching to San Francisco Pro gives the logo a cleaner, more professional look while still maintaining the overall spirit of the original logo. It’s like looking at one of those _makeover_ shows on TV.\n\n## Coming Soon…\n\nI’m planning to do a complete reboot of the website when SimplePie NG ships its 1.0 release. While you will begin seeing the _Neue_ branding here and [on GitHub]({{\u003c wayback \"https://github.com/simplepie/simplepie-ng\" \u003e}}), look for a freshly-redesigned website with the new feel when 1.0 gets tagged and released to Composer.\n"},
    "links": {
        "prev": {"title": "SimplePie is back in development!", "permalink": "https://ryanparman.com/posts/2017/simplepie-is-back-in-development/"},
        "next": {"title": "PHP, DOMDocument, XPath 1.0, Case-Insensitivity, and Performance", "permalink": "https://ryanparman.com/posts/2018/php-domdocument-xpath-1-0-case-insensitivity-and-performance/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "SimplePie is back in development!",
    "description": "",
    "summary": {
        "content": "After retiring from SimplePie development in 2009, the project more or less went into maintenance mode. While I am thankful to the folks who have contributed to its development over the last 8 years, it’s time for a reboot. This was originally posted to the SimplePie NG blog. SimplePie NG is a modern, next-generation PHP package for working with syndication feeds. It is being re-written from the ground-up to take advantage of the changes that have happened in the PHP community since the SimplePie project was started back in 2004.",
        "isTruncated": true
    },
    "published": "2017-12-07T12:00:00Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2017/simplepie-is-back-in-development/",
    "relativePermalink": "/posts/2017/simplepie-is-back-in-development/",
    "aliases": [],
    "images": ["https://cdn.ryanparman.com/hugo/posts/2017/simplepie-back-in-development.gif"],
    "videos": [],
    "categories": ["Projects and Code"],
    "tags": ["simplepie", "simplepie-ng", "odeo", "psr", "middleware", "performance", "rss", "atom", "jsonfeed"],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 359,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2017/20171207-simplepie-is-back-in-development.md",
        "logicalName": "20171207-simplepie-is-back-in-development.md",
        "translationBaseName": "20171207-simplepie-is-back-in-development",
        "baseFileName": "20171207-simplepie-is-back-in-development",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2017/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#the-plan\"\u003eThe Plan\u003c/a\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href=\"#the-things-to-avoid-next-time\"\u003eThe things to avoid next time\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href=\"#the-things-to-do-better-this-time-around\"\u003eThe things to do better this time around\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#where-can-i-get-it\"\u003eWhere can I get it?\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp itemprop=\"description\" class=\"f5 f4-m f3-l mt0 lh-copy p-summary entry-summary\"\u003e\nAfter retiring from SimplePie development in 2009, the project more or less went into maintenance mode. While I am thankful to the folks who have contributed to its development over the last 8 years, it’s time for a reboot.\n\u003c/p\u003e\n\n\n\u003caside class=\"age aside container flex\"\u003e\u003cp\u003eThis was originally posted to the \u003ca href=\"https://medium.com/simplepie-ng/simplepie-is-back-in-development-76376284366a\"\u003eSimplePie NG blog\u003c/a\u003e.\u003c/p\u003e\n\u003c/aside\u003e\n\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/hugo/posts/2017/simplepie-back-in-development.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/hugo/posts/2017/simplepie-back-in-development.gif\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003eSimplePie NG\u003c/strong\u003e is a modern, next-generation PHP package for working with syndication feeds. It is being re-written from the ground-up to take advantage of the changes that have happened in the PHP community since the SimplePie project was started back in 2004.\u003c/p\u003e\n\u003ch2 id=\"the-plan\"\u003eThe Plan\u003c/h2\u003e\n\u003cp\u003eI’ve spent several years thinking about how I would do things differently if I were to start the project over from scratch — including thinking about all the things we did that turned out to be a terrible idea in retrospect.\u003c/p\u003e\n\u003ch3 id=\"the-things-to-avoid-next-time\"\u003eThe things to avoid next time\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://web.archive.org/web/20171207120000/https://www.crunchbase.com/organization/odeo\"\u003eOdeo\u003c/a\u003e integration.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIntegration with the various social bookmarking services \u003cem\u003edu jour\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eTrying to do everything and build everything from scratch.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"the-things-to-do-better-this-time-around\"\u003eThe things to do better this time around\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eEmbrace the PSRs (logging, caching, HTTP messaging).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLeverage a middleware-based system for adding support for new formats. This will allow people to write custom middleware that is Composer-installable.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eTake advantage of the modern features of PHP. Notably, we are focusing on targeting professional-grade software engineers, and building great software.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFocusing on performance, memory usage, specification compliance, feed compatibility, and testing from the very beginning.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSupporting RSS, Atom, and the new \u003ca href=\"https://web.archive.org/web/20171207120000/https://jsonfeed.org/version/1\"\u003eJSON Feed\u003c/a\u003e out of the box.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"where-can-i-get-it\"\u003eWhere can I get it?\u003c/h2\u003e\n\u003cp\u003eI’m still in the “big bang” (e.g., iteration zero, proof-of-concept) phase. I’m implementing support for Atom 1.0 first (since it is the best-specified) and leveraging XPath expressions to \u003cem\u003eradically\u003c/em\u003e improve parsing performance. As such, I must say…\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eHighly experimental. Don’t use this.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI’m working on this project outside of work hours, so it will probably be a few months before I tag an alpha release. I want to add the core Atom, RSS, and JSON Feed support before I tag an alpha release.\u003c/p\u003e\n\u003cp\u003eHowever, if there are features you want to see, or want to dabble with the code a bit, I encourage you to come \u003ca href=\"https://web.archive.org/web/20171207120000/https://github.com/simplepie/simplepie-ng\"\u003echeck things out in GitHub\u003c/a\u003e.\u003c/p\u003e\n",
        "plain":"After retiring from SimplePie development in 2009, the project more or less went into maintenance mode. While I am thankful to the folks who have contributed to its development over the last 8 years, it’s time for a reboot. This was originally posted to the SimplePie NG blog.\n   SimplePie NG is a modern, next-generation PHP package for working with syndication feeds. It is being re-written from the ground-up to take advantage of the changes that have happened in the PHP community since the SimplePie project was started back in 2004.\nThe Plan I’ve spent several years thinking about how I would do things differently if I were to start the project over from scratch — including thinking about all the things we did that turned out to be a terrible idea in retrospect.\nThe things to avoid next time   Odeo integration.\n  Integration with the various social bookmarking services du jour.\n  Trying to do everything and build everything from scratch.\n  The things to do better this time around   Embrace the PSRs (logging, caching, HTTP messaging).\n  Leverage a middleware-based system for adding support for new formats. This will allow people to write custom middleware that is Composer-installable.\n  Take advantage of the modern features of PHP. Notably, we are focusing on targeting professional-grade software engineers, and building great software.\n  Focusing on performance, memory usage, specification compliance, feed compatibility, and testing from the very beginning.\n  Supporting RSS, Atom, and the new JSON Feed out of the box.\n  Where can I get it? I’m still in the “big bang” (e.g., iteration zero, proof-of-concept) phase. I’m implementing support for Atom 1.0 first (since it is the best-specified) and leveraging XPath expressions to radically improve parsing performance. As such, I must say…\nHighly experimental. Don’t use this.\nI’m working on this project outside of work hours, so it will probably be a few months before I tag an alpha release. I want to add the core Atom, RSS, and JSON Feed support before I tag an alpha release.\nHowever, if there are features you want to see, or want to dabble with the code a bit, I encourage you to come check things out in GitHub.\n",
        "source":"\n{{\u003cdescription\u003e}}\nAfter retiring from SimplePie development in 2009, the project more or less went into maintenance mode. While I am thankful to the folks who have contributed to its development over the last 8 years, it’s time for a reboot.\n{{\u003c/description\u003e}}\n\n{{% aside %}}\nThis was originally posted to the \u003ca href=\"https://medium.com/simplepie-ng/simplepie-is-back-in-development-76376284366a\"\u003eSimplePie NG blog\u003c/a\u003e.\n{{% /aside %}}\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2017/simplepie-back-in-development.gif\"\u003e}}\n\n**SimplePie NG** is a modern, next-generation PHP package for working with syndication feeds. It is being re-written from the ground-up to take advantage of the changes that have happened in the PHP community since the SimplePie project was started back in 2004.\n\n## The Plan\n\nI’ve spent several years thinking about how I would do things differently if I were to start the project over from scratch — including thinking about all the things we did that turned out to be a terrible idea in retrospect.\n\n### The things to avoid next time\n\n* [Odeo]({{\u003c wayback \"https://www.crunchbase.com/organization/odeo\" \u003e}}) integration.\n\n* Integration with the various social bookmarking services _du jour_.\n\n* Trying to do everything and build everything from scratch.\n\n### The things to do better this time around\n\n* Embrace the PSRs (logging, caching, HTTP messaging).\n\n* Leverage a middleware-based system for adding support for new formats. This will allow people to write custom middleware that is Composer-installable.\n\n* Take advantage of the modern features of PHP. Notably, we are focusing on targeting professional-grade software engineers, and building great software.\n\n* Focusing on performance, memory usage, specification compliance, feed compatibility, and testing from the very beginning.\n\n* Supporting RSS, Atom, and the new [JSON Feed]({{\u003c wayback \"https://jsonfeed.org/version/1\" \u003e}}) out of the box.\n\n## Where can I get it?\n\nI’m still in the “big bang” (e.g., iteration zero, proof-of-concept) phase. I’m implementing support for Atom 1.0 first (since it is the best-specified) and leveraging XPath expressions to _radically_ improve parsing performance. As such, I must say…\n\n**Highly experimental. Don’t use this.**\n\nI’m working on this project outside of work hours, so it will probably be a few months before I tag an alpha release. I want to add the core Atom, RSS, and JSON Feed support before I tag an alpha release.\n\nHowever, if there are features you want to see, or want to dabble with the code a bit, I encourage you to come [check things out in GitHub]({{\u003c wayback \"https://github.com/simplepie/simplepie-ng\" \u003e}}).\n"},
    "links": {
        "prev": {"title": "Business Review: Del Sol Auto Sales", "permalink": "https://ryanparman.com/posts/2017/business-review-del-sol-auto-sales/"},
        "next": {"title": "A Refresh of the SimplePie Logo", "permalink": "https://ryanparman.com/posts/2017/a-refresh-of-the-simplepie-logo/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Aaron Swartz",
    "description": "",
    "summary": {
        "content": "I didn’t know Aaron personally, so there’s no insight I can provide into the person who I’ve read people describe as “a brilliant soul”. The world is now a worse place The tech world is abuzz with the news that, at only 26 years old, Aaron Swartz decided to take his own life. I heard about it last night when I opened up Tweetbot, and saw two tweets back-to-back in my timeline: @al3x : We lost @aaronsw. — Alex Payne (@al3x) January 12, 2013.",
        "isTruncated": true
    },
    "published": "2013-01-12T21:46:39Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2013/aaron-swartz/",
    "relativePermalink": "/posts/2013/aaron-swartz/",
    "aliases": ["/2013/01/12/aaron-swartz/"],
    "images": ["https://cdn.ryanparman.com/hugo/posts/2013/aaron-swartz1@2x.jpg", "https://cdn.ryanparman.com/hugo/posts/2013/demand-progress@2x.png", "https://cdn.ryanparman.com/hugo/posts/2013/aaron-swartz2.jpg", "https://cdn.ryanparman.com/hugo/posts/2013/aaron-swartz3@2x.jpg"],
    "videos": [],
    "categories": ["Death"],
    "tags": ["aaron swartz", "alex payne", "dustin curtis", "rss", "simplepie", "lawrence lessig", "xml", "rdf", "creative commons", "pacer", "demand progress", "sopa pipa", "mit", "crime", "free speech", "public record"],
    "series": ["Editors Choice"],
    "keywords": [],
    "meta": {
        "wordCount": 3466,
        "readingTime": "17 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2013/20130112-aaron-swartz.md",
        "logicalName": "20130112-aaron-swartz.md",
        "translationBaseName": "20130112-aaron-swartz",
        "baseFileName": "20130112-aaron-swartz",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2013/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#the-world-is-now-a-worse-place\"\u003eThe world is now a worse place\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#rss\"\u003eRSS\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#creative-commons-pacer-demand-progress\"\u003eCreative Commons. PACER. Demand Progress.\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#download-too-much-go-to-jail\"\u003eDownload too much, go to jail\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#prosecutor-as-bully\"\u003eProsecutor as bully\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#in-the-end\"\u003eIn the end\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#update-20130112\"\u003eUpdate (2013–01–12)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#update-20130120\"\u003eUpdate (2013–01–20)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#more-links\"\u003eMore links…\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eI didn’t know Aaron personally, so there’s no insight I can provide into the person who I’ve read people describe as “a brilliant soul”.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/hugo/posts/2013/aaron-swartz1@2x.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/hugo/posts/2013/aaron-swartz1@2x.jpg\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"the-world-is-now-a-worse-place\"\u003eThe world is now a worse place\u003c/h2\u003e\n\u003cp\u003eThe tech world is abuzz with the news that, at only 26 years old, \u003cspan itemscope itemtype=\"http://schema.org/Person\"\u003e\u003ca href=\"https://twitter.com/aaronsw\" itemprop=\"url\"\u003e\u003cspan itemprop=\"name\"\u003eAaron Swartz\u003c/span\u003e\u003c/a\u003e\u003c/span\u003e\n decided to take his own life. I heard about it last night when I opened up Tweetbot, and saw two tweets back-to-back in my timeline:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/al3x\"\u003e@al3x\u003c/a\u003e\n:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWe lost @\u003ca href=\"https://web.archive.org/web/20130112214639/https://twitter.com/aaronsw\"\u003eaaronsw\u003c/a\u003e. — \u003cspan itemscope itemtype=\"http://schema.org/Person\"\u003e\u003ca href=\"https://twitter.com/al3x\" itemprop=\"url\"\u003e\u003cspan itemprop=\"name\"\u003eAlex Payne\u003c/span\u003e\u003c/a\u003e\u003c/span\u003e\n (@al3x) \u003ca href=\"https://web.archive.org/web/20130112214639/https://twitter.com/al3x/status/290008536241565696\"\u003eJanuary 12, 2013\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/dcurtis\"\u003e@dcurtis\u003c/a\u003e\n:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFuck. \u003ca href=\"https://web.archive.org/web/20130112214639/https://thetech.com/2013/01/09/swartz-v132-n61\" title=\"http://tech.mit.edu/V132/N61/swartz.html\"\u003etech.mit.edu/V132/N61/swart…\u003c/a\u003eThe world is now a worse place. — \u003cspan itemscope itemtype=\"http://schema.org/Person\"\u003e\u003ca href=\"https://twitter.com/dcurtis\" itemprop=\"url\"\u003e\u003cspan itemprop=\"name\"\u003edustin curtis\u003c/span\u003e\u003c/a\u003e\u003c/span\u003e\n (@dcurtis) \u003ca href=\"https://web.archive.org/web/20130112214639/https://twitter.com/dcurtis/status/290011012944510976\"\u003eJanuary 12, 2013\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"rss\"\u003eRSS\u003c/h2\u003e\n\u003cp\u003eBeing part of the web world, I certainly knew Aaron by reputation. I first heard about him back when I started tinkering with RSS in 2003. While I \u003ca href=\"https://web.archive.org/web/20130112214639/http://simplepie.org\"\u003emay have started a project that simplified RSS for a legion of PHP developers\u003c/a\u003e, Aaron literally wrote the spec — and at 14 years old, I might add.\u003c/p\u003e\n\u003cp\u003e\u003cspan itemscope itemtype=\"http://schema.org/Person\"\u003e\u003cspan itemprop=\"name\"\u003eCory Doctorow\u003c/span\u003e\u003c/span\u003e\n \u003ca href=\"https://web.archive.org/web/20130112214639/http://boingboing.net/2013/01/12/rip-aaron-swartz.html\"\u003ehad this to say\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI met Aaron when he was 14 or 15. He was working on XML stuff (he co-wrote the RSS specification when he was 14) and came to San Francisco often, and would stay with \u003cspan itemscope itemtype=\"http://schema.org/Person\"\u003e\u003cspan itemprop=\"name\"\u003eLisa Rein\u003c/span\u003e\u003c/span\u003e\n, a friend of mine who was also an XML person and who took care of him and assured his parents he had adult supervision. In so many ways, he was an adult, even then, with a kind of intense, fast intellect that really made me feel like he was part and parcel of the Internet society, like he belonged in the place where your thoughts are what matter, and not who you are or how old you are.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"creative-commons-pacer-demand-progress\"\u003eCreative Commons. PACER. Demand Progress.\u003c/h2\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/hugo/posts/2013/demand-progress@2x.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/hugo/posts/2013/demand-progress@2x.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eEvery so often throughout the last decade, his name would pop-up around topics that I was also interested in. \u003ca href=\"https://web.archive.org/web/20130112214639/http://creativecommons.org\"\u003eCreative Commons\u003c/a\u003e. Opening up \u003ca href=\"https://web.archive.org/web/20130112214639/https://www.recapthelaw.org\"\u003epublic access to court records\u003c/a\u003e. \u003ca href=\"https://web.archive.org/web/20130112214639/http://demandprogress.org\"\u003eDemand Progress\u003c/a\u003e. He used technology to fight for the same sorts of causes that I fight for, evangelize for, or are otherwise close to my heart. \u003cem\u003eNamely:\u003c/em\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003ethe over-criminalization of American citizens by its government, and…\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ethe fact that the people we elect to represent us in government would throw us under the bus in a heartbeat if it meant more money, power and political cachet.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eCory Doctorow continues:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAt one point, he singlehandedly liberated 20 percent of US law. PACER, the system that gives Americans access to their own (public domain) case-law, charged a fee for each such access. After activists built RECAP (which allowed its users to put any caselaw they paid for into a free/public repository), Aaron spent a small fortune fetching a titanic amount of data and putting it into the public domain. The feds hated this. They smeared him, the FBI investigated him, and for a while, it looked like he’d be on the pointy end of some bad legal stuff, but he escaped it all, and emerged triumphant.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAaron was involved in the creation of an organization called \u003ca href=\"https://web.archive.org/web/20130112214639/http://demandprogress.org\"\u003eDemand Progress\u003c/a\u003e, who \u003cem\u003e“works to win progressive policy changes for ordinary people through organizing, and grassroots lobbying. In particular, we tend to focus on issues of civil liberties, civil rights, and government reform.”\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIt was here where I first learned about the Senate’s proposed \u003ca href=\"https://web.archive.org/web/20130112214639/http://www.fightforthefuture.org/pipa/\"\u003ePROTECT-IP Act\u003c/a\u003e (later renamed “PIPA”), and it’s House sibling, the ill-fated \u003ca href=\"https://web.archive.org/web/20130112214639/http://sopastrike.com\"\u003eSOPA Act\u003c/a\u003e, whose negative repercussions would have been felt for \u003cem\u003egenerations\u003c/em\u003e to come.\u003c/p\u003e\n\u003ch2 id=\"download-too-much-go-to-jail\"\u003eDownload too much, go to jail\u003c/h2\u003e\n\u003cp\u003eFrom a \u003ca href=\"https://web.archive.org/web/20130112214639/http://bits.blogs.nytimes.com/2011/07/19/reddit-co-founder-charged-with-data-theft/?pagewanted=all\"\u003eNew York Times article dated July 19, 2011\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eDemand Progress said on its site that it appeared Mr. Swartz was “being charged with allegedly downloading too many scholarly journal articles from the Web.” It quoted the group’s executive director, David Segal, as saying, “It’s like trying to put someone in jail for allegedly checking too many books out of the library.”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eCory Doctorow:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAaron snuck into MIT and planted a laptop in a utility closet, used it to download a lot of journal articles (many in the public domain), and then snuck in and retrieved it. This sort of thing is pretty par for the course around MIT, and though Aaron wasn’t an MIT student, he was a fixture in the Cambridge hacker scene, and associated with Harvard, and generally part of that gang, and Aaron hadn’t done anything with the articles (yet), so it seemed likely that it would just fizzle out. Instead, they threw the book at him. Even though MIT and JSTOR (the journal publisher) backed down, the prosecution kept on. I heard lots of theories: the feds who’d tried unsuccessfully to nail him for the PACER/RECAP stunt had a serious hate-on for him; the feds were chasing down all the Cambridge hackers who had any connection to Bradley Manning in the hopes of turning one of them, and other, less credible theories. A couple of lawyers close to the case told me that they thought Aaron would go to jail.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAnd \u003ca href=\"https://web.archive.org/web/20130112214639/http://lessig.tumblr.com/post/40347463044/prosecutor-as-bully\"\u003eLarry Lessig\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eBut all this shows is that if the government proved its case, some punishment was appropriate. So what was that appropriate punishment? Was Aaron a terrorist? Or a cracker trying to profit from stolen goods? Or was this something completely different? Early on, and to its great credit, JSTOR figured “appropriate” out: They declined to pursue their own action against Aaron, and they asked the government to drop its. MIT, to its great shame, was not as clear, and so the prosecutor had the excuse he needed to continue his war against the “criminal” who we who loved him knew as Aaron.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAnd an \u003ca href=\"https://web.archive.org/web/20130112214639/http://www.techdirt.com/articles/20120917/17393320412/us-government-ups-felony-count-jstoraaron-swartz-case-four-to-thirteen.shtml\"\u003earticle from September\u003c/a\u003e by Tim Cushing from TechDirt:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSwartz, the executive director of Demand Progress, was charged with violating the Computer Fraud and Abuse Act, a catch-all designation for “computer activity the US government doesn’t like.” Swartz had accessed MIT’s computer network to download a large number of files from JSTOR, a non-profit that hosts academic journal articles. US prosecutors claimed he “stole” several thousand files, but considering MIT offered this access for free on campus (and the files being digital), it’s pretty tough to square his massive downloading with any idea of “theft.”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"prosecutor-as-bully\"\u003eProsecutor as bully\u003c/h2\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/hugo/posts/2013/aaron-swartz2.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/hugo/posts/2013/aaron-swartz2.jpg\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003cspan itemscope itemtype=\"http://schema.org/Person\"\u003e\u003cspan itemprop=\"name\"\u003eLarry Lessig\u003c/span\u003e\u003c/span\u003e\n continues (reformatted paragraphs, mine):\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHere is where we need a better sense of justice, and shame. For the outrageousness in this story is not just Aaron. It is also the absurdity of the prosecutor’s behavior.\u003c/p\u003e\n\u003cp\u003eFrom the beginning, the government worked as hard as it could to characterize what Aaron did in the most extreme and absurd way. The “property” Aaron had “stolen,” we were told, was worth “millions of dollars” — with the hint, and then the suggestion, that his aim must have been to profit from his crime. But anyone who says that there is money to be made in a stash of \u003cem\u003eACADEMIC ARTICLES\u003c/em\u003e is either an idiot or a liar. It was clear what this was not, yet our government continued to push as if it had caught the 9/11 terrorists red-handed.\u003c/p\u003e\n\u003cp\u003eAaron had literally done nothing in his life “to make money.” He was fortunate Reddit turned out as it did, but from his work building the RSS standard, to his work architecting Creative Commons, to his work liberating public records, to his work building a free public library, to his work supporting Change Congress/FixCongressFirst/Rootstrikers, and then Demand Progress, Aaron was always and only working for (at least his conception of) the public good. He was brilliant, and funny. A kid genius. A soul, a conscience, the source of a question I have asked myself a million times: What would Aaron think?\u003c/p\u003e\n\u003cp\u003eThat person is gone today, driven to the edge by what a decent society would only call bullying. I get wrong. But I also get proportionality. And if you don’t get both, you don’t deserve to have the power of the United States government [against] you. For remember, we live in a world where the architects of the financial crisis regularly dine at the White House — and where even those brought to “justice” never even have to admit any wrongdoing, let alone be labeled “felons.”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAnd again from TechDirt:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThere are now 13 felony counts in the new indictment, derived from claims of multiple instances of breaking those four laws. In specific:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWire Fraud - 2 counts\u003c/li\u003e\n\u003cli\u003eComputer Fraud - 5 counts\u003c/li\u003e\n\u003cli\u003eUnlawfully Obtaining Information from a Protected Computer - 5 counts\u003c/li\u003e\n\u003cli\u003eRecklessly Damaging a Protected Computer - 1 count\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIt’s beyond my pay grade to figure out how many years in prison that all could be, when taking into account the complexities of sentencing law. Let’s leave it at a large scary number. Enough to ruin someone’s life.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eAnd the kicker…\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSo, how do the new charges stack up in terms of a sentence? Tough to say. Each of the charges carries the possibility of a fine and imprisonment of up to 10–20 years per felony. Depending on how many of the counts Swartz is found guilty of, the sentence could conceivably total 50+ years and fine in the area of $4 million. All this over publicly accessed research documents that JSTOR doesn’t even feel the need to pursue further than it did.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"in-the-end\"\u003eIn the end\u003c/h2\u003e\n\u003cp\u003e\u003cspan itemscope itemtype=\"http://schema.org/Person\"\u003e\u003cspan itemprop=\"name\"\u003eAlan Ellis\u003c/span\u003e\u003c/span\u003e\n, a nationally-recognized federal criminal defense lawyer \u003ca href=\"https://web.archive.org/web/20130112214639/http://www.alanellis.com\"\u003eexplains\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNearly 97 percent of all federal criminal defendants will plead guilty. Of the remaining 3 percent who go to trial, as many as 75 percent will be convicted. Thus, nearly 99 percent of all federal criminal defendants will be sentenced. Of that number, 80 percent of defendants will receive jail or prison time.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSpecifically:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e96.9% of federal criminal cases result in a guilty plea. (U.S. Sentencing Commission)\u003c/li\u003e\n\u003cli\u003e75.6% of federal criminal defendants are convicted following trial. (U.S. Department of Justice)\u003c/li\u003e\n\u003cli\u003e99% of federal defendants are sentenced.\u003c/li\u003e\n\u003cli\u003e82.8% of federal criminal defendants receive a prison term. (U.S. Sentencing Commission)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn the end, while nobody knows why Aaron decided to take his own life, I could certainly posit a guess. When the federal government comes after you, you’re pretty much done for. In Aaron’s case, he pissed off the wrong federal prosecutors, and they moved to eviscerate him, legally, over downloading academic journals that MIT provided access to for free.\u003c/p\u003e\n\u003cp\u003eWhat a terrible, terrible shame.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/hugo/posts/2013/aaron-swartz3@2x.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/hugo/posts/2013/aaron-swartz3@2x.jpg\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"update-20130112\"\u003eUpdate (2013–01–12)\u003c/h2\u003e\n\u003cp\u003eAs the day has gone on, more people have been sharing their thoughts on Aaron, his case, and the person he was.\u003c/p\u003e\n\u003cp\u003eA \u003ca href=\"https://web.archive.org/web/20130112214639/https://gist.github.com/skyzyx/7bee92a5302f87c0457ffb691f936a81\"\u003epost by Aaron Swartz\u003c/a\u003e, dated July 2008.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThere is no justice in following unjust laws. It’s time to come into the light and, in the grand tradition of civil disobedience, declare our opposition to this private theft of public culture.\u003c/p\u003e\n\u003cp\u003eWe need to take information, wherever it is stored, make our copies and share them with the world. We need to take stuff that’s out of copyright and add it to the archive. We need to buy secret databases and put them on the Web. We need to download scientific journals and upload them to file sharing networks. We need to fight for Guerilla Open Access.\u003c/p\u003e\n\u003cp\u003eWith enough of us, around the world, we’ll not just send a strong message opposing the privatization of knowledge — we’ll make it a thing of the past. Will you join us?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThe \u003ca href=\"https://web.archive.org/web/20130112214639/http://rememberaaronsw.tumblr.com/post/40372208044/official-statement-from-the-family-and-partner-of-aaron\"\u003eofficial statement from Aaron Swartz’ family\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAaron’s commitment to social justice was profound, and defined his life. He was instrumental to the defeat of an Internet censorship bill; he fought for a more democratic, open, and accountable political system; and he helped to create, build, and preserve a dizzying range of scholarly projects that extended the scope and accessibility of human knowledge. He used his prodigious skills as a programmer and technologist not to enrich himself but to make the Internet and the world a fairer, better place. His deeply humane writing touched minds and hearts across generations and continents. He earned the friendship of thousands and the respect and support of millions more.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eFrom the post \u0026ldquo;\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.quinnnorton.com/said/?p=644\"\u003eMy Aaron Swartz, whom I loved.\u003c/a\u003e,\u0026rdquo; by Quinn Norton:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHe loved my daughter so much it filled the room like a mist. He was transported playing with her, and she bored right into his heart. In his darkest moments, which I couldn’t reach him, Ada could still touch him, even if only for a moment. And when he was in the light, my god. I couldn’t keep up with either of them. I would hang back and watch them spring and play and laugh, and be so grateful for them both.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eExpert witness Alex Stamos, in \u0026ldquo;\u003ca href=\"https://web.archive.org/web/20130112214639/http://unhandled.com/2013/01/12/the-truth-about-aaron-swartzs-crime/\"\u003eThe Truth about Aaron Swartz’s ‘Crime’\u003c/a\u003e\u0026quot;:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIn short, Aaron Swartz was not the super hacker breathlessly described in the Government’s indictment and forensic reports, and his actions did not pose a real danger to JSTOR, MIT or the public. He was an intelligent young man who found a loophole that would allow him to download a lot of documents quickly. This loophole was created intentionally by MIT and JSTOR, and was codified contractually in the piles of paperwork turned over during discovery.\u003c/p\u003e\n\u003cp\u003eIf I had taken the stand as planned and had been asked by the prosecutor whether Aaron’s actions were “wrong”, I would probably have replied that what Aaron did would better be described as “inconsiderate”. In the same way it is inconsiderate to write a check at the supermarket while a dozen people queue up behind you or to check out every book at the library needed for a History 101 paper. It is inconsiderate to download lots of files on shared wifi or to spider Wikipedia too quickly, but none of these actions should lead to a young person being hounded for years and haunted by the possibility of a 35 year sentence.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"update-20130120\"\u003eUpdate (2013–01–20)\u003c/h2\u003e\n\u003cp\u003eI’ve continued to add to the links below as I’ve come across them, but a few more interesting things are beginning to shake-out from Aaron’s prosecution.\u003c/p\u003e\n\u003cp\u003eScott Horton from Harper’s Magazine \u003ca href=\"https://web.archive.org/web/20130112214639/http://harpers.org/blog/2013/01/carmen-ortiz-strikes-out/\"\u003ewrites\u003c/a\u003e (Emphasis \u003cem\u003emine\u003c/em\u003e):\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eU.S. Attorney Carmen Ortiz is fighting to hold on to her job, and to avoid an embarrassing grilling in Congress and possible professional disciplinary proceedings. Her prospects look grim. Rep. Darrell Issa (R., Calif.), chair of the House Committee on Oversight is pledging a vigorous and critical inquiry into her management of the dubious criminal prosecution of Aaron Swartz, one of the greatest computer prodigies of his generation, who committed suicide a week ago, apparently convinced that out-of-control prosecutors had destroyed his life. […]\u003c/p\u003e\n\u003cp\u003eAt funeral services in Highland Park, Illinois, on Tuesday, Swartz’s father charged that his son had been “killed by the government.” While some might ascribe this to the anguish of a bereaved father, scholars and investigators poring over the record of the Swartz prosecution are increasingly shocked at the scope and outrageousness of the prosecutorial misconduct that he faced. […]\u003c/p\u003e\n\u003cp\u003eAlthough each of these counts bordered on the preposterous, Ortiz and Heymann clearly reckoned that at least one or two would stick during the jury-room bargaining process. More to the point, they assumed that the risk of their success even on bogus charges would be enough to pressure Swartz into accepting a guilty plea on all the counts in exchange for a reduced sentence — which is what they offered him. The process was fundamentally corrupt and shameful. \u003cem\u003eBut observers of the American criminal-justice system also know that it was a common one.\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI first learned about this corrupt little trick, long-since leveraged by federal prosecutors, when my best-friend-since-childhood made a stupid mistake one evening that was technically a felony offense — he viewed a 30-second video clip of \u003cem\u003esomebody else\u003c/em\u003e committing a felony.\u003c/p\u003e\n\u003cp\u003eThis is the same thing that police do when they’re investigating a bank robbery. The same thing that news anchors do when they show a security tape of people smashing through the front-doors of an Apple Store to steal iPads, \u003cem\u003e“more at eleven”\u003c/em\u003e. Had he walked by and seen it happening through a window, he wouldn’t have been prosecuted. But he saw a half-minute \u003cem\u003erecording\u003c/em\u003e and they threw the book at him. It’s very much like how prostitution is illegal, but if you record the act, suddenly it becomes porn. Perfectly legal.\u003c/p\u003e\n\u003cp\u003e50 hours of community service would have been \u003cem\u003eplenty\u003c/em\u003e to correct the mistake he made and make him pay more attention to his actions in the future. Instead, trumped-up charges by federal prosecutors resulted in him being sentenced to 2 years in a federal penitentiary, followed by 5 years under probation, and another 15–20 years on the Sex Offender Registry living as a social pariah.\u003c/p\u003e\n\u003cp\u003e(Studies by the U.S. Justice Department and other organizations show that \u003ca href=\"https://web.archive.org/web/20130112214639/https://www.nytimes.com/2011/08/21/opinion/sunday/sex-offenders-the-last-pariahs.html?pagewanted=all\u0026amp;_r=0\"\u003erecidivism rates are significantly lower for convicted sex offenders than for burglars, robbers, thieves, drug offenders and other convicts\u003c/a\u003e.)\u003c/p\u003e\n\u003cp\u003eHe lost his home, his career, many of his friends, and because of his registry status he can’t find work — all because he made a stupid mistake. He’s doing everything he possibly can to re-assimilate back into society, but society doesn’t want him. His life was ruined. Fortunately, he’s smart, well-spoken and a hard worker. He was able to start two companies and is able to provide for his wife and 3 children. One of those companies is \u003ca href=\"https://web.archive.org/web/20130112214639/http://pcr-consultants.com\"\u003ededicated to helping people\u003c/a\u003e who were likewise abused by the federal justice system and have experienced the injustice of the Bureau of Prisons.\u003c/p\u003e\n\u003cp\u003eBut I digress…\u003c/p\u003e\n\u003cp\u003eTimothy B. Lee, from Ars Technica, \u003ca href=\"https://web.archive.org/web/20130112214639/http://arstechnica.com/tech-policy/2013/01/aarons-law-congressional-investigation-in-wake-of-swartz-suicide/\"\u003efollows-up on Aaron’s Law\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eOn Tuesday, Rep. \u003cspan itemscope itemtype=\"http://schema.org/Person\"\u003e\u003cspan itemprop=\"name\"\u003eZoe Lofgren\u003c/span\u003e\u003c/span\u003e\n (D-CA) took to the pages of reddit to introduce legislation she dubbed “Aaron’s Law.” Lofgren’s bill would modify the Computer Fraud and Abuse Act, the basis for Swartz’s prosecution, to clarify that its definition of unauthorized access “does not include access in violation of an agreement or contractual obligation, such as an acceptable use policy or terms of service agreement, with an Internet service provider, Internet website, or employer.” It would make a similar change to the wire fraud statute.\u003c/p\u003e\n\u003cp\u003eThe language was praised by Harvard law professor Lawrence Lessig, a friend of Swartz whose wife organized his legal defense fund. “This is a CRITICALLY important change that would do incredible good,” Lessig wrote on reddit. “The CFAA was the hook for the government’s bullying of @aaronsw. This law would remove that hook.”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"more-links\"\u003eMore links…\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://blogoscoped.com/archive/2007-05-07-n78.html\"\u003eA Chat with Aaron Swartz\u003c/a\u003e (Blogoscoped)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/https://github.com/joshleitzel/rawthought\"\u003eRaw Thought: The Weblog of Aaron Swartz in Markdown, PDF, and ePub\u003c/a\u003e (GitHub)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://harpers.org/blog/2013/01/carmen-ortiz-strikes-out/\"\u003eCarmen Ortiz Strikes Out\u003c/a\u003e (Harper’s)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.esquire.com/blogs/politics/aaron-swartz-case-011713\"\u003eStill More About The Death Of Aaron Swartz\u003c/a\u003e (Esquire)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.newyorker.com/online/blogs/newsdesk/2013/01/everyone-interesting-is-a-felon.html?currentPage=all\"\u003eHow the Legal System Failed Aaron Swartz\u003c/a\u003e (The New Yorker)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.huffingtonpost.com/2013/01/15/darrell-issa-aaron-swartz-_n_2481450.html\"\u003eDarrell Issa Probing Prosecution Of Aaron Swartz, Internet Pioneer Who Killed Himself\u003c/a\u003e (Huffington Post)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://thehill.com/blogs/hillicon-valley/technology/277353-lawmakers-blast-trumped-up-doj-prosecution-of-internet-activist\"\u003eLawmakers slam DOJ prosecution of Swartz as ‘ridiculous, absurd’\u003c/a\u003e (The Hill)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.npr.org/2013/01/15/169421636/did-prosecutors-go-too-far-in-swartz-case\"\u003eDid Prosecutors Go Too Far In Swartz Case?\u003c/a\u003e (NPR)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://mashable.com/2013/01/15/aaron-swartz-petition/\"\u003e25,000 People Sign Petition to Remove Aaron Swartz’s Prosecutors\u003c/a\u003e (Mashable)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://arstechnica.com/tech-policy/2013/01/aarons-law-congressional-investigation-in-wake-of-swartz-suicide/\"\u003e“Aaron’s law,” Congressional investigation in wake of Swartz suicide\u003c/a\u003e (Ars Technica)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/https://www.eff.org/deeplinks/2013/01/farewell-aaron-swartz\"\u003eFarewell to Aaron Swartz, an extraordinary hacker and activist\u003c/a\u003e (Electronic Frontier Foundation)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://arstechnica.com/tech-policy/2012/09/feds-go-overboard-in-prosecuting-information-activist/\"\u003eFeds go overboard in prosecuting information activist\u003c/a\u003e (Ars Technica)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/https://public.resource.org/aaron/\"\u003eBe free\u003c/a\u003e (resource.org)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/https://www.nytimes.com/2013/01/13/technology/aaron-swartz-internet-activist-dies-at-26.html?pagewanted=all\"\u003eAaron Swartz, Precocious Programmer and Internet Activist, Dies at 26\u003c/a\u003e (New York Times)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://news.ycombinator.com/item?id=5048123\"\u003eAaronSW may have left everything to Givewell, an efficient meta-charity\u003c/a\u003e (Hacker News)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.vivtek.com/aaron_swartz_legacy.html\"\u003eAaron Swartz’s legacy\u003c/a\u003e (Michael Roberts)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://lists.w3.org/Archives/Public/www-tag/2013Jan/0017.html\"\u003eAaron is dead.\u003c/a\u003e (Sir Tim Berners-Lee, W3C)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.markbernstein.org/Jan13/AaronSwartz.html\"\u003eAaron Swartz\u003c/a\u003e (Mark Bernstein)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://inessential.com/2013/01/12/aaron_swartz\"\u003eAaron Swartz\u003c/a\u003e (Brent Simmons)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://alexdong.com/soulmate-lost-rip-aaron-swartz/\"\u003eSoulmate lost. RIP Aaron Swartz.\u003c/a\u003e (Alex Dong)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://arstechnica.com/tech-policy/2013/01/aaron-swartz-and-me-over-a-loosely-intertwined-decade/\"\u003eAaron Swartz and me, over a loosely intertwined decade\u003c/a\u003e (Ars Technica)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://about.jstor.org/statement-swartz\"\u003eAaron Swartz\u003c/a\u003e (JSTOR)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://blog.archive.org/2013/01/12/aaron-swartz-hero-of-the-open-world-rip/\"\u003eAaron Swartz, hero of the open world, dies\u003c/a\u003e (archive.org)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.thoughtworks.com/articles/remembering-aaron-swartz\"\u003eRemembering Aaron Swartz\u003c/a\u003e (ThoughtWorks)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://yro.slashdot.org/story/13/01/13/139218/us-attorney-chided-swartz-on-day-of-suicide\"\u003eUS Attorney Chided Swartz On Day of Suicide\u003c/a\u003e (Slashdot)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://torrentfreak.com/remember-aaron-swartz-130113/\"\u003eRemember Aaron Swartz (1986 – 2013)\u003c/a\u003e (TorrentFreak)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://sciencecitizen.org/?p=219\"\u003eOur tribute to Aaron Swartz\u003c/a\u003e (Science Citizen)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.aarongreenspan.com/writing/essay.html?id=83\"\u003e$10,000: The Aaron Swartz Memorial Grants\u003c/a\u003e (Aaron Greenspan)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://web.mit.edu/newsoffice/2013/letter-on-death-of-aaron-swartz.html\"\u003eStatement on behalf of MIT\u003c/a\u003e (L. Rafael Reif)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://discountgeni.us/2013/01/13/why-am-i-so-upset-about-aaron-swartzs-suicide/\"\u003eWhy Am I So Upset About Aaron Swartz’s Suicide?\u003c/a\u003e (John Atkinson)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.volokh.com/2013/01/14/aaron-swartz-charges/\"\u003eThe Criminal Charges Against Aaron Swartz (Part 1: The Law)\u003c/a\u003e (The Volokh Conspiracy)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/https://www.nytimes.com/2013/01/14/technology/aaron-swartz-a-data-crusader-and-now-a-cause.html?pagewanted=all\"\u003eA Data Crusader, a Defendant and Now, a Cause\u003c/a\u003e (New York Times)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.hacker9.com/anonymous-hacks-2-mit-websites-in-the-memory-of-web-activist-aaron-swartz.html\"\u003eAnonymous hacks 2 MIT websites in the memory of web activist Aaron Swartz\u003c/a\u003e (hacker9)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.economist.com/blogs/babbage/2013/01/remembering-aaron-swartz\"\u003eRemembering Aaron Swartz: Commons man\u003c/a\u003e (The Economist)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://danbri.org/words/2013/01/13/815\"\u003eRemembering Aaron Swartz\u003c/a\u003e (danbri.org)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://crookedtimber.org/2013/01/13/mit-and-aaron-swartz/\"\u003eMIT and Aaron Swartz\u003c/a\u003e (Crooked Timber)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://rt.com/usa/news/swartz-prosecutor-suicide-hacker-050/\"\u003eProsecutor pursuing Aaron Swartz linked to suicide of another hacker\u003c/a\u003e (RT.com)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://cyberlaw.stanford.edu/blog/2013/01/towards-learning-losing-aaron-swartz-part-2\"\u003eTowards Learning from Losing Aaron Swartz: Part 2\u003c/a\u003e (Stanford Law School)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://www.thedailymuse.com/education/aaron-swartz-didnt-have-to-die/\"\u003eAaron Swartz: Idealist, Innovator—And Now Victim\u003c/a\u003e (The Daily Muse)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://arstechnica.com/tech-policy/2013/01/weve-lost-a-fighter-hundreds-gather-to-mourn-aaron-swartz/\"\u003e“We’ve lost a fighter”: Hundreds gather to mourn Aaron Swartz\u003c/a\u003e (Ars Technica)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://gothamist.com/2013/01/15/aaron_swartzs_lawyer_mit_refused_pl.php\"\u003eAaron Swartz’s Lawyer: MIT Refused Plea Deal Without Jail Time\u003c/a\u003e (Gothamist)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://pcr-consultants.com/2013/01/the-suicide-of-a-federal-criminal-defendant/\"\u003eThe Suicide of a Federal Criminal Defendant\u003c/a\u003e (PCR Consultants)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://waxy.org/2013/01/aaron/\"\u003eAaron\u003c/a\u003e (Waxy.org)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://erratasec.blogspot.com/2013/01/i-conceal-my-identity-same-way-aaron.html\"\u003eI conceal my identity the same way Aaron was indicted for\u003c/a\u003e (Errata Security)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://psychcentral.com/blog/archives/2013/01/15/aaron-swartz-a-culture-of-denial-depression-suicide-in-tech/\"\u003eAaron Swartz \u0026amp; A Culture of Denial: Depression \u0026amp; Suicide in Tech\u003c/a\u003e (PsychCentral)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://hcrenewal.blogspot.ca/2013/01/the-tragic-case-of-aaron-swartz-unequal.html\"\u003eThe Tragic Case of Aaron Swartz: Unequal Justice for Web Activists vs Health Care Corporate Executives\u003c/a\u003e (Health Care Renewal)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://cryptome.org/2013/01/swartz/mit-closet-swartz.htm\"\u003eMIT Closet Allegedly Used by Aaron Swartz\u003c/a\u003e (Cryptome)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20130112214639/http://danwin.com/2013/01/edward-tufte-aaron-swartz-marvelously-different/\"\u003eEdward Tufte’s defense of Aaron Swartz and the “marvelously different”\u003c/a\u003e (Dan Nguyen)\u003c/li\u003e\n\u003c/ul\u003e\n",
        "plain":"I didn’t know Aaron personally, so there’s no insight I can provide into the person who I’ve read people describe as “a brilliant soul”.\n  The world is now a worse place The tech world is abuzz with the news that, at only 26 years old, Aaron Swartz decided to take his own life. I heard about it last night when I opened up Tweetbot, and saw two tweets back-to-back in my timeline:\n@al3x :\n We lost @aaronsw. — Alex Payne (@al3x) January 12, 2013.\n @dcurtis :\n Fuck. tech.mit.edu/V132/N61/swart…The world is now a worse place. — dustin curtis (@dcurtis) January 12, 2013.\n RSS Being part of the web world, I certainly knew Aaron by reputation. I first heard about him back when I started tinkering with RSS in 2003. While I may have started a project that simplified RSS for a legion of PHP developers, Aaron literally wrote the spec — and at 14 years old, I might add.\nCory Doctorow had this to say:\n I met Aaron when he was 14 or 15. He was working on XML stuff (he co-wrote the RSS specification when he was 14) and came to San Francisco often, and would stay with Lisa Rein , a friend of mine who was also an XML person and who took care of him and assured his parents he had adult supervision. In so many ways, he was an adult, even then, with a kind of intense, fast intellect that really made me feel like he was part and parcel of the Internet society, like he belonged in the place where your thoughts are what matter, and not who you are or how old you are.\n Creative Commons. PACER. Demand Progress.   Every so often throughout the last decade, his name would pop-up around topics that I was also interested in. Creative Commons. Opening up public access to court records. Demand Progress. He used technology to fight for the same sorts of causes that I fight for, evangelize for, or are otherwise close to my heart. Namely:\n  the over-criminalization of American citizens by its government, and…\n  the fact that the people we elect to represent us in government would throw us under the bus in a heartbeat if it meant more money, power and political cachet.\n  Cory Doctorow continues:\n At one point, he singlehandedly liberated 20 percent of US law. PACER, the system that gives Americans access to their own (public domain) case-law, charged a fee for each such access. After activists built RECAP (which allowed its users to put any caselaw they paid for into a free/public repository), Aaron spent a small fortune fetching a titanic amount of data and putting it into the public domain. The feds hated this. They smeared him, the FBI investigated him, and for a while, it looked like he’d be on the pointy end of some bad legal stuff, but he escaped it all, and emerged triumphant.\n Aaron was involved in the creation of an organization called Demand Progress, who “works to win progressive policy changes for ordinary people through organizing, and grassroots lobbying. In particular, we tend to focus on issues of civil liberties, civil rights, and government reform.”\nIt was here where I first learned about the Senate’s proposed PROTECT-IP Act (later renamed “PIPA”), and it’s House sibling, the ill-fated SOPA Act, whose negative repercussions would have been felt for generations to come.\nDownload too much, go to jail From a New York Times article dated July 19, 2011:\n Demand Progress said on its site that it appeared Mr. Swartz was “being charged with allegedly downloading too many scholarly journal articles from the Web.” It quoted the group’s executive director, David Segal, as saying, “It’s like trying to put someone in jail for allegedly checking too many books out of the library.”\n Cory Doctorow:\n Aaron snuck into MIT and planted a laptop in a utility closet, used it to download a lot of journal articles (many in the public domain), and then snuck in and retrieved it. This sort of thing is pretty par for the course around MIT, and though Aaron wasn’t an MIT student, he was a fixture in the Cambridge hacker scene, and associated with Harvard, and generally part of that gang, and Aaron hadn’t done anything with the articles (yet), so it seemed likely that it would just fizzle out. Instead, they threw the book at him. Even though MIT and JSTOR (the journal publisher) backed down, the prosecution kept on. I heard lots of theories: the feds who’d tried unsuccessfully to nail him for the PACER/RECAP stunt had a serious hate-on for him; the feds were chasing down all the Cambridge hackers who had any connection to Bradley Manning in the hopes of turning one of them, and other, less credible theories. A couple of lawyers close to the case told me that they thought Aaron would go to jail.\n And Larry Lessig:\n But all this shows is that if the government proved its case, some punishment was appropriate. So what was that appropriate punishment? Was Aaron a terrorist? Or a cracker trying to profit from stolen goods? Or was this something completely different? Early on, and to its great credit, JSTOR figured “appropriate” out: They declined to pursue their own action against Aaron, and they asked the government to drop its. MIT, to its great shame, was not as clear, and so the prosecutor had the excuse he needed to continue his war against the “criminal” who we who loved him knew as Aaron.\n And an article from September by Tim Cushing from TechDirt:\n Swartz, the executive director of Demand Progress, was charged with violating the Computer Fraud and Abuse Act, a catch-all designation for “computer activity the US government doesn’t like.” Swartz had accessed MIT’s computer network to download a large number of files from JSTOR, a non-profit that hosts academic journal articles. US prosecutors claimed he “stole” several thousand files, but considering MIT offered this access for free on campus (and the files being digital), it’s pretty tough to square his massive downloading with any idea of “theft.”\n Prosecutor as bully   Larry Lessig continues (reformatted paragraphs, mine):\n Here is where we need a better sense of justice, and shame. For the outrageousness in this story is not just Aaron. It is also the absurdity of the prosecutor’s behavior.\nFrom the beginning, the government worked as hard as it could to characterize what Aaron did in the most extreme and absurd way. The “property” Aaron had “stolen,” we were told, was worth “millions of dollars” — with the hint, and then the suggestion, that his aim must have been to profit from his crime. But anyone who says that there is money to be made in a stash of ACADEMIC ARTICLES is either an idiot or a liar. It was clear what this was not, yet our government continued to push as if it had caught the 9/11 terrorists red-handed.\nAaron had literally done nothing in his life “to make money.” He was fortunate Reddit turned out as it did, but from his work building the RSS standard, to his work architecting Creative Commons, to his work liberating public records, to his work building a free public library, to his work supporting Change Congress/FixCongressFirst/Rootstrikers, and then Demand Progress, Aaron was always and only working for (at least his conception of) the public good. He was brilliant, and funny. A kid genius. A soul, a conscience, the source of a question I have asked myself a million times: What would Aaron think?\nThat person is gone today, driven to the edge by what a decent society would only call bullying. I get wrong. But I also get proportionality. And if you don’t get both, you don’t deserve to have the power of the United States government [against] you. For remember, we live in a world where the architects of the financial crisis regularly dine at the White House — and where even those brought to “justice” never even have to admit any wrongdoing, let alone be labeled “felons.”\n And again from TechDirt:\n There are now 13 felony counts in the new indictment, derived from claims of multiple instances of breaking those four laws. In specific:\n Wire Fraud - 2 counts Computer Fraud - 5 counts Unlawfully Obtaining Information from a Protected Computer - 5 counts Recklessly Damaging a Protected Computer - 1 count  It’s beyond my pay grade to figure out how many years in prison that all could be, when taking into account the complexities of sentencing law. Let’s leave it at a large scary number. Enough to ruin someone’s life.\n And the kicker…\n So, how do the new charges stack up in terms of a sentence? Tough to say. Each of the charges carries the possibility of a fine and imprisonment of up to 10–20 years per felony. Depending on how many of the counts Swartz is found guilty of, the sentence could conceivably total 50+ years and fine in the area of $4 million. All this over publicly accessed research documents that JSTOR doesn’t even feel the need to pursue further than it did.\n In the end Alan Ellis , a nationally-recognized federal criminal defense lawyer explains:\n Nearly 97 percent of all federal criminal defendants will plead guilty. Of the remaining 3 percent who go to trial, as many as 75 percent will be convicted. Thus, nearly 99 percent of all federal criminal defendants will be sentenced. Of that number, 80 percent of defendants will receive jail or prison time.\n Specifically:\n 96.9% of federal criminal cases result in a guilty plea. (U.S. Sentencing Commission) 75.6% of federal criminal defendants are convicted following trial. (U.S. Department of Justice) 99% of federal defendants are sentenced. 82.8% of federal criminal defendants receive a prison term. (U.S. Sentencing Commission)  In the end, while nobody knows why Aaron decided to take his own life, I could certainly posit a guess. When the federal government comes after you, you’re pretty much done for. In Aaron’s case, he pissed off the wrong federal prosecutors, and they moved to eviscerate him, legally, over downloading academic journals that MIT provided access to for free.\nWhat a terrible, terrible shame.\n  Update (2013–01–12) As the day has gone on, more people have been sharing their thoughts on Aaron, his case, and the person he was.\nA post by Aaron Swartz, dated July 2008.\n There is no justice in following unjust laws. It’s time to come into the light and, in the grand tradition of civil disobedience, declare our opposition to this private theft of public culture.\nWe need to take information, wherever it is stored, make our copies and share them with the world. We need to take stuff that’s out of copyright and add it to the archive. We need to buy secret databases and put them on the Web. We need to download scientific journals and upload them to file sharing networks. We need to fight for Guerilla Open Access.\nWith enough of us, around the world, we’ll not just send a strong message opposing the privatization of knowledge — we’ll make it a thing of the past. Will you join us?\n The official statement from Aaron Swartz’ family:\n Aaron’s commitment to social justice was profound, and defined his life. He was instrumental to the defeat of an Internet censorship bill; he fought for a more democratic, open, and accountable political system; and he helped to create, build, and preserve a dizzying range of scholarly projects that extended the scope and accessibility of human knowledge. He used his prodigious skills as a programmer and technologist not to enrich himself but to make the Internet and the world a fairer, better place. His deeply humane writing touched minds and hearts across generations and continents. He earned the friendship of thousands and the respect and support of millions more.\n From the post \u0026ldquo;My Aaron Swartz, whom I loved.,\u0026rdquo; by Quinn Norton:\n He loved my daughter so much it filled the room like a mist. He was transported playing with her, and she bored right into his heart. In his darkest moments, which I couldn’t reach him, Ada could still touch him, even if only for a moment. And when he was in the light, my god. I couldn’t keep up with either of them. I would hang back and watch them spring and play and laugh, and be so grateful for them both.\n Expert witness Alex Stamos, in \u0026ldquo;The Truth about Aaron Swartz’s ‘Crime’\u0026quot;:\n In short, Aaron Swartz was not the super hacker breathlessly described in the Government’s indictment and forensic reports, and his actions did not pose a real danger to JSTOR, MIT or the public. He was an intelligent young man who found a loophole that would allow him to download a lot of documents quickly. This loophole was created intentionally by MIT and JSTOR, and was codified contractually in the piles of paperwork turned over during discovery.\nIf I had taken the stand as planned and had been asked by the prosecutor whether Aaron’s actions were “wrong”, I would probably have replied that what Aaron did would better be described as “inconsiderate”. In the same way it is inconsiderate to write a check at the supermarket while a dozen people queue up behind you or to check out every book at the library needed for a History 101 paper. It is inconsiderate to download lots of files on shared wifi or to spider Wikipedia too quickly, but none of these actions should lead to a young person being hounded for years and haunted by the possibility of a 35 year sentence.\n Update (2013–01–20) I’ve continued to add to the links below as I’ve come across them, but a few more interesting things are beginning to shake-out from Aaron’s prosecution.\nScott Horton from Harper’s Magazine writes (Emphasis mine):\n U.S. Attorney Carmen Ortiz is fighting to hold on to her job, and to avoid an embarrassing grilling in Congress and possible professional disciplinary proceedings. Her prospects look grim. Rep. Darrell Issa (R., Calif.), chair of the House Committee on Oversight is pledging a vigorous and critical inquiry into her management of the dubious criminal prosecution of Aaron Swartz, one of the greatest computer prodigies of his generation, who committed suicide a week ago, apparently convinced that out-of-control prosecutors had destroyed his life. […]\nAt funeral services in Highland Park, Illinois, on Tuesday, Swartz’s father charged that his son had been “killed by the government.” While some might ascribe this to the anguish of a bereaved father, scholars and investigators poring over the record of the Swartz prosecution are increasingly shocked at the scope and outrageousness of the prosecutorial misconduct that he faced. […]\nAlthough each of these counts bordered on the preposterous, Ortiz and Heymann clearly reckoned that at least one or two would stick during the jury-room bargaining process. More to the point, they assumed that the risk of their success even on bogus charges would be enough to pressure Swartz into accepting a guilty plea on all the counts in exchange for a reduced sentence — which is what they offered him. The process was fundamentally corrupt and shameful. But observers of the American criminal-justice system also know that it was a common one.\n I first learned about this corrupt little trick, long-since leveraged by federal prosecutors, when my best-friend-since-childhood made a stupid mistake one evening that was technically a felony offense — he viewed a 30-second video clip of somebody else committing a felony.\nThis is the same thing that police do when they’re investigating a bank robbery. The same thing that news anchors do when they show a security tape of people smashing through the front-doors of an Apple Store to steal iPads, “more at eleven”. Had he walked by and seen it happening through a window, he wouldn’t have been prosecuted. But he saw a half-minute recording and they threw the book at him. It’s very much like how prostitution is illegal, but if you record the act, suddenly it becomes porn. Perfectly legal.\n50 hours of community service would have been plenty to correct the mistake he made and make him pay more attention to his actions in the future. Instead, trumped-up charges by federal prosecutors resulted in him being sentenced to 2 years in a federal penitentiary, followed by 5 years under probation, and another 15–20 years on the Sex Offender Registry living as a social pariah.\n(Studies by the U.S. Justice Department and other organizations show that recidivism rates are significantly lower for convicted sex offenders than for burglars, robbers, thieves, drug offenders and other convicts.)\nHe lost his home, his career, many of his friends, and because of his registry status he can’t find work — all because he made a stupid mistake. He’s doing everything he possibly can to re-assimilate back into society, but society doesn’t want him. His life was ruined. Fortunately, he’s smart, well-spoken and a hard worker. He was able to start two companies and is able to provide for his wife and 3 children. One of those companies is dedicated to helping people who were likewise abused by the federal justice system and have experienced the injustice of the Bureau of Prisons.\nBut I digress…\nTimothy B. Lee, from Ars Technica, follows-up on Aaron’s Law:\n On Tuesday, Rep. Zoe Lofgren (D-CA) took to the pages of reddit to introduce legislation she dubbed “Aaron’s Law.” Lofgren’s bill would modify the Computer Fraud and Abuse Act, the basis for Swartz’s prosecution, to clarify that its definition of unauthorized access “does not include access in violation of an agreement or contractual obligation, such as an acceptable use policy or terms of service agreement, with an Internet service provider, Internet website, or employer.” It would make a similar change to the wire fraud statute.\nThe language was praised by Harvard law professor Lawrence Lessig, a friend of Swartz whose wife organized his legal defense fund. “This is a CRITICALLY important change that would do incredible good,” Lessig wrote on reddit. “The CFAA was the hook for the government’s bullying of @aaronsw. This law would remove that hook.”\n More links…  A Chat with Aaron Swartz (Blogoscoped) Raw Thought: The Weblog of Aaron Swartz in Markdown, PDF, and ePub (GitHub) Carmen Ortiz Strikes Out (Harper’s) Still More About The Death Of Aaron Swartz (Esquire) How the Legal System Failed Aaron Swartz (The New Yorker) Darrell Issa Probing Prosecution Of Aaron Swartz, Internet Pioneer Who Killed Himself (Huffington Post) Lawmakers slam DOJ prosecution of Swartz as ‘ridiculous, absurd’ (The Hill) Did Prosecutors Go Too Far In Swartz Case? (NPR) 25,000 People Sign Petition to Remove Aaron Swartz’s Prosecutors (Mashable) “Aaron’s law,” Congressional investigation in wake of Swartz suicide (Ars Technica) Farewell to Aaron Swartz, an extraordinary hacker and activist (Electronic Frontier Foundation) Feds go overboard in prosecuting information activist (Ars Technica) Be free (resource.org) Aaron Swartz, Precocious Programmer and Internet Activist, Dies at 26 (New York Times) AaronSW may have left everything to Givewell, an efficient meta-charity (Hacker News) Aaron Swartz’s legacy (Michael Roberts) Aaron is dead. (Sir Tim Berners-Lee, W3C) Aaron Swartz (Mark Bernstein) Aaron Swartz (Brent Simmons) Soulmate lost. RIP Aaron Swartz. (Alex Dong) Aaron Swartz and me, over a loosely intertwined decade (Ars Technica) Aaron Swartz (JSTOR) Aaron Swartz, hero of the open world, dies (archive.org) Remembering Aaron Swartz (ThoughtWorks) US Attorney Chided Swartz On Day of Suicide (Slashdot) Remember Aaron Swartz (1986 – 2013) (TorrentFreak) Our tribute to Aaron Swartz (Science Citizen) $10,000: The Aaron Swartz Memorial Grants (Aaron Greenspan) Statement on behalf of MIT (L. Rafael Reif) Why Am I So Upset About Aaron Swartz’s Suicide? (John Atkinson) The Criminal Charges Against Aaron Swartz (Part 1: The Law) (The Volokh Conspiracy) A Data Crusader, a Defendant and Now, a Cause (New York Times) Anonymous hacks 2 MIT websites in the memory of web activist Aaron Swartz (hacker9) Remembering Aaron Swartz: Commons man (The Economist) Remembering Aaron Swartz (danbri.org) MIT and Aaron Swartz (Crooked Timber) Prosecutor pursuing Aaron Swartz linked to suicide of another hacker (RT.com) Towards Learning from Losing Aaron Swartz: Part 2 (Stanford Law School) Aaron Swartz: Idealist, Innovator—And Now Victim (The Daily Muse) “We’ve lost a fighter”: Hundreds gather to mourn Aaron Swartz (Ars Technica) Aaron Swartz’s Lawyer: MIT Refused Plea Deal Without Jail Time (Gothamist) The Suicide of a Federal Criminal Defendant (PCR Consultants) Aaron (Waxy.org) I conceal my identity the same way Aaron was indicted for (Errata Security) Aaron Swartz \u0026amp; A Culture of Denial: Depression \u0026amp; Suicide in Tech (PsychCentral) The Tragic Case of Aaron Swartz: Unequal Justice for Web Activists vs Health Care Corporate Executives (Health Care Renewal) MIT Closet Allegedly Used by Aaron Swartz (Cryptome) Edward Tufte’s defense of Aaron Swartz and the “marvelously different” (Dan Nguyen)  ",
        "source":"\nI didn’t know Aaron personally, so there’s no insight I can provide into the person who I’ve read people describe as “a brilliant soul”.\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/aaron-swartz1@2x.jpg\"\u003e}}\n\n## The world is now a worse place\n\nThe tech world is abuzz with the news that, at only 26 years old, {{\u003c person name=\"Aaron Swartz\" url=\"https://twitter.com/aaronsw\" \u003e}} decided to take his own life. I heard about it last night when I opened up Tweetbot, and saw two tweets back-to-back in my timeline:\n\n{{\u003c twitter al3x \u003e}}:\n\n\u003e We lost @[aaronsw]({{% wayback \"https://twitter.com/aaronsw\" %}}). — {{\u003c person name=\"Alex Payne\" url=\"https://twitter.com/al3x\" \u003e}} (@al3x) [January 12, 2013]({{% wayback \"https://twitter.com/al3x/status/290008536241565696\" %}}).\n\n{{\u003c twitter dcurtis \u003e}}:\n\n\u003e Fuck. [tech.mit.edu/V132/N61/swart…]({{% wayback \"https://thetech.com/2013/01/09/swartz-v132-n61\" %}} \"http://tech.mit.edu/V132/N61/swartz.html\")The world is now a worse place. — {{\u003c person name=\"dustin curtis\" url=\"https://twitter.com/dcurtis\" \u003e}} (@dcurtis) [January 12, 2013]({{% wayback \"https://twitter.com/dcurtis/status/290011012944510976\" %}}).\n\n## RSS\n\nBeing part of the web world, I certainly knew Aaron by reputation. I first heard about him back when I started tinkering with RSS in 2003. While I [may have started a project that simplified RSS for a legion of PHP developers]({{% wayback \"http://simplepie.org\" %}}), Aaron literally wrote the spec — and at 14 years old, I might add.\n\n{{\u003c person name=\"Cory Doctorow\" \u003e}} [had this to say]({{% wayback \"http://boingboing.net/2013/01/12/rip-aaron-swartz.html\" %}}):\n\n\u003e I met Aaron when he was 14 or 15. He was working on XML stuff (he co-wrote the RSS specification when he was 14) and came to San Francisco often, and would stay with {{\u003c person name=\"Lisa Rein\" \u003e}}, a friend of mine who was also an XML person and who took care of him and assured his parents he had adult supervision. In so many ways, he was an adult, even then, with a kind of intense, fast intellect that really made me feel like he was part and parcel of the Internet society, like he belonged in the place where your thoughts are what matter, and not who you are or how old you are.\n\n## Creative Commons. PACER. Demand Progress.\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/demand-progress@2x.png\"\u003e}}\n\nEvery so often throughout the last decade, his name would pop-up around topics that I was also interested in. [Creative Commons]({{% wayback \"http://creativecommons.org\" %}}). Opening up [public access to court records]({{% wayback \"https://www.recapthelaw.org\" %}}). [Demand Progress]({{% wayback \"http://demandprogress.org\" %}}). He used technology to fight for the same sorts of causes that I fight for, evangelize for, or are otherwise close to my heart. *Namely:*\n\n* the over-criminalization of American citizens by its government, and…\n\n* the fact that the people we elect to represent us in government would throw us under the bus in a heartbeat if it meant more money, power and political cachet.\n\nCory Doctorow continues:\n\n\u003e At one point, he singlehandedly liberated 20 percent of US law. PACER, the system that gives Americans access to their own (public domain) case-law, charged a fee for each such access. After activists built RECAP (which allowed its users to put any caselaw they paid for into a free/public repository), Aaron spent a small fortune fetching a titanic amount of data and putting it into the public domain. The feds hated this. They smeared him, the FBI investigated him, and for a while, it looked like he’d be on the pointy end of some bad legal stuff, but he escaped it all, and emerged triumphant.\n\nAaron was involved in the creation of an organization called [Demand Progress]({{% wayback \"http://demandprogress.org\" %}}), who *“works to win progressive policy changes for ordinary people through organizing, and grassroots lobbying. In particular, we tend to focus on issues of civil liberties, civil rights, and government reform.”*\n\nIt was here where I first learned about the Senate’s proposed [PROTECT-IP Act]({{% wayback \"http://www.fightforthefuture.org/pipa/\" %}}) (later renamed “PIPA”), and it’s House sibling, the ill-fated [SOPA Act]({{% wayback \"http://sopastrike.com\" %}}), whose negative repercussions would have been felt for *generations* to come.\n\n## Download too much, go to jail\n\nFrom a [New York Times article dated July 19, 2011]({{% wayback \"http://bits.blogs.nytimes.com/2011/07/19/reddit-co-founder-charged-with-data-theft/?pagewanted=all\" %}}):\n\n\u003e Demand Progress said on its site that it appeared Mr. Swartz was “being charged with allegedly downloading too many scholarly journal articles from the Web.” It quoted the group’s executive director, David Segal, as saying, “It’s like trying to put someone in jail for allegedly checking too many books out of the library.”\n\nCory Doctorow:\n\n\u003e Aaron snuck into MIT and planted a laptop in a utility closet, used it to download a lot of journal articles (many in the public domain), and then snuck in and retrieved it. This sort of thing is pretty par for the course around MIT, and though Aaron wasn’t an MIT student, he was a fixture in the Cambridge hacker scene, and associated with Harvard, and generally part of that gang, and Aaron hadn’t done anything with the articles (yet), so it seemed likely that it would just fizzle out. Instead, they threw the book at him. Even though MIT and JSTOR (the journal publisher) backed down, the prosecution kept on. I heard lots of theories: the feds who’d tried unsuccessfully to nail him for the PACER/RECAP stunt had a serious hate-on for him; the feds were chasing down all the Cambridge hackers who had any connection to Bradley Manning in the hopes of turning one of them, and other, less credible theories. A couple of lawyers close to the case told me that they thought Aaron would go to jail.\n\nAnd [Larry Lessig]({{% wayback \"http://lessig.tumblr.com/post/40347463044/prosecutor-as-bully\" %}}):\n\n\u003e But all this shows is that if the government proved its case, some punishment was appropriate. So what was that appropriate punishment? Was Aaron a terrorist? Or a cracker trying to profit from stolen goods? Or was this something completely different? Early on, and to its great credit, JSTOR figured “appropriate” out: They declined to pursue their own action against Aaron, and they asked the government to drop its. MIT, to its great shame, was not as clear, and so the prosecutor had the excuse he needed to continue his war against the “criminal” who we who loved him knew as Aaron.\n\nAnd an [article from September]({{% wayback \"http://www.techdirt.com/articles/20120917/17393320412/us-government-ups-felony-count-jstoraaron-swartz-case-four-to-thirteen.shtml\" %}}) by Tim Cushing from TechDirt:\n\n\u003e Swartz, the executive director of Demand Progress, was charged with violating the Computer Fraud and Abuse Act, a catch-all designation for “computer activity the US government doesn’t like.” Swartz had accessed MIT’s computer network to download a large number of files from JSTOR, a non-profit that hosts academic journal articles. US prosecutors claimed he “stole” several thousand files, but considering MIT offered this access for free on campus (and the files being digital), it’s pretty tough to square his massive downloading with any idea of “theft.”\n\n## Prosecutor as bully\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/aaron-swartz2.jpg\"\u003e}}\n\n{{\u003c person name=\"Larry Lessig\" \u003e}} continues (reformatted paragraphs, mine):\n\n\u003e Here is where we need a better sense of justice, and shame. For the outrageousness in this story is not just Aaron. It is also the absurdity of the prosecutor’s behavior.\n\u003e\n\u003e From the beginning, the government worked as hard as it could to characterize what Aaron did in the most extreme and absurd way. The “property” Aaron had “stolen,” we were told, was worth “millions of dollars” — with the hint, and then the suggestion, that his aim must have been to profit from his crime. But anyone who says that there is money to be made in a stash of *ACADEMIC ARTICLES* is either an idiot or a liar. It was clear what this was not, yet our government continued to push as if it had caught the 9/11 terrorists red-handed.\n\u003e\n\u003e Aaron had literally done nothing in his life “to make money.” He was fortunate Reddit turned out as it did, but from his work building the RSS standard, to his work architecting Creative Commons, to his work liberating public records, to his work building a free public library, to his work supporting Change Congress/FixCongressFirst/Rootstrikers, and then Demand Progress, Aaron was always and only working for (at least his conception of) the public good. He was brilliant, and funny. A kid genius. A soul, a conscience, the source of a question I have asked myself a million times: What would Aaron think?\n\u003e\n\u003e That person is gone today, driven to the edge by what a decent society would only call bullying. I get wrong. But I also get proportionality. And if you don’t get both, you don’t deserve to have the power of the United States government \\[against\\] you. For remember, we live in a world where the architects of the financial crisis regularly dine at the White House — and where even those brought to “justice” never even have to admit any wrongdoing, let alone be labeled “felons.”\n\nAnd again from TechDirt:\n\n\u003e There are now 13 felony counts in the new indictment, derived from claims of multiple instances of breaking those four laws. In specific:\n\u003e\n\u003e * Wire Fraud - 2 counts\n\u003e * Computer Fraud - 5 counts\n\u003e * Unlawfully Obtaining Information from a Protected Computer - 5 counts\n\u003e * Recklessly Damaging a Protected Computer - 1 count\n\u003e\n\u003e It’s beyond my pay grade to figure out how many years in prison that all could be, when taking into account the complexities of sentencing law. Let’s leave it at a large scary number. Enough to ruin someone’s life.\n\nAnd the kicker…\n\n\u003e So, how do the new charges stack up in terms of a sentence? Tough to say. Each of the charges carries the possibility of a fine and imprisonment of up to 10–20 years per felony. Depending on how many of the counts Swartz is found guilty of, the sentence could conceivably total 50+ years and fine in the area of $4 million. All this over publicly accessed research documents that JSTOR doesn’t even feel the need to pursue further than it did.\n\n## In the end\n\n{{\u003c person name=\"Alan Ellis\" \u003e}}, a nationally-recognized federal criminal defense lawyer [explains]({{% wayback \"http://www.alanellis.com\" %}}):\n\n\u003e Nearly 97 percent of all federal criminal defendants will plead guilty. Of the remaining 3 percent who go to trial, as many as 75 percent will be convicted. Thus, nearly 99 percent of all federal criminal defendants will be sentenced. Of that number, 80 percent of defendants will receive jail or prison time.\n\nSpecifically:\n\n* 96.9% of federal criminal cases result in a guilty plea. (U.S. Sentencing Commission)\n* 75.6% of federal criminal defendants are convicted following trial. (U.S. Department of Justice)\n* 99% of federal defendants are sentenced.\n* 82.8% of federal criminal defendants receive a prison term. (U.S. Sentencing Commission)\n\nIn the end, while nobody knows why Aaron decided to take his own life, I could certainly posit a guess. When the federal government comes after you, you’re pretty much done for. In Aaron’s case, he pissed off the wrong federal prosecutors, and they moved to eviscerate him, legally, over downloading academic journals that MIT provided access to for free.\n\nWhat a terrible, terrible shame.\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2013/aaron-swartz3@2x.jpg\"\u003e}}\n\n## Update (2013–01–12)\n\nAs the day has gone on, more people have been sharing their thoughts on Aaron, his case, and the person he was.\n\nA [post by Aaron Swartz]({{% wayback \"https://gist.github.com/skyzyx/7bee92a5302f87c0457ffb691f936a81\" %}}), dated July 2008.\n\n\u003e There is no justice in following unjust laws. It’s time to come into the light and, in the grand tradition of civil disobedience, declare our opposition to this private theft of public culture.\n\u003e\n\u003e We need to take information, wherever it is stored, make our copies and share them with the world. We need to take stuff that’s out of copyright and add it to the archive. We need to buy secret databases and put them on the Web. We need to download scientific journals and upload them to file sharing networks. We need to fight for Guerilla Open Access.\n\u003e\n\u003e With enough of us, around the world, we’ll not just send a strong message opposing the privatization of knowledge — we’ll make it a thing of the past. Will you join us?\n\nThe [official statement from Aaron Swartz’ family]({{% wayback \"http://rememberaaronsw.tumblr.com/post/40372208044/official-statement-from-the-family-and-partner-of-aaron\" %}}):\n\n\u003e Aaron’s commitment to social justice was profound, and defined his life. He was instrumental to the defeat of an Internet censorship bill; he fought for a more democratic, open, and accountable political system; and he helped to create, build, and preserve a dizzying range of scholarly projects that extended the scope and accessibility of human knowledge. He used his prodigious skills as a programmer and technologist not to enrich himself but to make the Internet and the world a fairer, better place. His deeply humane writing touched minds and hearts across generations and continents. He earned the friendship of thousands and the respect and support of millions more.\n\nFrom the post \"[My Aaron Swartz, whom I loved.]({{% wayback \"http://www.quinnnorton.com/said/?p=644\" %}}),\" by Quinn Norton:\n\n\u003e He loved my daughter so much it filled the room like a mist. He was transported playing with her, and she bored right into his heart. In his darkest moments, which I couldn’t reach him, Ada could still touch him, even if only for a moment. And when he was in the light, my god. I couldn’t keep up with either of them. I would hang back and watch them spring and play and laugh, and be so grateful for them both.\n\nExpert witness Alex Stamos, in \"[The Truth about Aaron Swartz’s ‘Crime’]({{% wayback \"http://unhandled.com/2013/01/12/the-truth-about-aaron-swartzs-crime/\" %}})\":\n\n\u003e In short, Aaron Swartz was not the super hacker breathlessly described in the Government’s indictment and forensic reports, and his actions did not pose a real danger to JSTOR, MIT or the public. He was an intelligent young man who found a loophole that would allow him to download a lot of documents quickly. This loophole was created intentionally by MIT and JSTOR, and was codified contractually in the piles of paperwork turned over during discovery.\n\u003e\n\u003e If I had taken the stand as planned and had been asked by the prosecutor whether Aaron’s actions were “wrong”, I would probably have replied that what Aaron did would better be described as “inconsiderate”. In the same way it is inconsiderate to write a check at the supermarket while a dozen people queue up behind you or to check out every book at the library needed for a History 101 paper. It is inconsiderate to download lots of files on shared wifi or to spider Wikipedia too quickly, but none of these actions should lead to a young person being hounded for years and haunted by the possibility of a 35 year sentence.\n\n## Update (2013–01–20)\n\nI’ve continued to add to the links below as I’ve come across them, but a few more interesting things are beginning to shake-out from Aaron’s prosecution.\n\nScott Horton from Harper’s Magazine [writes]({{% wayback \"http://harpers.org/blog/2013/01/carmen-ortiz-strikes-out/\" %}}) (Emphasis *mine*):\n\n\u003e U.S. Attorney Carmen Ortiz is fighting to hold on to her job, and to avoid an embarrassing grilling in Congress and possible professional disciplinary proceedings. Her prospects look grim. Rep. Darrell Issa (R., Calif.), chair of the House Committee on Oversight is pledging a vigorous and critical inquiry into her management of the dubious criminal prosecution of Aaron Swartz, one of the greatest computer prodigies of his generation, who committed suicide a week ago, apparently convinced that out-of-control prosecutors had destroyed his life. \\[…\\]\n\u003e\n\u003e At funeral services in Highland Park, Illinois, on Tuesday, Swartz’s father charged that his son had been “killed by the government.” While some might ascribe this to the anguish of a bereaved father, scholars and investigators poring over the record of the Swartz prosecution are increasingly shocked at the scope and outrageousness of the prosecutorial misconduct that he faced. \\[…\\]\n\u003e\n\u003e Although each of these counts bordered on the preposterous, Ortiz and Heymann clearly reckoned that at least one or two would stick during the jury-room bargaining process. More to the point, they assumed that the risk of their success even on bogus charges would be enough to pressure Swartz into accepting a guilty plea on all the counts in exchange for a reduced sentence — which is what they offered him. The process was fundamentally corrupt and shameful. _But observers of the American criminal-justice system also know that it was a common one._\n\nI first learned about this corrupt little trick, long-since leveraged by federal prosecutors, when my best-friend-since-childhood made a stupid mistake one evening that was technically a felony offense — he viewed a 30-second video clip of *somebody else* committing a felony.\n\nThis is the same thing that police do when they’re investigating a bank robbery. The same thing that news anchors do when they show a security tape of people smashing through the front-doors of an Apple Store to steal iPads, *“more at eleven”*. Had he walked by and seen it happening through a window, he wouldn’t have been prosecuted. But he saw a half-minute *recording* and they threw the book at him. It’s very much like how prostitution is illegal, but if you record the act, suddenly it becomes porn. Perfectly legal.\n\n50 hours of community service would have been *plenty* to correct the mistake he made and make him pay more attention to his actions in the future. Instead, trumped-up charges by federal prosecutors resulted in him being sentenced to 2 years in a federal penitentiary, followed by 5 years under probation, and another 15–20 years on the Sex Offender Registry living as a social pariah.\n\n(Studies by the U.S. Justice Department and other organizations show that [recidivism rates are significantly lower for convicted sex offenders than for burglars, robbers, thieves, drug offenders and other convicts]({{% wayback \"https://www.nytimes.com/2011/08/21/opinion/sunday/sex-offenders-the-last-pariahs.html?pagewanted=all\u0026_r=0\" %}}).)\n\nHe lost his home, his career, many of his friends, and because of his registry status he can’t find work — all because he made a stupid mistake. He’s doing everything he possibly can to re-assimilate back into society, but society doesn’t want him. His life was ruined. Fortunately, he’s smart, well-spoken and a hard worker. He was able to start two companies and is able to provide for his wife and 3 children. One of those companies is [dedicated to helping people]({{% wayback \"http://pcr-consultants.com\" %}}) who were likewise abused by the federal justice system and have experienced the injustice of the Bureau of Prisons.\n\nBut I digress…\n\nTimothy B. Lee, from Ars Technica, [follows-up on Aaron’s Law]({{% wayback \"http://arstechnica.com/tech-policy/2013/01/aarons-law-congressional-investigation-in-wake-of-swartz-suicide/\" %}}):\n\n\u003e On Tuesday, Rep. {{\u003c person name=\"Zoe Lofgren\" \u003e}} (D-CA) took to the pages of reddit to introduce legislation she dubbed “Aaron’s Law.” Lofgren’s bill would modify the Computer Fraud and Abuse Act, the basis for Swartz’s prosecution, to clarify that its definition of unauthorized access “does not include access in violation of an agreement or contractual obligation, such as an acceptable use policy or terms of service agreement, with an Internet service provider, Internet website, or employer.” It would make a similar change to the wire fraud statute.\n\u003e\n\u003e The language was praised by Harvard law professor Lawrence Lessig, a friend of Swartz whose wife organized his legal defense fund. “This is a CRITICALLY important change that would do incredible good,” Lessig wrote on reddit. “The CFAA was the hook for the government’s bullying of @aaronsw. This law would remove that hook.”\n\n## More links…\n\n* [A Chat with Aaron Swartz]({{% wayback \"http://blogoscoped.com/archive/2007-05-07-n78.html\" %}}) (Blogoscoped)\n* [Raw Thought: The Weblog of Aaron Swartz in Markdown, PDF, and ePub]({{% wayback \"https://github.com/joshleitzel/rawthought\" %}}) (GitHub)\n* [Carmen Ortiz Strikes Out]({{% wayback \"http://harpers.org/blog/2013/01/carmen-ortiz-strikes-out/\" %}}) (Harper’s)\n* [Still More About The Death Of Aaron Swartz]({{% wayback \"http://www.esquire.com/blogs/politics/aaron-swartz-case-011713\" %}}) (Esquire)\n* [How the Legal System Failed Aaron Swartz]({{% wayback \"http://www.newyorker.com/online/blogs/newsdesk/2013/01/everyone-interesting-is-a-felon.html?currentPage=all\" %}}) (The New Yorker)\n* [Darrell Issa Probing Prosecution Of Aaron Swartz, Internet Pioneer Who Killed Himself]({{% wayback \"http://www.huffingtonpost.com/2013/01/15/darrell-issa-aaron-swartz-_n_2481450.html\" %}}) (Huffington Post)\n* [Lawmakers slam DOJ prosecution of Swartz as ‘ridiculous, absurd’]({{% wayback \"http://thehill.com/blogs/hillicon-valley/technology/277353-lawmakers-blast-trumped-up-doj-prosecution-of-internet-activist\" %}}) (The Hill)\n* [Did Prosecutors Go Too Far In Swartz Case?]({{% wayback \"http://www.npr.org/2013/01/15/169421636/did-prosecutors-go-too-far-in-swartz-case\" %}}) (NPR)\n* [25,000 People Sign Petition to Remove Aaron Swartz’s Prosecutors]({{% wayback \"http://mashable.com/2013/01/15/aaron-swartz-petition/\" %}}) (Mashable)\n* [“Aaron’s law,” Congressional investigation in wake of Swartz suicide]({{% wayback \"http://arstechnica.com/tech-policy/2013/01/aarons-law-congressional-investigation-in-wake-of-swartz-suicide/\" %}}) (Ars Technica)\n* [Farewell to Aaron Swartz, an extraordinary hacker and activist]({{% wayback \"https://www.eff.org/deeplinks/2013/01/farewell-aaron-swartz\" %}}) (Electronic Frontier Foundation)\n* [Feds go overboard in prosecuting information activist]({{% wayback \"http://arstechnica.com/tech-policy/2012/09/feds-go-overboard-in-prosecuting-information-activist/\" %}}) (Ars Technica)\n* [Be free]({{% wayback \"https://public.resource.org/aaron/\" %}}) (resource.org)\n* [Aaron Swartz, Precocious Programmer and Internet Activist, Dies at 26]({{% wayback \"https://www.nytimes.com/2013/01/13/technology/aaron-swartz-internet-activist-dies-at-26.html?pagewanted=all\" %}}) (New York Times)\n* [AaronSW may have left everything to Givewell, an efficient meta-charity]({{% wayback \"http://news.ycombinator.com/item?id=5048123\" %}}) (Hacker News)\n* [Aaron Swartz’s legacy]({{% wayback \"http://www.vivtek.com/aaron_swartz_legacy.html\" %}}) (Michael Roberts)\n* [Aaron is dead.]({{% wayback \"http://lists.w3.org/Archives/Public/www-tag/2013Jan/0017.html\" %}}) (Sir Tim Berners-Lee, W3C)\n* [Aaron Swartz]({{% wayback \"http://www.markbernstein.org/Jan13/AaronSwartz.html\" %}}) (Mark Bernstein)\n* [Aaron Swartz]({{% wayback \"http://inessential.com/2013/01/12/aaron_swartz\" %}}) (Brent Simmons)\n* [Soulmate lost. RIP Aaron Swartz.]({{% wayback \"http://alexdong.com/soulmate-lost-rip-aaron-swartz/\" %}}) (Alex Dong)\n* [Aaron Swartz and me, over a loosely intertwined decade]({{% wayback \"http://arstechnica.com/tech-policy/2013/01/aaron-swartz-and-me-over-a-loosely-intertwined-decade/\" %}}) (Ars Technica)\n* [Aaron Swartz]({{% wayback \"http://about.jstor.org/statement-swartz\" %}}) (JSTOR)\n* [Aaron Swartz, hero of the open world, dies]({{% wayback \"http://blog.archive.org/2013/01/12/aaron-swartz-hero-of-the-open-world-rip/\" %}}) (archive.org)\n* [Remembering Aaron Swartz]({{% wayback \"http://www.thoughtworks.com/articles/remembering-aaron-swartz\" %}}) (ThoughtWorks)\n* [US Attorney Chided Swartz On Day of Suicide]({{% wayback \"http://yro.slashdot.org/story/13/01/13/139218/us-attorney-chided-swartz-on-day-of-suicide\" %}}) (Slashdot)\n* [Remember Aaron Swartz (1986 – 2013)]({{% wayback \"http://torrentfreak.com/remember-aaron-swartz-130113/\" %}}) (TorrentFreak)\n* [Our tribute to Aaron Swartz]({{% wayback \"http://sciencecitizen.org/?p=219\" %}}) (Science Citizen)\n* [$10,000: The Aaron Swartz Memorial Grants]({{% wayback \"http://www.aarongreenspan.com/writing/essay.html?id=83\" %}}) (Aaron Greenspan)\n* [Statement on behalf of MIT]({{% wayback \"http://web.mit.edu/newsoffice/2013/letter-on-death-of-aaron-swartz.html\" %}}) (L. Rafael Reif)\n* [Why Am I So Upset About Aaron Swartz’s Suicide?]({{% wayback \"http://discountgeni.us/2013/01/13/why-am-i-so-upset-about-aaron-swartzs-suicide/\" %}}) (John Atkinson)\n* [The Criminal Charges Against Aaron Swartz (Part 1: The Law)]({{% wayback \"http://www.volokh.com/2013/01/14/aaron-swartz-charges/\" %}}) (The Volokh Conspiracy)\n* [A Data Crusader, a Defendant and Now, a Cause]({{% wayback \"https://www.nytimes.com/2013/01/14/technology/aaron-swartz-a-data-crusader-and-now-a-cause.html?pagewanted=all\" %}}) (New York Times)\n* [Anonymous hacks 2 MIT websites in the memory of web activist Aaron Swartz]({{% wayback \"http://www.hacker9.com/anonymous-hacks-2-mit-websites-in-the-memory-of-web-activist-aaron-swartz.html\" %}}) (hacker9)\n* [Remembering Aaron Swartz: Commons man]({{% wayback \"http://www.economist.com/blogs/babbage/2013/01/remembering-aaron-swartz\" %}}) (The Economist)\n* [Remembering Aaron Swartz]({{% wayback \"http://danbri.org/words/2013/01/13/815\" %}}) (danbri.org)\n* [MIT and Aaron Swartz]({{% wayback \"http://crookedtimber.org/2013/01/13/mit-and-aaron-swartz/\" %}}) (Crooked Timber)\n* [Prosecutor pursuing Aaron Swartz linked to suicide of another hacker]({{% wayback \"http://rt.com/usa/news/swartz-prosecutor-suicide-hacker-050/\" %}}) (RT.com)\n* [Towards Learning from Losing Aaron Swartz: Part 2]({{% wayback \"http://cyberlaw.stanford.edu/blog/2013/01/towards-learning-losing-aaron-swartz-part-2\" %}}) (Stanford Law School)\n* [Aaron Swartz: Idealist, Innovator—And Now Victim]({{% wayback \"http://www.thedailymuse.com/education/aaron-swartz-didnt-have-to-die/\" %}}) (The Daily Muse)\n* [“We’ve lost a fighter”: Hundreds gather to mourn Aaron Swartz]({{% wayback \"http://arstechnica.com/tech-policy/2013/01/weve-lost-a-fighter-hundreds-gather-to-mourn-aaron-swartz/\" %}}) (Ars Technica)\n* [Aaron Swartz’s Lawyer: MIT Refused Plea Deal Without Jail Time]({{% wayback \"http://gothamist.com/2013/01/15/aaron_swartzs_lawyer_mit_refused_pl.php\" %}}) (Gothamist)\n* [The Suicide of a Federal Criminal Defendant]({{% wayback \"http://pcr-consultants.com/2013/01/the-suicide-of-a-federal-criminal-defendant/\" %}}) (PCR Consultants)\n* [Aaron]({{% wayback \"http://waxy.org/2013/01/aaron/\" %}}) (Waxy.org)\n* [I conceal my identity the same way Aaron was indicted for]({{% wayback \"http://erratasec.blogspot.com/2013/01/i-conceal-my-identity-same-way-aaron.html\" %}}) (Errata Security)\n* [Aaron Swartz \u0026 A Culture of Denial: Depression \u0026 Suicide in Tech]({{% wayback \"http://psychcentral.com/blog/archives/2013/01/15/aaron-swartz-a-culture-of-denial-depression-suicide-in-tech/\" %}}) (PsychCentral)\n* [The Tragic Case of Aaron Swartz: Unequal Justice for Web Activists vs Health Care Corporate Executives]({{% wayback \"http://hcrenewal.blogspot.ca/2013/01/the-tragic-case-of-aaron-swartz-unequal.html\" %}}) (Health Care Renewal)\n* [MIT Closet Allegedly Used by Aaron Swartz]({{% wayback \"http://cryptome.org/2013/01/swartz/mit-closet-swartz.htm\" %}}) (Cryptome)\n* [Edward Tufte’s defense of Aaron Swartz and the “marvelously different”]({{% wayback \"http://danwin.com/2013/01/edward-tufte-aaron-swartz-marvelously-different/\" %}}) (Dan Nguyen)\n\n"},
    "links": {
        "prev": {"title": "My favorite Mac apps: Music and Video Apps", "permalink": "https://ryanparman.com/posts/2012/my-favorite-mac-apps-music-and-video-apps/"},
        "next": {"title": "H.265 has been approved", "permalink": "https://ryanparman.com/posts/2013/h265-has-been-approved/"},
        "ignore": "me"
    }
}

            
        ]
    }
}
