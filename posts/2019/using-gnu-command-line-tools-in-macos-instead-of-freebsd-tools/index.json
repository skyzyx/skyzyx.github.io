{
    "data": {
    "kind": "page",
    "title": "Using GNU command line tools in macOS instead of FreeBSD tools",
    "description": "",
    "summary": {
        "content": "macOS is a Unix, and not built on Linux. This can bite you when trying to write scripts which support both platforms. I think most of us realize that macOS isn\u0026rsquo;t a Linux OS, but what that also means is that instead of shipping with the GNU flavor of command line tools, it ships with the FreeBSD flavor. As such, writing shell scripts which can work across both platforms can sometimes be challenging. Homebrew Homebrew can be used to install the GNU versions of tools onto your Mac, but they are all prefixed with \u0026ldquo;g\u0026rdquo; by default.",
        "isTruncated": true
    },
    "published": "2019-06-18T14:48:16Z",
    "updated": "2019-06-18T15:34:29-04:00",
    "permalink": "https://ryanparman.com/posts/2019/using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools/",
    "relativePermalink": "/posts/2019/using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools/",
    "aliases": ["/2019/06/18/using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools"],
    "images": ["https://cdn.ryanparman.com/hugo/posts/2019/macos@2x.png"],
    "videos": [],
    "categories": ["Software"],
    "tags": ["gnu", "freebsd", "bsd", "linux", "macos"],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 375,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2019/20190618-using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools.md",
        "logicalName": "20190618-using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools.md",
        "translationBaseName": "20190618-using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools",
        "baseFileName": "20190618-using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2019/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#homebrew\"\u003eHomebrew\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#choosing-gnu-for-consistency\"\u003eChoosing GNU for Consistency\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#provided-binaries\"\u003eProvided Binaries\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#conclusion\"\u003eConclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp itemprop=\"description\" class=\"f5 f4-m f3-l mt0 lh-copy p-summary entry-summary\"\u003e\n\u003cb\u003emacOS\u003c/b\u003e is a \u003cem\u003eUnix\u003c/em\u003e, and not built on \u003cem\u003eLinux\u003c/em\u003e. This can bite you when trying to write scripts which support both platforms.\n\u003c/p\u003e\n\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/hugo/posts/2019/macos@2x.webp\" alt=\"macOS\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/hugo/posts/2019/macos@2x.png\" alt=\"macOS\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eI think most of us realize that macOS isn\u0026rsquo;t a Linux OS, but what that also means is that instead of shipping with the GNU flavor of command line tools, it ships with the FreeBSD flavor. As such, writing shell scripts which can work across both platforms can sometimes be challenging.\u003c/p\u003e\n\u003ch2 id=\"homebrew\"\u003eHomebrew\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://brew.sh\"\u003eHomebrew\u003c/a\u003e can be used to install the GNU versions of tools onto your Mac, but they are all prefixed with \u0026ldquo;g\u0026rdquo; by default.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNOTE:\u003c/strong\u003e All commands have been installed with the prefix \u0026ldquo;g\u0026rdquo;. If you need to use these commands with their normal names, you can add a \u0026ldquo;gnubin\u0026rdquo; directory to your PATH from your bashrc.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"choosing-gnu-for-consistency\"\u003eChoosing GNU for Consistency\u003c/h2\u003e\n\u003cp\u003eYou can install most of the GNU flavored tools with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ebrew install coreutils ed findutils gawk gnu-sed gnu-tar grep make\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAssuming you have a fairly standard Terminal/shell environment, and assuming that you want to use the GNU versions instead of the BSD versions for everything you\u0026rsquo;ve installed with Homebrew, you can append the following to your \u003ccode\u003e~/.profile\u003c/code\u003e file.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Get list of gnubin directories\u003c/span\u003e\nexport GNUBINS\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003efind /usr/local/opt -type d -follow -name gnubin -print\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e;\n\n\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e bindir in \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eGNUBINS[@]\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003edo\u003c/span\u003e\n  export PATH\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e$bindir:$PATH;\n\u003cspan style=\"color:#66d9ef\"\u003edone\u003c/span\u003e;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"provided-binaries\"\u003eProvided Binaries\u003c/h2\u003e\n\u003ctable class=\"f6 w-100 mw8 center\" cellspacing=\"0\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth class=\"fw6 bb tl pb3 pr3 bg-white\" valign=\"top\"\u003ePackage\u003c/th\u003e\n      \u003cth class=\"fw6 bb tl pb3 pr3 bg-white\" valign=\"top\"\u003eProvides\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003ecoreutils\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003e[\u003c/code\u003e, \u003ccode\u003eb2sum\u003c/code\u003e, \u003ccode\u003ebase32\u003c/code\u003e, \u003ccode\u003ebase64\u003c/code\u003e, \u003ccode\u003ebasename\u003c/code\u003e, \u003ccode\u003ebasenc\u003c/code\u003e, \u003ccode\u003ecat\u003c/code\u003e, \u003ccode\u003echcon\u003c/code\u003e, \u003ccode\u003echgrp\u003c/code\u003e, \u003ccode\u003echmod\u003c/code\u003e, \u003ccode\u003echown\u003c/code\u003e, \u003ccode\u003echroot\u003c/code\u003e, \u003ccode\u003ecksum\u003c/code\u003e, \u003ccode\u003ecomm\u003c/code\u003e, \u003ccode\u003ecp\u003c/code\u003e, \u003ccode\u003ecsplit\u003c/code\u003e, \u003ccode\u003ecut\u003c/code\u003e, \u003ccode\u003edate\u003c/code\u003e, \u003ccode\u003edd\u003c/code\u003e, \u003ccode\u003edf\u003c/code\u003e, \u003ccode\u003edir\u003c/code\u003e, \u003ccode\u003edircolors\u003c/code\u003e, \u003ccode\u003edirname\u003c/code\u003e, \u003ccode\u003edu\u003c/code\u003e, \u003ccode\u003eecho\u003c/code\u003e, \u003ccode\u003eenv\u003c/code\u003e, \u003ccode\u003eexpand\u003c/code\u003e, \u003ccode\u003eexpr\u003c/code\u003e, \u003ccode\u003efactor\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e, \u003ccode\u003efmt\u003c/code\u003e, \u003ccode\u003efold\u003c/code\u003e, \u003ccode\u003egroups\u003c/code\u003e, \u003ccode\u003ehead\u003c/code\u003e, \u003ccode\u003ehostid\u003c/code\u003e, \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003einstall\u003c/code\u003e, \u003ccode\u003ejoin\u003c/code\u003e, \u003ccode\u003ekill\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003eln\u003c/code\u003e, \u003ccode\u003elogname\u003c/code\u003e, \u003ccode\u003els\u003c/code\u003e, \u003ccode\u003emd5sum\u003c/code\u003e, \u003ccode\u003emkdir\u003c/code\u003e, \u003ccode\u003emkfifo\u003c/code\u003e, \u003ccode\u003emknod\u003c/code\u003e, \u003ccode\u003emktemp\u003c/code\u003e, \u003ccode\u003emv\u003c/code\u003e, \u003ccode\u003enice\u003c/code\u003e, \u003ccode\u003enl\u003c/code\u003e, \u003ccode\u003enohup\u003c/code\u003e, \u003ccode\u003enproc\u003c/code\u003e, \u003ccode\u003enumfmt\u003c/code\u003e, \u003ccode\u003eod\u003c/code\u003e, \u003ccode\u003epaste\u003c/code\u003e, \u003ccode\u003epathchk\u003c/code\u003e, \u003ccode\u003epinky\u003c/code\u003e, \u003ccode\u003epr\u003c/code\u003e, \u003ccode\u003eprintenv\u003c/code\u003e, \u003ccode\u003eprintf\u003c/code\u003e, \u003ccode\u003eptx\u003c/code\u003e, \u003ccode\u003epwd\u003c/code\u003e, \u003ccode\u003ereadlink\u003c/code\u003e, \u003ccode\u003erealpath\u003c/code\u003e, \u003ccode\u003erm\u003c/code\u003e, \u003ccode\u003ermdir\u003c/code\u003e, \u003ccode\u003eruncon\u003c/code\u003e, \u003ccode\u003eseq\u003c/code\u003e, \u003ccode\u003esha1sum\u003c/code\u003e, \u003ccode\u003esha224sum\u003c/code\u003e, \u003ccode\u003esha256sum\u003c/code\u003e, \u003ccode\u003esha384sum\u003c/code\u003e, \u003ccode\u003esha512sum\u003c/code\u003e, \u003ccode\u003eshred\u003c/code\u003e, \u003ccode\u003eshuf\u003c/code\u003e, \u003ccode\u003esleep\u003c/code\u003e, \u003ccode\u003esort\u003c/code\u003e, \u003ccode\u003esplit\u003c/code\u003e, \u003ccode\u003estat\u003c/code\u003e, \u003ccode\u003estdbuf\u003c/code\u003e, \u003ccode\u003estty\u003c/code\u003e, \u003ccode\u003esum\u003c/code\u003e, \u003ccode\u003esync\u003c/code\u003e, \u003ccode\u003etac\u003c/code\u003e, \u003ccode\u003etail\u003c/code\u003e, \u003ccode\u003etee\u003c/code\u003e, \u003ccode\u003etest\u003c/code\u003e, \u003ccode\u003etimeout\u003c/code\u003e, \u003ccode\u003etouch\u003c/code\u003e, \u003ccode\u003etr\u003c/code\u003e, \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003etruncate\u003c/code\u003e, \u003ccode\u003etsort\u003c/code\u003e, \u003ccode\u003etty\u003c/code\u003e, \u003ccode\u003euname\u003c/code\u003e, \u003ccode\u003eunexpand\u003c/code\u003e, \u003ccode\u003euniq\u003c/code\u003e, \u003ccode\u003eunlink\u003c/code\u003e, \u003ccode\u003euptime\u003c/code\u003e, \u003ccode\u003eusers\u003c/code\u003e, \u003ccode\u003evdir\u003c/code\u003e, \u003ccode\u003ewc\u003c/code\u003e, \u003ccode\u003ewho\u003c/code\u003e, \u003ccode\u003ewhoami\u003c/code\u003e, \u003ccode\u003eyes\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eed\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eed\u003c/code\u003e, \u003ccode\u003ered\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egawk\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eawk\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egrep\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eegrep\u003c/code\u003e, \u003ccode\u003efgrep\u003c/code\u003e, \u003ccode\u003egrep\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egnu-sed\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003esed\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egnu-tar\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003etar\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003emake\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003emake\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003efindutils\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003efind\u003c/code\u003e, \u003ccode\u003elocate\u003c/code\u003e, \u003ccode\u003eupdatedb\u003c/code\u003e, \u003ccode\u003exargs\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eUsing the GNU flavor of command line tools (instead of the FreeBSD flavor) should simplify the task of writing shell scripts which can work across macOS and GNU/Linux.\u003c/p\u003e\n",
        "plain":"macOS is a Unix, and not built on Linux. This can bite you when trying to write scripts which support both platforms.   I think most of us realize that macOS isn\u0026rsquo;t a Linux OS, but what that also means is that instead of shipping with the GNU flavor of command line tools, it ships with the FreeBSD flavor. As such, writing shell scripts which can work across both platforms can sometimes be challenging.\nHomebrew Homebrew can be used to install the GNU versions of tools onto your Mac, but they are all prefixed with \u0026ldquo;g\u0026rdquo; by default.\n NOTE: All commands have been installed with the prefix \u0026ldquo;g\u0026rdquo;. If you need to use these commands with their normal names, you can add a \u0026ldquo;gnubin\u0026rdquo; directory to your PATH from your bashrc.\n Choosing GNU for Consistency You can install most of the GNU flavored tools with:\nbrew install coreutils ed findutils gawk gnu-sed gnu-tar grep make Assuming you have a fairly standard Terminal/shell environment, and assuming that you want to use the GNU versions instead of the BSD versions for everything you\u0026rsquo;ve installed with Homebrew, you can append the following to your ~/.profile file.\n# Get list of gnubin directories export GNUBINS=\u0026#34;$(find /usr/local/opt -type d -follow -name gnubin -print)\u0026#34;; for bindir in ${GNUBINS[@]}; do export PATH=$bindir:$PATH; done; Provided Binaries   Package Provides     coreutils  [, b2sum, base32, base64, basename, basenc, cat, chcon, chgrp, chmod, chown, chroot, cksum, comm, cp, csplit, cut, date, dd, df, dir, dircolors, dirname, du, echo, env, expand, expr, factor, false, fmt, fold, groups, head, hostid, id, install, join, kill, link, ln, logname, ls, md5sum, mkdir, mkfifo, mknod, mktemp, mv, nice, nl, nohup, nproc, numfmt, od, paste, pathchk, pinky, pr, printenv, printf, ptx, pwd, readlink, realpath, rm, rmdir, runcon, seq, sha1sum, sha224sum, sha256sum, sha384sum, sha512sum, shred, shuf, sleep, sort, split, stat, stdbuf, stty, sum, sync, tac, tail, tee, test, timeout, touch, tr, true, truncate, tsort, tty, uname, unexpand, uniq, unlink, uptime, users, vdir, wc, who, whoami, yes    ed  ed, red    gawk  awk    grep  egrep, fgrep, grep    gnu-sed  sed    gnu-tar  tar    make  make    findutils  find, locate, updatedb, xargs     Conclusion Using the GNU flavor of command line tools (instead of the FreeBSD flavor) should simplify the task of writing shell scripts which can work across macOS and GNU/Linux.\n",
        "source":"\n{{\u003cdescription\u003e}}\n\u003cb\u003emacOS\u003c/b\u003e is a \u003cem\u003eUnix\u003c/em\u003e, and not built on \u003cem\u003eLinux\u003c/em\u003e. This can bite you when trying to write scripts which support both platforms.\n{{\u003c/description\u003e}}\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2019/macos@2x.png\" alt=\"macOS\"\u003e}}\n\nI think most of us realize that macOS isn't a Linux OS, but what that also means is that instead of shipping with the GNU flavor of command line tools, it ships with the FreeBSD flavor. As such, writing shell scripts which can work across both platforms can sometimes be challenging.\n\n## Homebrew\n\n[Homebrew](https://brew.sh) can be used to install the GNU versions of tools onto your Mac, but they are all prefixed with \"g\" by default.\n\n\u003e **NOTE:** All commands have been installed with the prefix \"g\". If you need to use these commands with their normal names, you can add a \"gnubin\" directory to your PATH from your bashrc.\n\n## Choosing GNU for Consistency\n\nYou can install most of the GNU flavored tools with:\n\n```bash\nbrew install coreutils ed findutils gawk gnu-sed gnu-tar grep make\n```\n\nAssuming you have a fairly standard Terminal/shell environment, and assuming that you want to use the GNU versions instead of the BSD versions for everything you've installed with Homebrew, you can append the following to your `~/.profile` file.\n\n```bash\n# Get list of gnubin directories\nexport GNUBINS=\"$(find /usr/local/opt -type d -follow -name gnubin -print)\";\n\nfor bindir in ${GNUBINS[@]}; do\n  export PATH=$bindir:$PATH;\ndone;\n```\n\n## Provided Binaries\n\n\u003ctable class=\"f6 w-100 mw8 center\" cellspacing=\"0\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth class=\"fw6 bb tl pb3 pr3 bg-white\" valign=\"top\"\u003ePackage\u003c/th\u003e\n      \u003cth class=\"fw6 bb tl pb3 pr3 bg-white\" valign=\"top\"\u003eProvides\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003ecoreutils\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003e[\u003c/code\u003e, \u003ccode\u003eb2sum\u003c/code\u003e, \u003ccode\u003ebase32\u003c/code\u003e, \u003ccode\u003ebase64\u003c/code\u003e, \u003ccode\u003ebasename\u003c/code\u003e, \u003ccode\u003ebasenc\u003c/code\u003e, \u003ccode\u003ecat\u003c/code\u003e, \u003ccode\u003echcon\u003c/code\u003e, \u003ccode\u003echgrp\u003c/code\u003e, \u003ccode\u003echmod\u003c/code\u003e, \u003ccode\u003echown\u003c/code\u003e, \u003ccode\u003echroot\u003c/code\u003e, \u003ccode\u003ecksum\u003c/code\u003e, \u003ccode\u003ecomm\u003c/code\u003e, \u003ccode\u003ecp\u003c/code\u003e, \u003ccode\u003ecsplit\u003c/code\u003e, \u003ccode\u003ecut\u003c/code\u003e, \u003ccode\u003edate\u003c/code\u003e, \u003ccode\u003edd\u003c/code\u003e, \u003ccode\u003edf\u003c/code\u003e, \u003ccode\u003edir\u003c/code\u003e, \u003ccode\u003edircolors\u003c/code\u003e, \u003ccode\u003edirname\u003c/code\u003e, \u003ccode\u003edu\u003c/code\u003e, \u003ccode\u003eecho\u003c/code\u003e, \u003ccode\u003eenv\u003c/code\u003e, \u003ccode\u003eexpand\u003c/code\u003e, \u003ccode\u003eexpr\u003c/code\u003e, \u003ccode\u003efactor\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e, \u003ccode\u003efmt\u003c/code\u003e, \u003ccode\u003efold\u003c/code\u003e, \u003ccode\u003egroups\u003c/code\u003e, \u003ccode\u003ehead\u003c/code\u003e, \u003ccode\u003ehostid\u003c/code\u003e, \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003einstall\u003c/code\u003e, \u003ccode\u003ejoin\u003c/code\u003e, \u003ccode\u003ekill\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003eln\u003c/code\u003e, \u003ccode\u003elogname\u003c/code\u003e, \u003ccode\u003els\u003c/code\u003e, \u003ccode\u003emd5sum\u003c/code\u003e, \u003ccode\u003emkdir\u003c/code\u003e, \u003ccode\u003emkfifo\u003c/code\u003e, \u003ccode\u003emknod\u003c/code\u003e, \u003ccode\u003emktemp\u003c/code\u003e, \u003ccode\u003emv\u003c/code\u003e, \u003ccode\u003enice\u003c/code\u003e, \u003ccode\u003enl\u003c/code\u003e, \u003ccode\u003enohup\u003c/code\u003e, \u003ccode\u003enproc\u003c/code\u003e, \u003ccode\u003enumfmt\u003c/code\u003e, \u003ccode\u003eod\u003c/code\u003e, \u003ccode\u003epaste\u003c/code\u003e, \u003ccode\u003epathchk\u003c/code\u003e, \u003ccode\u003epinky\u003c/code\u003e, \u003ccode\u003epr\u003c/code\u003e, \u003ccode\u003eprintenv\u003c/code\u003e, \u003ccode\u003eprintf\u003c/code\u003e, \u003ccode\u003eptx\u003c/code\u003e, \u003ccode\u003epwd\u003c/code\u003e, \u003ccode\u003ereadlink\u003c/code\u003e, \u003ccode\u003erealpath\u003c/code\u003e, \u003ccode\u003erm\u003c/code\u003e, \u003ccode\u003ermdir\u003c/code\u003e, \u003ccode\u003eruncon\u003c/code\u003e, \u003ccode\u003eseq\u003c/code\u003e, \u003ccode\u003esha1sum\u003c/code\u003e, \u003ccode\u003esha224sum\u003c/code\u003e, \u003ccode\u003esha256sum\u003c/code\u003e, \u003ccode\u003esha384sum\u003c/code\u003e, \u003ccode\u003esha512sum\u003c/code\u003e, \u003ccode\u003eshred\u003c/code\u003e, \u003ccode\u003eshuf\u003c/code\u003e, \u003ccode\u003esleep\u003c/code\u003e, \u003ccode\u003esort\u003c/code\u003e, \u003ccode\u003esplit\u003c/code\u003e, \u003ccode\u003estat\u003c/code\u003e, \u003ccode\u003estdbuf\u003c/code\u003e, \u003ccode\u003estty\u003c/code\u003e, \u003ccode\u003esum\u003c/code\u003e, \u003ccode\u003esync\u003c/code\u003e, \u003ccode\u003etac\u003c/code\u003e, \u003ccode\u003etail\u003c/code\u003e, \u003ccode\u003etee\u003c/code\u003e, \u003ccode\u003etest\u003c/code\u003e, \u003ccode\u003etimeout\u003c/code\u003e, \u003ccode\u003etouch\u003c/code\u003e, \u003ccode\u003etr\u003c/code\u003e, \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003etruncate\u003c/code\u003e, \u003ccode\u003etsort\u003c/code\u003e, \u003ccode\u003etty\u003c/code\u003e, \u003ccode\u003euname\u003c/code\u003e, \u003ccode\u003eunexpand\u003c/code\u003e, \u003ccode\u003euniq\u003c/code\u003e, \u003ccode\u003eunlink\u003c/code\u003e, \u003ccode\u003euptime\u003c/code\u003e, \u003ccode\u003eusers\u003c/code\u003e, \u003ccode\u003evdir\u003c/code\u003e, \u003ccode\u003ewc\u003c/code\u003e, \u003ccode\u003ewho\u003c/code\u003e, \u003ccode\u003ewhoami\u003c/code\u003e, \u003ccode\u003eyes\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eed\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eed\u003c/code\u003e, \u003ccode\u003ered\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egawk\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eawk\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egrep\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eegrep\u003c/code\u003e, \u003ccode\u003efgrep\u003c/code\u003e, \u003ccode\u003egrep\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egnu-sed\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003esed\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egnu-tar\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003etar\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003emake\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003emake\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003efindutils\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003efind\u003c/code\u003e, \u003ccode\u003elocate\u003c/code\u003e, \u003ccode\u003eupdatedb\u003c/code\u003e, \u003ccode\u003exargs\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n## Conclusion\n\nUsing the GNU flavor of command line tools (instead of the FreeBSD flavor) should simplify the task of writing shell scripts which can work across macOS and GNU/Linux.\n"},
    "links": {
        "prev": {"title": "Running aws-vault in macOS with local Docker containers", "permalink": "https://ryanparman.com/posts/2019/running-aws-vault-with-local-docker-containers/"},
        "next": {"title": "How to create local TLS certificates for development on macOS", "permalink": "https://ryanparman.com/posts/2019/how-to-create-local-tls-certificates-for-development-on-macos/"},
        "ignore": "me"
    }
}

}
