{
    "data": {
    "kind": "page",
    "title": "Installing FFMPEG and FFMPEG-PHP in Fedora 8 running on Amazon EC2",
    "description": "",
    "summary": {
        "content": "I’ve spent a bit of time working with Amazon EC2 recently. One of the things I’ve been working on is getting a stable build of FFMPEG and FFMPEG-PHP running on a Fedora 8 image in Amazon EC2. This is essentially going to be a tutorial to get things up and running. Of course, your milage may vary. These instructions apply to a 32-bit Fedora 8 installation. The hardware I primarily use happens to be on EC2, but these instructions aren’t specific to EC2.",
        "isTruncated": true
    },
    "published": "2008-06-28T23:56:05Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2008/installing-ffmpeg-php-fedora-amazon-aws/",
    "relativePermalink": "/posts/2008/installing-ffmpeg-php-fedora-amazon-aws/",
    "aliases": ["/2008/06/28/installing-ffmpeg-php-fedora-amazon-aws/"],
    "images": [],
    "videos": [],
    "categories": ["Projects and Code"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 874,
        "readingTime": "5 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2008/20080628-installing-ffmpeg-php-fedora-amazon-aws.md",
        "logicalName": "20080628-installing-ffmpeg-php-fedora-amazon-aws.md",
        "translationBaseName": "20080628-installing-ffmpeg-php-fedora-amazon-aws",
        "baseFileName": "20080628-installing-ffmpeg-php-fedora-amazon-aws",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2008/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#preparing-the-lamp-stack-and-a-few-other-things\"\u003ePreparing the LAMP stack (and a few other things)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installing-ffmpeg\"\u003eInstalling FFMPEG\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installing-ffmpeg-php\"\u003eInstalling FFMPEG-PHP\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#all-done\"\u003eAll done!\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eI’ve spent a bit of time working with Amazon EC2 recently. One of the things I’ve been working on is getting a stable build of FFMPEG and FFMPEG-PHP running on a Fedora 8 image in Amazon EC2. This is essentially going to be a tutorial to get things up and running. Of course, your milage may vary.\u003c/p\u003e\n\u003cp\u003eThese instructions apply to a 32-bit Fedora 8 installation. The hardware I primarily use happens to be on EC2, but these instructions aren’t specific to EC2. You may need to tweak things a smidge for an x64 system.\u003c/p\u003e\n\u003ch2 id=\"preparing-the-lamp-stack-and-a-few-other-things\"\u003ePreparing the LAMP stack (and a few other things)\u003c/h2\u003e\n\u003cp\u003eFor FFMPEG-PHP to work, you need to have a web server with PHP support up and running. You’ll definitely need GD for image processing and mbstring is helpful in conjunction with PHP5’s built-in iconv support for managing multiple character sets in ID3 tags.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eInstall PHP, necessary extensions and supporting software.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eyum -y install \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php-devel \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php-gd \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php-mbstring \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    gcc \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    gcc-c++ \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    libtool \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    svn \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    git \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    yasm \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    gsm-devel \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    libogg-devel \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    libvorbis-devel \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    libtheora-devel \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAlso, I like to create a directory with symlinks to important files so that I can access everything more efficiently. These will be used throughout this tutorial.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003emkdir /www-config; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003eln -s /etc/init.d/httpd /www-config/httpd; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003eln -s /etc/httpd/conf/httpd.conf /www-config/httpd.conf; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003eln -s /var/log/httpd/ /www-config/logs; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003eln -s /usr/lib/php/modules/ /www-config/php5-extensions; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003eln -s /etc/httpd/conf.d/php.conf /www-config/php.conf; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003eln -s /etc/httpd/conf.d/ /www-config/apache-conf; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003eln -s /etc/php.ini /www-config/php.ini; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003eln -s /etc/php.d/ /www-config/php-ini; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003eln -s /var/www/html/ /www-config/public-html; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e/www-config/httpd restart;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003ePHP 5.x should now be installed and you should have a directory prepared that lets you easily access important files for managing your configuration.\u003c/p\u003e\n\u003ch2 id=\"installing-ffmpeg\"\u003eInstalling FFMPEG\u003c/h2\u003e\n\u003cp\u003eFFMPEG can be fairly complicated to get running properly, so here’s what I’ve gotten working thus far.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDownload FFMPEG source.\u003c/strong\u003e Export the latest FFMPEG trunk from Subversion, then change to the source directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esvn export svn://svn.mplayerhq.hu/ffmpeg/trunk /ffmpeg-trunk-source; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd /ffmpeg-trunk-source;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstall \u003ca href=\"https://web.archive.org/web/20080628235605/http://www.videolan.org/developers/x264.html\"\u003ex264\u003c/a\u003e.\u003c/strong\u003e Export the latest x264 trunk from Git. Enter the directory, make, install, and go back to the parent directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003egit clone git://git.videolan.org/x264.git; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd x264; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e./configure --prefix\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/usr --enable-shared --enable-pthread; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake install; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd ..;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstall \u003ca href=\"https://web.archive.org/web/20080628235605/http://liba52.sourceforge.net/\"\u003eliba52\u003c/a\u003e.\u003c/strong\u003e Download the latest version of liba52 (Currently 0.7.4). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ewget http://liba52.sourceforge.net/files/a52dec-0.7.4.tar.gz; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003etar -zxvf a52dec-0.7.4.tar.gz; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd a52dec-0.7.4; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e./configure --prefix\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/usr --enable-double; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake install; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd ..;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstall \u003ca href=\"https://web.archive.org/web/20080628235605/http://www.audiocoding.com/\"\u003eFAAC\u003c/a\u003e.\u003c/strong\u003e Download the latest version of FAAC (Currently 1.26). Decompress the package, enter the directory, create the configure file, run configure, make, install, and go back to the parent directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ewget http://downloads.sourceforge.net/faac/faac-1.26.tar.gz; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003etar -zxvf faac-1.26.tar.gz; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd faac; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003eautoreconf -vif; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e./configure --prefix\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/usr; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake install; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd ..;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstall \u003ca href=\"https://web.archive.org/web/20080628235605/http://www.audiocoding.com/\"\u003eFAAD\u003c/a\u003e.\u003c/strong\u003e Download the latest version of FAAD (Currently 2.6.1). Decompress the package, enter the directory, create the configure file, run configure, make, install, and go back to the parent directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ewget http://downloads.sourceforge.net/faac/faad2-2.6.1.tar.gz; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003etar -zxvf faad2-2.6.1.tar.gz; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd faad2; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003eautoreconf -vif; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e./configure --prefix\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/usr; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake install; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd ..;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstall \u003ca href=\"https://web.archive.org/web/20080628235605/http://lame.sourceforge.net/\"\u003eLAME\u003c/a\u003e.\u003c/strong\u003e Download the latest version of LAME (Currently 3.98b8). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ewget http://downloads.sourceforge.net/lame/lame-3.98b8.tar.gz; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003etar -zxvf lame-3.98b8.tar.gz; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd lame-3.98b8; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e./configure --prefix\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/usr; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake install; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd ..;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstall \u003ca href=\"https://web.archive.org/web/20080628235605/http://libmpeg2.sourceforge.net/\"\u003elibmpeg2\u003c/a\u003e.\u003c/strong\u003e Download the latest version of libmpeg2 (Currently 0.4.1). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ewget http://libmpeg2.sourceforge.net/files/mpeg2dec-0.4.1.tar.gz; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003etar -zxvf mpeg2dec-0.4.1.tar.gz; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd mpeg2dec-0.4.1; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e./configure --prefix\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/usr; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake install; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd ..;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstall \u003ca href=\"https://web.archive.org/web/20080628235605/http://xvid.org/\"\u003eXvid\u003c/a\u003e.\u003c/strong\u003e Download the latest version of Xvid (Currently 1.1.3). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ewget http://downloads.xvid.org/downloads/xvidcore-1.1.3.tar.gz; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003etar -zxvf xvidcore-1.1.3.tar.gz; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd xvidcore-1.1.3/build/generic; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e./configure --prefix\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/usr; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake install; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd ../../../;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstall \u003ca href=\"https://web.archive.org/web/20080628235605/http://www.penguin.cz/~utx/amr\"\u003eAMR/3GPP\u003c/a\u003e.\u003c/strong\u003e Download the latest version of AMR (Currently 7.0.0.1). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ewget http://ftp.penguin.cz/pub/users/utx/amr/amrnb-7.0.0.1.tar.bz2; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003etar -jxvf amrnb-7.0.0.1.tar.bz2; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd amrnb-7.0.0.1; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e./configure --prefix\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/usr; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake install; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd ../;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eCompile FFMPEG.\u003c/strong\u003e Configure, make, and install the software, including all options that enable enhanced functionality.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e./configure \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --prefix\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/usr \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-static \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-gpl \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-nonfree \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-postproc \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-avfilter \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-avfilter-lavf \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-liba52 \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-liba52bin \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-libamr-nb \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-libfaac \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-libfaad \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-libfaadbin \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-libgsm \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-libmp3lame \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-libtheora \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-libvorbis \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-libx264 \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --enable-libxvid \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e;\n\nmake; make install;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"installing-ffmpeg-php\"\u003eInstalling FFMPEG-PHP\u003c/h2\u003e\n\u003cp\u003eOnce you have FFMPEG functioning properly, you can install the FFMPEG-PHP extension.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eDownload and install FFMPEG-PHP source. Enter the directory, download the source, run phpize, configure, make, install, and go back to the parent directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecd /ffmpeg-trunk-source; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ewget http://downloads.sourceforge.net/ffmpeg-php/ffmpeg-php-0.5.3.1.tbz2; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003etar -jxvf ffmpeg-php-0.5.3.1.tbz2; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd ffmpeg-php-0.5.3.1; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ephpize; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e./configure --prefix\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/usr; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003emake install; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd ..;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAdd FFMPEG-PHP to the PHP configuration.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eecho \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;extension=ffmpeg.so\u0026#34;\u003c/span\u003e \u0026gt; /www-config/php-ini/ffmpeg.ini\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRestart Apache.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e/www-config/httpd restart\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"all-done\"\u003eAll done!\u003c/h2\u003e\n\u003cp\u003eFFMPEG and FFMPEG-PHP should now be installed and ready to go. Make sure to check your error log if something isn’t working properly.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecat /www-config/logs/error_log\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
        "plain":"I’ve spent a bit of time working with Amazon EC2 recently. One of the things I’ve been working on is getting a stable build of FFMPEG and FFMPEG-PHP running on a Fedora 8 image in Amazon EC2. This is essentially going to be a tutorial to get things up and running. Of course, your milage may vary.\nThese instructions apply to a 32-bit Fedora 8 installation. The hardware I primarily use happens to be on EC2, but these instructions aren’t specific to EC2. You may need to tweak things a smidge for an x64 system.\nPreparing the LAMP stack (and a few other things) For FFMPEG-PHP to work, you need to have a web server with PHP support up and running. You’ll definitely need GD for image processing and mbstring is helpful in conjunction with PHP5’s built-in iconv support for managing multiple character sets in ID3 tags.\n  Install PHP, necessary extensions and supporting software.\nyum -y install \\  php-devel \\  php-gd \\  php-mbstring \\  gcc \\  gcc-c++ \\  libtool \\  svn \\  git \\  yasm \\  gsm-devel \\  libogg-devel \\  libvorbis-devel \\  libtheora-devel \\ ;   Also, I like to create a directory with symlinks to important files so that I can access everything more efficiently. These will be used throughout this tutorial.\nmkdir /www-config; \\ ln -s /etc/init.d/httpd /www-config/httpd; \\ ln -s /etc/httpd/conf/httpd.conf /www-config/httpd.conf; \\ ln -s /var/log/httpd/ /www-config/logs; \\ ln -s /usr/lib/php/modules/ /www-config/php5-extensions; \\ ln -s /etc/httpd/conf.d/php.conf /www-config/php.conf; \\ ln -s /etc/httpd/conf.d/ /www-config/apache-conf; \\ ln -s /etc/php.ini /www-config/php.ini; \\ ln -s /etc/php.d/ /www-config/php-ini; \\ ln -s /var/www/html/ /www-config/public-html; \\ /www-config/httpd restart;   PHP 5.x should now be installed and you should have a directory prepared that lets you easily access important files for managing your configuration.\nInstalling FFMPEG FFMPEG can be fairly complicated to get running properly, so here’s what I’ve gotten working thus far.\n  Download FFMPEG source. Export the latest FFMPEG trunk from Subversion, then change to the source directory.\nsvn export svn://svn.mplayerhq.hu/ffmpeg/trunk /ffmpeg-trunk-source; \\ cd /ffmpeg-trunk-source;   Install x264. Export the latest x264 trunk from Git. Enter the directory, make, install, and go back to the parent directory.\ngit clone git://git.videolan.org/x264.git; \\ cd x264; \\ ./configure --prefix=/usr --enable-shared --enable-pthread; \\ make; \\ make install; \\ cd ..;   Install liba52. Download the latest version of liba52 (Currently 0.7.4). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\nwget http://liba52.sourceforge.net/files/a52dec-0.7.4.tar.gz; \\ tar -zxvf a52dec-0.7.4.tar.gz; \\ cd a52dec-0.7.4; \\ ./configure --prefix=/usr --enable-double; \\ make; \\ make install; \\ cd ..;   Install FAAC. Download the latest version of FAAC (Currently 1.26). Decompress the package, enter the directory, create the configure file, run configure, make, install, and go back to the parent directory.\nwget http://downloads.sourceforge.net/faac/faac-1.26.tar.gz; \\ tar -zxvf faac-1.26.tar.gz; \\ cd faac; \\ autoreconf -vif; \\ ./configure --prefix=/usr; \\ make; \\ make install; \\ cd ..;   Install FAAD. Download the latest version of FAAD (Currently 2.6.1). Decompress the package, enter the directory, create the configure file, run configure, make, install, and go back to the parent directory.\nwget http://downloads.sourceforge.net/faac/faad2-2.6.1.tar.gz; \\ tar -zxvf faad2-2.6.1.tar.gz; \\ cd faad2; \\ autoreconf -vif; \\ ./configure --prefix=/usr; \\ make; \\ make install; \\ cd ..;   Install LAME. Download the latest version of LAME (Currently 3.98b8). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\nwget http://downloads.sourceforge.net/lame/lame-3.98b8.tar.gz; \\ tar -zxvf lame-3.98b8.tar.gz; \\ cd lame-3.98b8; \\ ./configure --prefix=/usr; \\ make; \\ make install; \\ cd ..;   Install libmpeg2. Download the latest version of libmpeg2 (Currently 0.4.1). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\nwget http://libmpeg2.sourceforge.net/files/mpeg2dec-0.4.1.tar.gz; \\ tar -zxvf mpeg2dec-0.4.1.tar.gz; \\ cd mpeg2dec-0.4.1; \\ ./configure --prefix=/usr; \\ make; \\ make install; \\ cd ..;   Install Xvid. Download the latest version of Xvid (Currently 1.1.3). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\nwget http://downloads.xvid.org/downloads/xvidcore-1.1.3.tar.gz; \\ tar -zxvf xvidcore-1.1.3.tar.gz; \\ cd xvidcore-1.1.3/build/generic; \\ ./configure --prefix=/usr; \\ make; \\ make install; \\ cd ../../../;   Install AMR/3GPP. Download the latest version of AMR (Currently 7.0.0.1). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\nwget http://ftp.penguin.cz/pub/users/utx/amr/amrnb-7.0.0.1.tar.bz2; \\ tar -jxvf amrnb-7.0.0.1.tar.bz2; \\ cd amrnb-7.0.0.1; \\ ./configure --prefix=/usr; \\ make; \\ make install; \\ cd ../;   Compile FFMPEG. Configure, make, and install the software, including all options that enable enhanced functionality.\n./configure \\  --prefix=/usr \\  --enable-static \\  --enable-gpl \\  --enable-nonfree \\  --enable-postproc \\  --enable-avfilter \\  --enable-avfilter-lavf \\  --enable-liba52 \\  --enable-liba52bin \\  --enable-libamr-nb \\  --enable-libfaac \\  --enable-libfaad \\  --enable-libfaadbin \\  --enable-libgsm \\  --enable-libmp3lame \\  --enable-libtheora \\  --enable-libvorbis \\  --enable-libx264 \\  --enable-libxvid \\ ; make; make install;   Installing FFMPEG-PHP Once you have FFMPEG functioning properly, you can install the FFMPEG-PHP extension.\n  Download and install FFMPEG-PHP source. Enter the directory, download the source, run phpize, configure, make, install, and go back to the parent directory.\ncd /ffmpeg-trunk-source; \\ wget http://downloads.sourceforge.net/ffmpeg-php/ffmpeg-php-0.5.3.1.tbz2; \\ tar -jxvf ffmpeg-php-0.5.3.1.tbz2; \\ cd ffmpeg-php-0.5.3.1; \\ phpize; \\ ./configure --prefix=/usr; \\ make; \\ make install; \\ cd ..;   Add FFMPEG-PHP to the PHP configuration.\necho \u0026#34;extension=ffmpeg.so\u0026#34; \u0026gt; /www-config/php-ini/ffmpeg.ini   Restart Apache.\n/www-config/httpd restart   All done! FFMPEG and FFMPEG-PHP should now be installed and ready to go. Make sure to check your error log if something isn’t working properly.\ncat /www-config/logs/error_log ",
        "source":"\nI’ve spent a bit of time working with Amazon EC2 recently. One of the things I’ve been working on is getting a stable build of FFMPEG and FFMPEG-PHP running on a Fedora 8 image in Amazon EC2. This is essentially going to be a tutorial to get things up and running. Of course, your milage may vary.\n\nThese instructions apply to a 32-bit Fedora 8 installation. The hardware I primarily use happens to be on EC2, but these instructions aren’t specific to EC2. You may need to tweak things a smidge for an x64 system.\n\n## Preparing the LAMP stack (and a few other things)\n\nFor FFMPEG-PHP to work, you need to have a web server with PHP support up and running. You’ll definitely need GD for image processing and mbstring is helpful in conjunction with PHP5’s built-in iconv support for managing multiple character sets in ID3 tags.\n\n1. Install PHP, necessary extensions and supporting software.\n\n    ```bash\n    yum -y install \\\n        php-devel \\\n        php-gd \\\n        php-mbstring \\\n        gcc \\\n        gcc-c++ \\\n        libtool \\\n        svn \\\n        git \\\n        yasm \\\n        gsm-devel \\\n        libogg-devel \\\n        libvorbis-devel \\\n        libtheora-devel \\\n    ;\n    ```\n\n2. Also, I like to create a directory with symlinks to important files so that I can access everything more efficiently. These will be used throughout this tutorial.\n\n    ```bash\n    mkdir /www-config; \\\n    ln -s /etc/init.d/httpd /www-config/httpd; \\\n    ln -s /etc/httpd/conf/httpd.conf /www-config/httpd.conf; \\\n    ln -s /var/log/httpd/ /www-config/logs; \\\n    ln -s /usr/lib/php/modules/ /www-config/php5-extensions; \\\n    ln -s /etc/httpd/conf.d/php.conf /www-config/php.conf; \\\n    ln -s /etc/httpd/conf.d/ /www-config/apache-conf; \\\n    ln -s /etc/php.ini /www-config/php.ini; \\\n    ln -s /etc/php.d/ /www-config/php-ini; \\\n    ln -s /var/www/html/ /www-config/public-html; \\\n    /www-config/httpd restart;\n    ```\n\nPHP 5.x should now be installed and you should have a directory prepared that lets you easily access important files for managing your configuration.\n\n## Installing FFMPEG\n\nFFMPEG can be fairly complicated to get running properly, so here’s what I’ve gotten working thus far.\n\n1. **Download FFMPEG source.** Export the latest FFMPEG trunk from Subversion, then change to the source directory.\n\n    ```bash\n    svn export svn://svn.mplayerhq.hu/ffmpeg/trunk /ffmpeg-trunk-source; \\\n    cd /ffmpeg-trunk-source;\n    ```\n\n2. **Install [x264]({{% wayback \"http://www.videolan.org/developers/x264.html\" %}}).** Export the latest x264 trunk from Git. Enter the directory, make, install, and go back to the parent directory.\n\n    ```bash\n    git clone git://git.videolan.org/x264.git; \\\n    cd x264; \\\n    ./configure --prefix=/usr --enable-shared --enable-pthread; \\\n    make; \\\n    make install; \\\n    cd ..;\n    ```\n\n3. **Install [liba52]({{% wayback \"http://liba52.sourceforge.net/\" %}}).** Download the latest version of liba52 (Currently 0.7.4). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\n\n    ```bash\n    wget http://liba52.sourceforge.net/files/a52dec-0.7.4.tar.gz; \\\n    tar -zxvf a52dec-0.7.4.tar.gz; \\\n    cd a52dec-0.7.4; \\\n    ./configure --prefix=/usr --enable-double; \\\n    make; \\\n    make install; \\\n    cd ..;\n    ```\n\n4. **Install [FAAC]({{% wayback \"http://www.audiocoding.com/\" %}}).** Download the latest version of FAAC (Currently 1.26). Decompress the package, enter the directory, create the configure file, run configure, make, install, and go back to the parent directory.\n\n    ```bash\n    wget http://downloads.sourceforge.net/faac/faac-1.26.tar.gz; \\\n    tar -zxvf faac-1.26.tar.gz; \\\n    cd faac; \\\n    autoreconf -vif; \\\n    ./configure --prefix=/usr; \\\n    make; \\\n    make install; \\\n    cd ..;\n    ```\n\n5. **Install [FAAD]({{% wayback \"http://www.audiocoding.com/\" %}}).** Download the latest version of FAAD (Currently 2.6.1). Decompress the package, enter the directory, create the configure file, run configure, make, install, and go back to the parent directory.\n\n    ```bash\n    wget http://downloads.sourceforge.net/faac/faad2-2.6.1.tar.gz; \\\n    tar -zxvf faad2-2.6.1.tar.gz; \\\n    cd faad2; \\\n    autoreconf -vif; \\\n    ./configure --prefix=/usr; \\\n    make; \\\n    make install; \\\n    cd ..;\n    ```\n\n6. **Install [LAME]({{% wayback \"http://lame.sourceforge.net/\" %}}).** Download the latest version of LAME (Currently 3.98b8). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\n\n    ```bash\n    wget http://downloads.sourceforge.net/lame/lame-3.98b8.tar.gz; \\\n    tar -zxvf lame-3.98b8.tar.gz; \\\n    cd lame-3.98b8; \\\n    ./configure --prefix=/usr; \\\n    make; \\\n    make install; \\\n    cd ..;\n    ```\n\n7. **Install [libmpeg2]({{% wayback \"http://libmpeg2.sourceforge.net/\" %}}).** Download the latest version of libmpeg2 (Currently 0.4.1). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\n\n    ```bash\n    wget http://libmpeg2.sourceforge.net/files/mpeg2dec-0.4.1.tar.gz; \\\n    tar -zxvf mpeg2dec-0.4.1.tar.gz; \\\n    cd mpeg2dec-0.4.1; \\\n    ./configure --prefix=/usr; \\\n    make; \\\n    make install; \\\n    cd ..;\n    ```\n\n8. **Install [Xvid]({{% wayback \"http://xvid.org/\" %}}).** Download the latest version of Xvid (Currently 1.1.3). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\n\n    ```bash\n    wget http://downloads.xvid.org/downloads/xvidcore-1.1.3.tar.gz; \\\n    tar -zxvf xvidcore-1.1.3.tar.gz; \\\n    cd xvidcore-1.1.3/build/generic; \\\n    ./configure --prefix=/usr; \\\n    make; \\\n    make install; \\\n    cd ../../../;\n    ```\n\n9. **Install [AMR/3GPP]({{% wayback \"http://www.penguin.cz/~utx/amr\" %}}).** Download the latest version of AMR (Currently 7.0.0.1). Decompress the package, enter the directory, run configure, make, install, and go back to the parent directory.\n\n    ```bash\n    wget http://ftp.penguin.cz/pub/users/utx/amr/amrnb-7.0.0.1.tar.bz2; \\\n    tar -jxvf amrnb-7.0.0.1.tar.bz2; \\\n    cd amrnb-7.0.0.1; \\\n    ./configure --prefix=/usr; \\\n    make; \\\n    make install; \\\n    cd ../;\n    ```\n\n10. **Compile FFMPEG.** Configure, make, and install the software, including all options that enable enhanced functionality.\n\n    ```bash\n    ./configure \\\n        --prefix=/usr \\\n        --enable-static \\\n        --enable-gpl \\\n        --enable-nonfree \\\n        --enable-postproc \\\n        --enable-avfilter \\\n        --enable-avfilter-lavf \\\n        --enable-liba52 \\\n        --enable-liba52bin \\\n        --enable-libamr-nb \\\n        --enable-libfaac \\\n        --enable-libfaad \\\n        --enable-libfaadbin \\\n        --enable-libgsm \\\n        --enable-libmp3lame \\\n        --enable-libtheora \\\n        --enable-libvorbis \\\n        --enable-libx264 \\\n        --enable-libxvid \\\n    ;\n\n    make; make install;\n    ```\n\n## Installing FFMPEG-PHP\n\nOnce you have FFMPEG functioning properly, you can install the FFMPEG-PHP extension.\n\n1. Download and install FFMPEG-PHP source. Enter the directory, download the source, run phpize, configure, make, install, and go back to the parent directory.\n\n    ```bash\n    cd /ffmpeg-trunk-source; \\\n    wget http://downloads.sourceforge.net/ffmpeg-php/ffmpeg-php-0.5.3.1.tbz2; \\\n    tar -jxvf ffmpeg-php-0.5.3.1.tbz2; \\\n    cd ffmpeg-php-0.5.3.1; \\\n    phpize; \\\n    ./configure --prefix=/usr; \\\n    make; \\\n    make install; \\\n    cd ..;\n    ```\n\n2. Add FFMPEG-PHP to the PHP configuration.\n\n    ```bash\n    echo \"extension=ffmpeg.so\" \u003e /www-config/php-ini/ffmpeg.ini\n    ```\n\n3. Restart Apache.\n\n    ```bash\n    /www-config/httpd restart\n    ```\n\n## All done!\n\nFFMPEG and FFMPEG-PHP should now be installed and ready to go. Make sure to check your error log if something isn’t working properly.\n\n```bash\ncat /www-config/logs/error_log\n```\n"},
    "links": {
        "prev": {"title": "Yahoo! Messenger redesign is live!", "permalink": "https://ryanparman.com/posts/2008/yahoo-messenger-redesign-is-live/"},
        "next": {"title": "Visiting Chicago", "permalink": "https://ryanparman.com/posts/2008/visiting-chicago/"},
        "ignore": "me"
    }
}

}
