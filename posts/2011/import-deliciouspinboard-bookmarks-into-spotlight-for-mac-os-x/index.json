{
    "data": {
    "kind": "page",
    "title": "Import Delicious/Pinboard Bookmarks Into Spotlight for Mac OS X",
    "description": "",
    "summary": {
        "content": "I’ve been heavily invested in Delicious as a bookmarking service for many years. However, after learning about Delicious’ sunsetting, I’ve decided to join the ranks of the Great Delicious Exodus and sign up for an account with Pinboard. One tool that has been an important part of my workflow is a tool called delimport, which automatically indexes my Delicious bookmarks and makes them available via Spotlight and Spotlight-powered tools (e.g., Alfred on Mac OS X). While delimport hasn’t been updated since 2007, it has continued to work remarkably well.",
        "isTruncated": true
    },
    "published": "2011-01-02T02:09:17Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2011/import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x/",
    "relativePermalink": "/posts/2011/import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x/",
    "aliases": ["/2011/01/01/import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 820,
        "readingTime": "4 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2011/20110102-import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x.md",
        "logicalName": "20110102-import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x.md",
        "translationBaseName": "20110102-import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x",
        "baseFileName": "20110102-import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2011/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#getting-started\"\u003eGetting Started\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#editing-and-compiling\"\u003eEditing and Compiling\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#cleaning-up\"\u003eCleaning Up\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installation\"\u003eInstallation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#post-mortem\"\u003ePost-mortem\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eI’ve been heavily invested in \u003ca href=\"https://web.archive.org/web/20110102020917/http://delicious.com\"\u003eDelicious\u003c/a\u003e as a bookmarking service for many years. However, after learning about Delicious’ \u003ca href=\"https://web.archive.org/web/20110102020917/https://twitter.com/waxpancake/status/15483488237002752\"\u003esunsetting\u003c/a\u003e, I’ve decided to join the ranks of the \u003ca href=\"https://web.archive.org/web/20110102020917/https://twitter.com/PinboardIN/status/20323781167816704\"\u003eGreat Delicious Exodus\u003c/a\u003e and sign up for an account with \u003ca href=\"https://web.archive.org/web/20110102020917/http://pinboard.in\"\u003ePinboard\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eOne tool that has been an important part of my workflow is a tool called \u003ca href=\"https://web.archive.org/web/20110102020917/http://ianhenderson.org/delimport.html\"\u003edelimport\u003c/a\u003e, which automatically indexes my Delicious bookmarks and makes them available via \u003ca href=\"https://web.archive.org/web/20110102020917/http://www.apple.com/macosx/what-is-macosx/spotlight.html\"\u003eSpotlight\u003c/a\u003e and Spotlight-powered tools (e.g., \u003ca href=\"https://web.archive.org/web/20110102020917/http://alfredapp.com\"\u003eAlfred\u003c/a\u003e on Mac OS X).\u003c/p\u003e\n\u003cp\u003eWhile delimport hasn’t been updated since 2007, it has continued to work remarkably well. The upside is that the project has an open-source repository available, but I still ran into a few issues. Here’s how I added Pinboard support to delimport.\u003c/p\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003cp\u003eThe first thing to note is that I’m running \u003cem\u003eMac OS X 10.6.5\u003c/em\u003e and \u003cem\u003eXcode 3.2.5\u003c/em\u003e. This is notable because it’s what caused several of my problems while trying to solve this puzzle. We’ll get to that in a minute.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eI needed to pull down the delimport source code. This required additional steps.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eInstall \u003ca href=\"https://web.archive.org/web/20110102020917/http://macports.org\"\u003eMacPorts\u003c/a\u003e if you haven’t already.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUpdate MacPorts and its files to the latest version.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo port -d selfupdate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eInstall \u003ca href=\"https://web.archive.org/web/20110102020917/http://darcs.net\"\u003eDarcs\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo port install darcs\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePull down the source code.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edarcs get http://ianhenderson.org/repos/delimport\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eI’ll save you the time and tell you that \u003cem\u003edelimport will not compile in Xcode 3.2\u003c/em\u003e. You’ll need to revert to an older version of Xcode, 3.1.4.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eGo to \u003ca href=\"https://web.archive.org/web/20110102020917/http://connect.apple.com\"\u003econnect.apple.com\u003c/a\u003e and login.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the sidebar, choose \u003cem\u003eDeveloper Tools\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eScroll down and find the section labelled \u003cem\u003eXcode 3.1.4 Developer Tools\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eChoose the \u003cem\u003eXcode 3.1.4 Developer DVD (Disk Image)\u003c/em\u003e which clocks in at 993 MB.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWhile waiting for that, you’ll need to uninstall your current version of Xcode.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo /Developer/Library/uninstall-devtools –mode\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eall\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOnce the Xcode 3.1.4 disk image is downloaded, install it.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eMake sure you include the \u003cem\u003eMac OS X 10.4 SDK\u003c/em\u003e as well.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAfter the install has completed, restart your computer. No seriously.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"editing-and-compiling\"\u003eEditing and Compiling\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e A couple of people have asked why I don’t just redistribute a modified version of the app. The reason is licensing. As far as I can tell, the source code is 100% copyrighted with no license for redistributing modifications to the source or the app. As such, I’m providing instructions for modifying the app but you’ll need to compile it yourself.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eOnce your system is back up, locate the \u003ccode\u003edelimport.xcodeproj\u003c/code\u003e file and open it in Xcode 3.1.4.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eChange the \u003cem\u003eBase SDK\u003c/em\u003e pulldown to \u003cem\u003eDeployment\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_base_sdk.webp\" alt=\"Base SDK\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_base_sdk.png\" alt=\"Base SDK\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the sidebar, choose the \u003ccode\u003edelimport\u003c/code\u003e project, right-click (or control-click), and choose \u003cem\u003eGet Info\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_get_info.webp\" alt=\"Get Info\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_get_info.png\" alt=\"Get Info\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFrom the resulting dialog box, change the value of the \u003cem\u003eArchitectures\u003c/em\u003e setting to \u003cem\u003e32/64-bit Universal\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_architecture.webp\" alt=\"Architectures\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_architecture.png\" alt=\"Architectures\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick the checkbox for \u003cem\u003eBuild Active Architecture Only\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFor the \u003cem\u003eValid Architectures\u003c/em\u003e setting, there are more architectures than we need. Remove all architectures except for \u003ccode\u003ei386\u003c/code\u003e and \u003ccode\u003ex86_64\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_valid_architecture.webp\" alt=\"Valid Architectures\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_valid_architecture.png\" alt=\"Valid Architectures\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWhile \u003ccode\u003edelimport\u003c/code\u003e is still selected in the sidebar, choose \u003cem\u003eProject \u0026gt; Edit Active Target “delimport”\u003c/em\u003e from the menubar. Choose the \u003cem\u003eProperties\u003c/em\u003e tab from the resulting dialog box. Change the version number to \u003ccode\u003e0.3.1u\u003c/code\u003e which says that you’re using an unofficial modification (just in case the developer releases an official 0.3.1 version).\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_properties.webp\" alt=\"Properties\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_properties.png\" alt=\"Properties\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOpen the \u003ccode\u003eClasses\u003c/code\u003e folder in the sidebar and find the \u003ccode\u003eDIBookmarksController.m\u003c/code\u003e file. Make the following changes to the file.\u003c/p\u003e\n\u003cscript type=\"application/javascript\" src=\"https://gist.github.com/skyzyx/762179.js\"\u003e\u003c/script\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the menubar, choose \u003cem\u003eBuild \u0026gt; Build\u003c/em\u003e. If all is well, the source should compile with no errors.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"cleaning-up\"\u003eCleaning Up\u003c/h2\u003e\n\u003cp\u003eFirst, let’s clean up after the old version of delimport.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eShutdown any running copies of delimport by launching \u003cem\u003eActivity Monitor\u003c/em\u003e, searching for \u003cem\u003edelimport\u003c/em\u003e, clicking the \u003cem\u003eQuit Process\u003c/em\u003e button in the toolbar, and choosing either \u003cem\u003eQuit\u003c/em\u003e or \u003cem\u003eForce Quit\u003c/em\u003e from the resulting dialog.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_activity_monitor.webp\" alt=\"Activity Monitor\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_activity_monitor.png\" alt=\"Activity Monitor\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOpen up your \u003cem\u003eAccounts\u003c/em\u003e preference pane, click on the \u003cem\u003eLogin Items\u003c/em\u003e tab, and delete any entries that contain \u003cem\u003edelimport\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_accounts.webp\" alt=\"Accounts preference pane\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_accounts.png\" alt=\"Accounts preference pane\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOpen your Terminal and run the following commands.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003erm -Rf ~/Library/Caches/org.ianhenderson.delimport \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\nrm -Rf ~/Library/Caches/Metadata/delimport/ \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\nrm -f ~/Library/Preferences/org.ianhenderson.delimport.plist\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"installation\"\u003eInstallation\u003c/h2\u003e\n\u003cp\u003eOnce we’ve removed the old cruft, let’s install our new app.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eFrom your \u003ccode\u003edelimport\u003c/code\u003e source code directory, open \u003ccode\u003ebuild/Deployment\u003c/code\u003e to find \u003ccode\u003edelimport.app\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_app.webp\" alt=\"delimport.app\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_app.png\" alt=\"delimport.app\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDrag the app into your \u003ccode\u003e/Applications\u003c/code\u003e or \u003ccode\u003e/Applications/Utilities\u003c/code\u003e directory.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLaunch the app.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSince we deleted all of the previous settings, your computer will think that this is the first time that we’ve launched the app. It will ask you if you want to launch it on login. Choose \u003cem\u003eAdd\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_launch.webp\" alt=\"Activity Monitor\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_launch.png\" alt=\"Activity Monitor\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you already have your credentials for \u003ca href=\"https://web.archive.org/web/20110102020917/http://pinboard.in\"\u003ePinboard\u003c/a\u003e stored in your Keychain, it will ask if you want to give delimport access to your Pinboard credentials. Choose \u003cem\u003eAlways Allow\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you don’t have your credentials saved, delimport will ask for your Pinboard credentials. Go ahead and enter them.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWithin a few moments, you’ll be able to use Spotlight to access your Pinboard bookmarks.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"post-mortem\"\u003ePost-mortem\u003c/h2\u003e\n\u003cp\u003eOnce everything is installed and working, you’ll probably want to remove Xcode 3.1.4 and reinstall the latest version. Simply follow the aforementioned uninstallation instructions to remove the old Xcode, then install the latest Xcode.\u003c/p\u003e\n\u003cp\u003eIf you don’t have the installer on-hand, you can always download the latest version from the logged-in version of \u003ca href=\"https://web.archive.org/web/20110102020917/https://developer.apple.com/mac\"\u003edeveloper.apple.com/mac\u003c/a\u003e.\u003c/p\u003e\n",
        "plain":"I’ve been heavily invested in Delicious as a bookmarking service for many years. However, after learning about Delicious’ sunsetting, I’ve decided to join the ranks of the Great Delicious Exodus and sign up for an account with Pinboard.\nOne tool that has been an important part of my workflow is a tool called delimport, which automatically indexes my Delicious bookmarks and makes them available via Spotlight and Spotlight-powered tools (e.g., Alfred on Mac OS X).\nWhile delimport hasn’t been updated since 2007, it has continued to work remarkably well. The upside is that the project has an open-source repository available, but I still ran into a few issues. Here’s how I added Pinboard support to delimport.\nGetting Started The first thing to note is that I’m running Mac OS X 10.6.5 and Xcode 3.2.5. This is notable because it’s what caused several of my problems while trying to solve this puzzle. We’ll get to that in a minute.\n  I needed to pull down the delimport source code. This required additional steps.\n  Install MacPorts if you haven’t already.\n  Update MacPorts and its files to the latest version.\nsudo port -d selfupdate   Install Darcs.\nsudo port install darcs   Pull down the source code.\ndarcs get http://ianhenderson.org/repos/delimport     I’ll save you the time and tell you that delimport will not compile in Xcode 3.2. You’ll need to revert to an older version of Xcode, 3.1.4.\n  Go to connect.apple.com and login.\n  In the sidebar, choose Developer Tools.\n  Scroll down and find the section labelled Xcode 3.1.4 Developer Tools.\n  Choose the Xcode 3.1.4 Developer DVD (Disk Image) which clocks in at 993 MB.\n  While waiting for that, you’ll need to uninstall your current version of Xcode.\nsudo /Developer/Library/uninstall-devtools –mode=all     Once the Xcode 3.1.4 disk image is downloaded, install it.\n  Make sure you include the Mac OS X 10.4 SDK as well.\n  After the install has completed, restart your computer. No seriously.\n    Editing and Compiling Note: A couple of people have asked why I don’t just redistribute a modified version of the app. The reason is licensing. As far as I can tell, the source code is 100% copyrighted with no license for redistributing modifications to the source or the app. As such, I’m providing instructions for modifying the app but you’ll need to compile it yourself.\n  Once your system is back up, locate the delimport.xcodeproj file and open it in Xcode 3.1.4.\n  Change the Base SDK pulldown to Deployment.\n    In the sidebar, choose the delimport project, right-click (or control-click), and choose Get Info.\n    From the resulting dialog box, change the value of the Architectures setting to 32/64-bit Universal.\n    Click the checkbox for Build Active Architecture Only.\n  For the Valid Architectures setting, there are more architectures than we need. Remove all architectures except for i386 and x86_64.\n    While delimport is still selected in the sidebar, choose Project \u0026gt; Edit Active Target “delimport” from the menubar. Choose the Properties tab from the resulting dialog box. Change the version number to 0.3.1u which says that you’re using an unofficial modification (just in case the developer releases an official 0.3.1 version).\n    Open the Classes folder in the sidebar and find the DIBookmarksController.m file. Make the following changes to the file.\n   In the menubar, choose Build \u0026gt; Build. If all is well, the source should compile with no errors.\n  Cleaning Up First, let’s clean up after the old version of delimport.\n  Shutdown any running copies of delimport by launching Activity Monitor, searching for delimport, clicking the Quit Process button in the toolbar, and choosing either Quit or Force Quit from the resulting dialog.\n    Open up your Accounts preference pane, click on the Login Items tab, and delete any entries that contain delimport.\n    Open your Terminal and run the following commands.\nrm -Rf ~/Library/Caches/org.ianhenderson.delimport \u0026amp;\u0026amp; rm -Rf ~/Library/Caches/Metadata/delimport/ \u0026amp;\u0026amp; rm -f ~/Library/Preferences/org.ianhenderson.delimport.plist   Installation Once we’ve removed the old cruft, let’s install our new app.\n  From your delimport source code directory, open build/Deployment to find delimport.app.\n    Drag the app into your /Applications or /Applications/Utilities directory.\n  Launch the app.\n  Since we deleted all of the previous settings, your computer will think that this is the first time that we’ve launched the app. It will ask you if you want to launch it on login. Choose Add.\n    If you already have your credentials for Pinboard stored in your Keychain, it will ask if you want to give delimport access to your Pinboard credentials. Choose Always Allow.\n  If you don’t have your credentials saved, delimport will ask for your Pinboard credentials. Go ahead and enter them.\n  Within a few moments, you’ll be able to use Spotlight to access your Pinboard bookmarks.\n  Post-mortem Once everything is installed and working, you’ll probably want to remove Xcode 3.1.4 and reinstall the latest version. Simply follow the aforementioned uninstallation instructions to remove the old Xcode, then install the latest Xcode.\nIf you don’t have the installer on-hand, you can always download the latest version from the logged-in version of developer.apple.com/mac.\n",
        "source":"\nI’ve been heavily invested in [Delicious]({{% wayback \"http://delicious.com\" %}}) as a bookmarking service for many years. However, after learning about Delicious’ [sunsetting]({{% wayback \"https://twitter.com/waxpancake/status/15483488237002752\" %}}), I’ve decided to join the ranks of the [Great Delicious Exodus]({{% wayback \"https://twitter.com/PinboardIN/status/20323781167816704\" %}}) and sign up for an account with [Pinboard]({{% wayback \"http://pinboard.in\" %}}).\n\nOne tool that has been an important part of my workflow is a tool called [delimport]({{% wayback \"http://ianhenderson.org/delimport.html\" %}}), which automatically indexes my Delicious bookmarks and makes them available via [Spotlight]({{% wayback \"http://www.apple.com/macosx/what-is-macosx/spotlight.html\" %}}) and Spotlight-powered tools (e.g., [Alfred]({{% wayback \"http://alfredapp.com\" %}}) on Mac OS X).\n\nWhile delimport hasn’t been updated since 2007, it has continued to work remarkably well. The upside is that the project has an open-source repository available, but I still ran into a few issues. Here’s how I added Pinboard support to delimport.\n\n## Getting Started\n\nThe first thing to note is that I’m running *Mac OS X 10.6.5* and *Xcode 3.2.5*. This is notable because it’s what caused several of my problems while trying to solve this puzzle. We’ll get to that in a minute.\n\n1. I needed to pull down the delimport source code. This required additional steps.\n\n    1. Install [MacPorts]({{% wayback \"http://macports.org\" %}}) if you haven’t already.\n\n    2. Update MacPorts and its files to the latest version.\n\n        ```bash\n        sudo port -d selfupdate\n        ```\n\n    3. Install [Darcs]({{% wayback \"http://darcs.net\" %}}).\n\n        ```bash\n        sudo port install darcs\n        ```\n\n    4. Pull down the source code.\n\n        ```bash\n        darcs get http://ianhenderson.org/repos/delimport\n        ```\n\n2. I’ll save you the time and tell you that *delimport will not compile in Xcode 3.2*. You’ll need to revert to an older version of Xcode, 3.1.4.\n\n    1. Go to [connect.apple.com]({{% wayback \"http://connect.apple.com\" %}}) and login.\n\n    2. In the sidebar, choose *Developer Tools*.\n\n    3. Scroll down and find the section labelled *Xcode 3.1.4 Developer Tools*.\n\n    4. Choose the *Xcode 3.1.4 Developer DVD (Disk Image)* which clocks in at 993 MB.\n\n    5. While waiting for that, you’ll need to uninstall your current version of Xcode.\n\n        ```bash\n        sudo /Developer/Library/uninstall-devtools –mode=all\n        ```\n\n3. Once the Xcode 3.1.4 disk image is downloaded, install it.\n\n    1. Make sure you include the *Mac OS X 10.4 SDK* as well.\n\n    2. After the install has completed, restart your computer. No seriously.\n\n## Editing and Compiling\n\n**Note:** A couple of people have asked why I don’t just redistribute a modified version of the app. The reason is licensing. As far as I can tell, the source code is 100% copyrighted with no license for redistributing modifications to the source or the app. As such, I’m providing instructions for modifying the app but you’ll need to compile it yourself.\n\n1. Once your system is back up, locate the `delimport.xcodeproj` file and open it in Xcode 3.1.4.\n\n2. Change the *Base SDK* pulldown to *Deployment*.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_base_sdk.png\" alt=\"Base SDK\"\u003e}}\n\n3. In the sidebar, choose the `delimport` project, right-click (or control-click), and choose *Get Info*.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_get_info.png\" alt=\"Get Info\"\u003e}}\n\n4. From the resulting dialog box, change the value of the *Architectures* setting to *32/64-bit Universal*.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_architecture.png\" alt=\"Architectures\"\u003e}}\n\n5. Click the checkbox for *Build Active Architecture Only*.\n\n6. For the *Valid Architectures* setting, there are more architectures than we need. Remove all architectures except for `i386` and `x86_64`.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_valid_architecture.png\" alt=\"Valid Architectures\"\u003e}}\n\n7. While `delimport` is still selected in the sidebar, choose *Project \u0026gt; Edit Active Target “delimport”* from the menubar. Choose the *Properties* tab from the resulting dialog box. Change the version number to `0.3.1u` which says that you’re using an unofficial modification (just in case the developer releases an official 0.3.1 version).\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_properties.png\" alt=\"Properties\"\u003e}}\n\n8. Open the `Classes` folder in the sidebar and find the `DIBookmarksController.m` file. Make the following changes to the file.\n\n    {{\u003c gist skyzyx 762179 \u003e}}\n\n9. In the menubar, choose *Build \u0026gt; Build*. If all is well, the source should compile with no errors.\n\n## Cleaning Up\n\nFirst, let’s clean up after the old version of delimport.\n\n1. Shutdown any running copies of delimport by launching *Activity Monitor*, searching for *delimport*, clicking the *Quit Process* button in the toolbar, and choosing either *Quit* or *Force Quit* from the resulting dialog.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_activity_monitor.png\" alt=\"Activity Monitor\"\u003e}}\n\n2. Open up your *Accounts* preference pane, click on the *Login Items* tab, and delete any entries that contain *delimport*.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_accounts.png\" alt=\"Accounts preference pane\"\u003e}}\n\n3. Open your Terminal and run the following commands.\n\n    ```bash\n    rm -Rf ~/Library/Caches/org.ianhenderson.delimport \u0026\u0026\n    rm -Rf ~/Library/Caches/Metadata/delimport/ \u0026\u0026\n    rm -f ~/Library/Preferences/org.ianhenderson.delimport.plist\n    ```\n\n## Installation\n\nOnce we’ve removed the old cruft, let’s install our new app.\n\n1. From your `delimport` source code directory, open `build/Deployment` to find `delimport.app`.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_app.png\" alt=\"delimport.app\"\u003e}}\n\n2. Drag the app into your `/Applications` or `/Applications/Utilities` directory.\n\n3. Launch the app.\n\n4. Since we deleted all of the previous settings, your computer will think that this is the first time that we’ve launched the app. It will ask you if you want to launch it on login. Choose *Add*.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_launch.png\" alt=\"Activity Monitor\"\u003e}}\n\n5. If you already have your credentials for [Pinboard]({{% wayback \"http://pinboard.in\" %}}) stored in your Keychain, it will ask if you want to give delimport access to your Pinboard credentials. Choose *Always Allow*.\n\n6. If you don’t have your credentials saved, delimport will ask for your Pinboard credentials. Go ahead and enter them.\n\n7. Within a few moments, you’ll be able to use Spotlight to access your Pinboard bookmarks.\n\n## Post-mortem\n\nOnce everything is installed and working, you’ll probably want to remove Xcode 3.1.4 and reinstall the latest version. Simply follow the aforementioned uninstallation instructions to remove the old Xcode, then install the latest Xcode.\n\nIf you don’t have the installer on-hand, you can always download the latest version from the logged-in version of [developer.apple.com/mac]({{% wayback \"https://developer.apple.com/mac\" %}}).\n"},
    "links": {
        "prev": {"title": "2011 Resolutions", "permalink": "https://ryanparman.com/posts/2011/2011-resolutions/"},
        "next": {"title": "Nothing Lasts Forever", "permalink": "https://ryanparman.com/posts/2011/nothing-lasts-forever/"},
        "ignore": "me"
    }
}

}
