{
    "data": {
    "kind": "page",
    "title": "LIR vs FIR",
    "description": "",
    "summary": {
        "content": "An Introduction Ever since I rolled out version 21.0 of my website in early August (dubbed “Oxygen 2003”), I’ve been using FIR technique to swap out text for images in CSS browsers. Today, I realized that it presents accessibility problems for screen readers such as JAWS and IBM Home Page Reader. They understand the CSS display:none;, but they don’t understand media types (same issue with WebTV/MSN-TV — they understand @import, but not media types — doh!). Also, FIR fails in IE5/Mac.",
        "isTruncated": true
    },
    "published": "2003-09-13T04:24:33Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2003/lir-vs-fir/",
    "relativePermalink": "/posts/2003/lir-vs-fir/",
    "aliases": ["/archives/000070.php", "/articles/000070.php", "/2003/09/12/lir-vs-fir/"],
    "images": [],
    "videos": [],
    "categories": ["Web Standards"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 589,
        "readingTime": "3 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2003/20030913-lir-vs-fir.md",
        "logicalName": "20030913-lir-vs-fir.md",
        "translationBaseName": "20030913-lir-vs-fir",
        "baseFileName": "20030913-lir-vs-fir",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2003/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#an-introduction\"\u003eAn Introduction\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#a-simple-fir\"\u003eA Simple FIR\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#a-sample-lir\"\u003eA Sample LIR\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#update\"\u003eUpdate\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003ch2 id=\"an-introduction\"\u003eAn Introduction\u003c/h2\u003e\n\u003cp\u003eEver since I rolled out version 21.0 of my website in early August (dubbed “Oxygen 2003”), I’ve been using FIR technique to swap out text for images in CSS browsers. Today, I realized that it presents accessibility problems for screen readers such as JAWS and IBM Home Page Reader. They understand the CSS \u003ccode\u003edisplay:none;\u003c/code\u003e, but they don’t understand media types (same issue with WebTV/MSN-TV — they understand \u003ccode\u003e@import\u003c/code\u003e, but not media types — doh!). Also, FIR fails in IE5/Mac.\u003c/p\u003e\n\u003cp\u003eAfter Googling for some time, I came across the LIR method. Which seems to cover that base. I’m still not sure about IE5/Mac though. I won’t be able to test it out until Monday when I get back to class, but I can’t really edit it in class. So I have to go to class, view in in IE5/Mac, go home after class and modify the CSS, go back to class the next day to view it again, etc., etc.\u003c/p\u003e\n\u003cp\u003eWhat I’m hoping for is a wonderful reader to check this out in IE5/Mac and tell me what’s going on. That’d be absolutely wonderful! Any takers?\u003c/p\u003e\n\u003cp\u003eAnother \u003cem\u003eproblem\u003c/em\u003e, per say, is that it uses non-semantic markup, meaning mark-up that has no content-related purpose. It’s only purpose is for presentational purposes, which is a big no-no in semantic circles. Nevermind that we’re no longer using tables for layout, but I guess wrong is wrong nonetheless.\u003c/p\u003e\n\u003ch2 id=\"a-simple-fir\"\u003eA Simple FIR\u003c/h2\u003e\n\u003cp\u003eYour basic FIR technique will replace text with an image by nesting a \u003ccode\u003e\u0026lt;span\u0026gt;\u003c/code\u003e inside of a parent element. You then hide the \u003ccode\u003e\u0026lt;span\u0026gt;\u003c/code\u003e, and apply sizing and a background image to the parent element.\u003c/p\u003e\n\u003cp\u003eHere’s some sample HTML:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u0026lt;\u003cspan style=\"color:#f92672\"\u003eh1\u003c/span\u003e\u0026gt;\u0026lt;\u003cspan style=\"color:#f92672\"\u003espan\u003c/span\u003e\u0026gt;Skyzyx.com\u0026lt;/\u003cspan style=\"color:#f92672\"\u003espan\u003c/span\u003e\u0026gt;\u0026lt;/\u003cspan style=\"color:#f92672\"\u003eh1\u003c/span\u003e\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSimple, right? Now here’s some sample CSS to go with it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-css\" data-lang=\"css\"\u003e\u003cspan style=\"color:#f92672\"\u003eh1\u003c/span\u003e {\n    \u003cspan style=\"color:#66d9ef\"\u003ewidth\u003c/span\u003e:\u003cspan style=\"color:#ae81ff\"\u003e710\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003epx\u003c/span\u003e;\n    \u003cspan style=\"color:#66d9ef\"\u003eheight\u003c/span\u003e:\u003cspan style=\"color:#ae81ff\"\u003e80\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003epx\u003c/span\u003e;\n    \u003cspan style=\"color:#66d9ef\"\u003ebackground\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etransparent\u003c/span\u003e url(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/img/skyzyxcom.gif\u0026#34;\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003eno-repeat\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003etop\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eleft\u003c/span\u003e;\n}\n\n\u003cspan style=\"color:#f92672\"\u003eh1\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003espan\u003c/span\u003e { \u003cspan style=\"color:#66d9ef\"\u003edisplay\u003c/span\u003e:\u003cspan style=\"color:#66d9ef\"\u003enone\u003c/span\u003e; }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"a-sample-lir\"\u003eA Sample LIR\u003c/h2\u003e\n\u003cp\u003eAs noted above, the Fahrner Image Replacement technique has a few problems. This method remedies at least two of them (semantics and screen readers), but I’m still not sure about IE5/Mac.\u003c/p\u003e\n\u003cp\u003eHere’s some sample HTML:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u0026lt;\u003cspan style=\"color:#f92672\"\u003eh1\u003c/span\u003e\u0026gt;Skyzyx.com\u0026lt;/\u003cspan style=\"color:#f92672\"\u003eh1\u003c/span\u003e\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eEven simpler, right? Now here’s some sample CSS to go with it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-css\" data-lang=\"css\"\u003e\u003cspan style=\"color:#f92672\"\u003eh1\u003c/span\u003e {\n    \u003cspan style=\"color:#66d9ef\"\u003ewidth\u003c/span\u003e:\u003cspan style=\"color:#ae81ff\"\u003e710\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003epx\u003c/span\u003e;\n    \u003cspan style=\"color:#66d9ef\"\u003epadding\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e80\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003epx\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n    \u003cspan style=\"color:#66d9ef\"\u003ebackground\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etransparent\u003c/span\u003e url(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/img/skyzyxcom.gif\u0026#34;\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003eno-repeat\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003etop\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eleft\u003c/span\u003e;\n    \u003cspan style=\"color:#66d9ef\"\u003eoverflow\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003ehidden\u003c/span\u003e; \n    \u003cspan style=\"color:#66d9ef\"\u003eheight\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003epx\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e!important\u003c/span\u003e; \u003cspan style=\"color:#75715e\"\u003e/* for most browsers */\u003c/span\u003e\n    \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003eheight\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e/**/\u003c/span\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e:80px\u003c/span\u003e; \u003cspan style=\"color:#75715e\"\u003e/* for IE5/Win\u0026#39;s bad box model */\u003c/span\u003e\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWhat this does instead is it keeps the original text there, as-is. Screen readers can read it.\u003c/p\u003e\n\u003cp\u003eNext, instead of setting the \u003ccode\u003eheight:\u003c/code\u003e property, we set the \u003ccode\u003epadding:\u003c/code\u003e property as our height — only the top padding value, though. This creates room for a background image but no room for text to show up.\u003c/p\u003e\n\u003cp\u003eWe set \u003ccode\u003eoverflow:\u003c/code\u003e to hidden so that the pushed-down text is not visible in CSS browsers.\u003c/p\u003e\n\u003cp\u003eUnfortunately, “The World’s Most Popular Browser™” screws things up with the faulty box model. So, we add the last line of CSS to fake-out IE 5.x for Windows and force-feed it the value it needs for all of this to work out, by exploiting a CSS rendering bug found in those versions.\u003c/p\u003e\n\u003cp\u003eVoila! After testing this method in IE5/Mac, I’ll know if we killed two or three birds with one stone. Kudos to \u003ca href=\"https://web.archive.org/web/20030913042433/http://www.kryogenix.org/code/browser/lir/\"\u003eStuart Langridge\u003c/a\u003e for this new method!\u003c/p\u003e\n\u003ch2 id=\"update\"\u003eUpdate\u003c/h2\u003e\n\u003cp\u003eYes, the LIR method works great in IE5/Mac. Unfortunately, clicking on the main header doesn’t return you to the homepage, so I’d like to work that out. Until then, I think my IE5/Mac users can get by okay since my navigation is pretty simple to understand. Good news indeed!\u003c/p\u003e\n",
        "plain":"An Introduction Ever since I rolled out version 21.0 of my website in early August (dubbed “Oxygen 2003”), I’ve been using FIR technique to swap out text for images in CSS browsers. Today, I realized that it presents accessibility problems for screen readers such as JAWS and IBM Home Page Reader. They understand the CSS display:none;, but they don’t understand media types (same issue with WebTV/MSN-TV — they understand @import, but not media types — doh!). Also, FIR fails in IE5/Mac.\nAfter Googling for some time, I came across the LIR method. Which seems to cover that base. I’m still not sure about IE5/Mac though. I won’t be able to test it out until Monday when I get back to class, but I can’t really edit it in class. So I have to go to class, view in in IE5/Mac, go home after class and modify the CSS, go back to class the next day to view it again, etc., etc.\nWhat I’m hoping for is a wonderful reader to check this out in IE5/Mac and tell me what’s going on. That’d be absolutely wonderful! Any takers?\nAnother problem, per say, is that it uses non-semantic markup, meaning mark-up that has no content-related purpose. It’s only purpose is for presentational purposes, which is a big no-no in semantic circles. Nevermind that we’re no longer using tables for layout, but I guess wrong is wrong nonetheless.\nA Simple FIR Your basic FIR technique will replace text with an image by nesting a \u0026lt;span\u0026gt; inside of a parent element. You then hide the \u0026lt;span\u0026gt;, and apply sizing and a background image to the parent element.\nHere’s some sample HTML:\n\u0026lt;h1\u0026gt;\u0026lt;span\u0026gt;Skyzyx.com\u0026lt;/span\u0026gt;\u0026lt;/h1\u0026gt; Simple, right? Now here’s some sample CSS to go with it:\nh1 { width:710px; height:80px; background: transparent url(\u0026#34;/img/skyzyxcom.gif\u0026#34;) no-repeat top left; } h1 span { display:none; } A Sample LIR As noted above, the Fahrner Image Replacement technique has a few problems. This method remedies at least two of them (semantics and screen readers), but I’m still not sure about IE5/Mac.\nHere’s some sample HTML:\n\u0026lt;h1\u0026gt;Skyzyx.com\u0026lt;/h1\u0026gt; Even simpler, right? Now here’s some sample CSS to go with it:\nh1 { width:710px; padding: 80px 0 0 0; background: transparent url(\u0026#34;/img/skyzyxcom.gif\u0026#34;) no-repeat top left; overflow: hidden; height: 0px !important; /* for most browsers */ height /**/:80px; /* for IE5/Win\u0026#39;s bad box model */ } What this does instead is it keeps the original text there, as-is. Screen readers can read it.\nNext, instead of setting the height: property, we set the padding: property as our height — only the top padding value, though. This creates room for a background image but no room for text to show up.\nWe set overflow: to hidden so that the pushed-down text is not visible in CSS browsers.\nUnfortunately, “The World’s Most Popular Browser™” screws things up with the faulty box model. So, we add the last line of CSS to fake-out IE 5.x for Windows and force-feed it the value it needs for all of this to work out, by exploiting a CSS rendering bug found in those versions.\nVoila! After testing this method in IE5/Mac, I’ll know if we killed two or three birds with one stone. Kudos to Stuart Langridge for this new method!\nUpdate Yes, the LIR method works great in IE5/Mac. Unfortunately, clicking on the main header doesn’t return you to the homepage, so I’d like to work that out. Until then, I think my IE5/Mac users can get by okay since my navigation is pretty simple to understand. Good news indeed!\n",
        "source":"\n## An Introduction\n\nEver since I rolled out version 21.0 of my website in early August (dubbed “Oxygen 2003”), I’ve been using FIR technique to swap out text for images in CSS browsers. Today, I realized that it presents accessibility problems for screen readers such as JAWS and IBM Home Page Reader. They understand the CSS `display:none;`, but they don’t understand media types (same issue with WebTV/MSN-TV — they understand `@import`, but not media types — doh!). Also, FIR fails in IE5/Mac.\n\nAfter Googling for some time, I came across the LIR method. Which seems to cover that base. I’m still not sure about IE5/Mac though. I won’t be able to test it out until Monday when I get back to class, but I can’t really edit it in class. So I have to go to class, view in in IE5/Mac, go home after class and modify the CSS, go back to class the next day to view it again, etc., etc.\n\nWhat I’m hoping for is a wonderful reader to check this out in IE5/Mac and tell me what’s going on. That’d be absolutely wonderful! Any takers?\n\nAnother *problem*, per say, is that it uses non-semantic markup, meaning mark-up that has no content-related purpose. It’s only purpose is for presentational purposes, which is a big no-no in semantic circles. Nevermind that we’re no longer using tables for layout, but I guess wrong is wrong nonetheless.\n\n## A Simple FIR\n\nYour basic FIR technique will replace text with an image by nesting a `\u003cspan\u003e` inside of a parent element. You then hide the `\u003cspan\u003e`, and apply sizing and a background image to the parent element.\n\nHere’s some sample HTML:\n\n```html\n\u003ch1\u003e\u003cspan\u003eSkyzyx.com\u003c/span\u003e\u003c/h1\u003e\n```\n\nSimple, right? Now here’s some sample CSS to go with it:\n\n```css\nh1 {\n    width:710px;\n    height:80px;\n    background: transparent url(\"/img/skyzyxcom.gif\") no-repeat top left;\n}\n\nh1 span { display:none; }\n```\n\n## A Sample LIR\n\nAs noted above, the Fahrner Image Replacement technique has a few problems. This method remedies at least two of them (semantics and screen readers), but I’m still not sure about IE5/Mac.\n\nHere’s some sample HTML:\n\n```html\n\u003ch1\u003eSkyzyx.com\u003c/h1\u003e\n```\n\nEven simpler, right? Now here’s some sample CSS to go with it:\n\n```css\nh1 {\n    width:710px;\n    padding: 80px 0 0 0;\n    background: transparent url(\"/img/skyzyxcom.gif\") no-repeat top left;\n    overflow: hidden; \n    height: 0px !important; /* for most browsers */\n    height /**/:80px; /* for IE5/Win's bad box model */\n}\n```\n\nWhat this does instead is it keeps the original text there, as-is. Screen readers can read it.\n\nNext, instead of setting the `height:` property, we set the `padding:` property as our height — only the top padding value, though. This creates room for a background image but no room for text to show up.\n\nWe set `overflow:` to hidden so that the pushed-down text is not visible in CSS browsers.\n\nUnfortunately, “The World’s Most Popular Browser™” screws things up with the faulty box model. So, we add the last line of CSS to fake-out IE 5.x for Windows and force-feed it the value it needs for all of this to work out, by exploiting a CSS rendering bug found in those versions.\n\nVoila! After testing this method in IE5/Mac, I’ll know if we killed two or three birds with one stone. Kudos to [Stuart Langridge]({{% wayback \"http://www.kryogenix.org/code/browser/lir/\" %}}) for this new method!\n\n## Update\n\nYes, the LIR method works great in IE5/Mac. Unfortunately, clicking on the main header doesn’t return you to the homepage, so I’d like to work that out. Until then, I think my IE5/Mac users can get by okay since my navigation is pretty simple to understand. Good news indeed!\n"},
    "links": {
        "prev": {"title": "Sickness", "permalink": "https://ryanparman.com/posts/2003/sickness/"},
        "next": {"title": "Snoop Dogg Shizzolator", "permalink": "https://ryanparman.com/posts/2003/snoop-dogg-shizzolator/"},
        "ignore": "me"
    }
}

}
