{
    "data": {
    "kind": "page",
    "title": "Installing PHP 5.3 with mysqlnd on Mac OS X with MacPorts",
    "description": "",
    "summary": {
        "content": "Historically, I’ve always preferred to use Apple’s built-in Apache 2.2 and PHP 5.x that comes with Leopard. However, after trying to compile PHP 5.3 from scratch and connect it with Apache, I decided to just use the MacPorts installer instead. That did mean giving up control of a finely-tuned Apache installation, but in the end, I think I’ve ended up with a better localhost system. Prerequisites Install MacPorts Also, make sure that your MacPorts install is completely up-to-date with:",
        "isTruncated": true
    },
    "published": "2009-07-11T20:33:44Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2009/installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports/",
    "relativePermalink": "/posts/2009/installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports/",
    "aliases": ["/2009/07/11/installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports/"],
    "images": [],
    "videos": [],
    "categories": ["Projects and Code"],
    "tags": [],
    "series": ["Editors Choice"],
    "keywords": [],
    "meta": {
        "wordCount": 716,
        "readingTime": "4 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2009/20090711-installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports.md",
        "logicalName": "20090711-installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports.md",
        "translationBaseName": "20090711-installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports",
        "baseFileName": "20090711-installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2009/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#prerequisites\"\u003ePrerequisites\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installation\"\u003eInstallation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#extra-stuff\"\u003eExtra stuff\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#replacing-older-versions\"\u003eReplacing older versions\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#shortcuts\"\u003eShortcuts\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eHistorically, I’ve always preferred to use Apple’s built-in Apache 2.2 and PHP 5.x that comes with Leopard. However, after trying to compile PHP 5.3 from scratch and connect it with Apache, I decided to just use the \u003ca href=\"https://web.archive.org/web/20090711203344/http://www.macports.org/install.php\"\u003eMacPorts\u003c/a\u003e installer instead. That did mean giving up control of a finely-tuned Apache installation, but in the end, I think I’ve ended up with a better localhost system.\u003c/p\u003e\n\u003ch2 id=\"prerequisites\"\u003ePrerequisites\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eInstall \u003ca href=\"https://web.archive.org/web/20090711203344/http://www.macports.org/install.php\"\u003eMacPorts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAlso, make sure that your MacPorts install is completely up-to-date with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo port -d selfupdate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"installation\"\u003eInstallation\u003c/h2\u003e\n\u003cp\u003eNow, I’ve never used MacPorts to install PHP or Apache before, so I’m starting with a clean slate. If you’ve already installed PHP or Apache with MacPorts, your steps may be different. As always, your mileage may vary. For me, I develop several open-source projects, so I need things that others may not. Adjust these steps as necessary.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eUsing “Web Sharing” in your Sharing Preferences should be turned off. Currently this points to the (old) Apple Apache installation, although we’ll change that later.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFrom Terminal, install PHP 5.3 + Apache, and some other stuff. This will likely take quite a while. I’m installing SQLite, MySQL, and PostgreSQL because of my work on \u003ca href=\"https://web.archive.org/web/20090711203344/http://cachecore.googlecode.com\"\u003eCacheCore\u003c/a\u003e, so you may or may not need those. \u003ccode\u003emysqlnd\u003c/code\u003e is the new PHP Native Driver for MySQL and is supposed to be better, so we’ll use that. We also need to enable non-default settings for cURL.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo port install curl +ssl+ipv6+ares+idn+gss+openldap+sftp_scp \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ephp5 +apache2+fastcgi+pear\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can see all available options by running \u003ccode\u003eport variants php5\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe new Apache configuration file is stored at \u003ccode\u003e/opt/local/apache2/conf/httpd.conf\u003c/code\u003e while the old one was at \u003ccode\u003e/etc/apache2/conf/httpd.conf\u003c/code\u003e. Take a moment to copy over any settings you’ll want to maintain into the new Apache installation.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eYou’ll also want to include your \u003cem\u003eextra\u003c/em\u003e settings. Toward the bottom of your \u003ccode\u003ehttpd.conf\u003c/code\u003e file, add the following line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-apache\" data-lang=\"apache\"\u003e\u003cspan style=\"color:#75715e\"\u003e# All settings\u003c/span\u003e\nInclude conf/extra/*.conf\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you \u003cstrong\u003edon’t\u003c/strong\u003e have an SSL certificate, rename your SSL configuration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecd /opt/local/apache2\nsudo mv conf/extra/httpd-ssl.conf conf/extra/httpd-ssl.conf-disabled\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eYou’ll also want to enable PHP in Apache:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo mv conf/extras-conf/mod_php.conf conf/extra/mod_php.conf\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe new PHP configuration file is stored at \u003ccode\u003e/opt/local/etc/php5/php.ini\u003c/code\u003e while the old one was at \u003ccode\u003e/etc/php.ini\u003c/code\u003e. Take a moment to copy over any settings you’ll want to maintain into the new PHP installation.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eYou’ll need to tell Apache to enable PHP support. Open your new \u003ccode\u003ehttpd.conf\u003c/code\u003e file, find where the extensions are loaded (with \u003ccode\u003eLoadModule\u003c/code\u003e), and add this to the end of the line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-apache\" data-lang=\"apache\"\u003eLoadModule php5_module modules/libphp5.so\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRestart Apache. If you were using \u003ccode\u003eapachectl\u003c/code\u003e before, it still points to the old Apache, so we’ll want to point specifically to the new one.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo /opt/local/apache2/bin/apachectl restart\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eAt this point, PHP 5.3 with Apache 2.2 and the new \u003ccode\u003emysqlnd\u003c/code\u003e extension are all installed.\u003c/p\u003e\n\u003ch2 id=\"extra-stuff\"\u003eExtra stuff\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eI generally prefer to have lots more stuff installed locally so that I can worry more about developing and less about installing. Because of this, I also install a few other things.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo port install memcached \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-apc \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-curl \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-gd \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-http \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-iconv \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-imagick \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-mbstring \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-memcache \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-mysql \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-openssl \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-postgresql \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-sockets \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-sqlite \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-tidy \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-xdebug \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRestart Apache with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo /opt/local/apache2/bin/apachectl restart\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"replacing-older-versions\"\u003eReplacing older versions\u003c/h2\u003e\n\u003cp\u003eNow, we want to continue using our command-line PHP scripts and the “Web Sharing” checkbox in the Sharing Preference Pane, so let’s make sure that those are all pointing to the new locations instead. We’ll be backing up and redirecting \u003ccode\u003ephp\u003c/code\u003e, \u003ccode\u003eapachectl\u003c/code\u003e, and \u003ccode\u003ehttpd\u003c/code\u003e.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eOpen up your Sharing Preference Pane, and disable Web Sharing\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRun the following command on the Terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo mv /usr/bin/php /usr/bin/php.bak \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo ln -s /opt/local/bin/php /usr/bin/php; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo mv /usr/sbin/apachectl /usr/sbin/apachectl.bak \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo ln -s /opt/local/apache2/bin/apachectl /usr/sbin/apachectl; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo mv /usr/sbin/httpd /usr/sbin/httpd.bak \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo ln -s /opt/local/apache2/bin/httpd /usr/sbin/httpd;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRe-enable Web Sharing in the preference pane.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"shortcuts\"\u003eShortcuts\u003c/h2\u003e\n\u003cp\u003eLastly, I like to set up some shortcuts so that I can access all of my important localhost stuff from one place. I’ll create a new directory called \u003ccode\u003ewww-config\u003c/code\u003e and then I’ll place symlinks into it for quick access to Apache and PHP configuration files.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo mkdir /www-config \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd /www-config \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo ln -s /opt/local/apache2/bin/apachectl /www-config/apachectl \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo ln -s /opt/local/apache2/conf/ /www-config/httpd-conf \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo ln -s /opt/local/apache2/logs/ /www-config/logs \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo ln -s /opt/local/var/db/php5/ /www-config/php-ini \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo ln -s /opt/local/etc/php5/php.ini /www-config/php.ini\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
        "plain":"Historically, I’ve always preferred to use Apple’s built-in Apache 2.2 and PHP 5.x that comes with Leopard. However, after trying to compile PHP 5.3 from scratch and connect it with Apache, I decided to just use the MacPorts installer instead. That did mean giving up control of a finely-tuned Apache installation, but in the end, I think I’ve ended up with a better localhost system.\nPrerequisites  Install MacPorts  Also, make sure that your MacPorts install is completely up-to-date with:\nsudo port -d selfupdate Installation Now, I’ve never used MacPorts to install PHP or Apache before, so I’m starting with a clean slate. If you’ve already installed PHP or Apache with MacPorts, your steps may be different. As always, your mileage may vary. For me, I develop several open-source projects, so I need things that others may not. Adjust these steps as necessary.\n  Using “Web Sharing” in your Sharing Preferences should be turned off. Currently this points to the (old) Apple Apache installation, although we’ll change that later.\n  From Terminal, install PHP 5.3 + Apache, and some other stuff. This will likely take quite a while. I’m installing SQLite, MySQL, and PostgreSQL because of my work on CacheCore, so you may or may not need those. mysqlnd is the new PHP Native Driver for MySQL and is supposed to be better, so we’ll use that. We also need to enable non-default settings for cURL.\nsudo port install curl +ssl+ipv6+ares+idn+gss+openldap+sftp_scp \\ php5 +apache2+fastcgi+pear You can see all available options by running port variants php5.\n  The new Apache configuration file is stored at /opt/local/apache2/conf/httpd.conf while the old one was at /etc/apache2/conf/httpd.conf. Take a moment to copy over any settings you’ll want to maintain into the new Apache installation.\n  You’ll also want to include your extra settings. Toward the bottom of your httpd.conf file, add the following line:\n# All settings Include conf/extra/*.conf   If you don’t have an SSL certificate, rename your SSL configuration:\ncd /opt/local/apache2 sudo mv conf/extra/httpd-ssl.conf conf/extra/httpd-ssl.conf-disabled   You’ll also want to enable PHP in Apache:\nsudo mv conf/extras-conf/mod_php.conf conf/extra/mod_php.conf   The new PHP configuration file is stored at /opt/local/etc/php5/php.ini while the old one was at /etc/php.ini. Take a moment to copy over any settings you’ll want to maintain into the new PHP installation.\n  You’ll need to tell Apache to enable PHP support. Open your new httpd.conf file, find where the extensions are loaded (with LoadModule), and add this to the end of the line:\nLoadModule php5_module modules/libphp5.so   Restart Apache. If you were using apachectl before, it still points to the old Apache, so we’ll want to point specifically to the new one.\nsudo /opt/local/apache2/bin/apachectl restart   At this point, PHP 5.3 with Apache 2.2 and the new mysqlnd extension are all installed.\nExtra stuff   I generally prefer to have lots more stuff installed locally so that I can worry more about developing and less about installing. Because of this, I also install a few other things.\nsudo port install memcached \\  php5-apc \\  php5-curl \\  php5-gd \\  php5-http \\  php5-iconv \\  php5-imagick \\  php5-mbstring \\  php5-memcache \\  php5-mysql \\  php5-openssl \\  php5-postgresql \\  php5-sockets \\  php5-sqlite \\  php5-tidy \\  php5-xdebug \\ ;   Restart Apache with:\nsudo /opt/local/apache2/bin/apachectl restart   Replacing older versions Now, we want to continue using our command-line PHP scripts and the “Web Sharing” checkbox in the Sharing Preference Pane, so let’s make sure that those are all pointing to the new locations instead. We’ll be backing up and redirecting php, apachectl, and httpd.\n  Open up your Sharing Preference Pane, and disable Web Sharing\n  Run the following command on the Terminal:\nsudo mv /usr/bin/php /usr/bin/php.bak \u0026amp;\u0026amp; sudo ln -s /opt/local/bin/php /usr/bin/php; \\ sudo mv /usr/sbin/apachectl /usr/sbin/apachectl.bak \u0026amp;\u0026amp; sudo ln -s /opt/local/apache2/bin/apachectl /usr/sbin/apachectl; \\ sudo mv /usr/sbin/httpd /usr/sbin/httpd.bak \u0026amp;\u0026amp; sudo ln -s /opt/local/apache2/bin/httpd /usr/sbin/httpd;   Re-enable Web Sharing in the preference pane.\n  Shortcuts Lastly, I like to set up some shortcuts so that I can access all of my important localhost stuff from one place. I’ll create a new directory called www-config and then I’ll place symlinks into it for quick access to Apache and PHP configuration files.\nsudo mkdir /www-config \u0026amp;\u0026amp; \\ cd /www-config \u0026amp;\u0026amp; \\ sudo ln -s /opt/local/apache2/bin/apachectl /www-config/apachectl \u0026amp;\u0026amp; \\ sudo ln -s /opt/local/apache2/conf/ /www-config/httpd-conf \u0026amp;\u0026amp; \\ sudo ln -s /opt/local/apache2/logs/ /www-config/logs \u0026amp;\u0026amp; \\ sudo ln -s /opt/local/var/db/php5/ /www-config/php-ini \u0026amp;\u0026amp; \\ sudo ln -s /opt/local/etc/php5/php.ini /www-config/php.ini ",
        "source":"\nHistorically, I’ve always preferred to use Apple’s built-in Apache 2.2 and PHP 5.x that comes with Leopard. However, after trying to compile PHP 5.3 from scratch and connect it with Apache, I decided to just use the [MacPorts]({{% wayback \"http://www.macports.org/install.php\" %}}) installer instead. That did mean giving up control of a finely-tuned Apache installation, but in the end, I think I’ve ended up with a better localhost system.\n\n## Prerequisites\n\n* Install [MacPorts]({{% wayback \"http://www.macports.org/install.php\" %}})\n\nAlso, make sure that your MacPorts install is completely up-to-date with:\n\n```bash\nsudo port -d selfupdate\n```\n\n## Installation\n\nNow, I’ve never used MacPorts to install PHP or Apache before, so I’m starting with a clean slate. If you’ve already installed PHP or Apache with MacPorts, your steps may be different. As always, your mileage may vary. For me, I develop several open-source projects, so I need things that others may not. Adjust these steps as necessary.\n\n1. Using “Web Sharing” in your Sharing Preferences should be turned off. Currently this points to the (old) Apple Apache installation, although we’ll change that later.\n\n2. From Terminal, install PHP 5.3 + Apache, and some other stuff. This will likely take quite a while. I’m installing SQLite, MySQL, and PostgreSQL because of my work on [CacheCore]({{% wayback \"http://cachecore.googlecode.com\" %}}), so you may or may not need those. `mysqlnd` is the new PHP Native Driver for MySQL and is supposed to be better, so we’ll use that. We also need to enable non-default settings for cURL.\n\n    ```bash\n    sudo port install curl +ssl+ipv6+ares+idn+gss+openldap+sftp_scp \\\n    php5 +apache2+fastcgi+pear\n    ```\n\n    You can see all available options by running `port variants php5`.\n\n3. The new Apache configuration file is stored at `/opt/local/apache2/conf/httpd.conf` while the old one was at `/etc/apache2/conf/httpd.conf`. Take a moment to copy over any settings you’ll want to maintain into the new Apache installation.\n\n4. You’ll also want to include your *extra* settings. Toward the bottom of your `httpd.conf` file, add the following line:\n\n    ```apache\n    # All settings\n    Include conf/extra/*.conf\n    ```\n\n5. If you **don’t** have an SSL certificate, rename your SSL configuration:\n\n    ```bash\n    cd /opt/local/apache2\n    sudo mv conf/extra/httpd-ssl.conf conf/extra/httpd-ssl.conf-disabled\n    ```\n\n6. You’ll also want to enable PHP in Apache:\n\n    ```bash\n    sudo mv conf/extras-conf/mod_php.conf conf/extra/mod_php.conf\n    ```\n\n7. The new PHP configuration file is stored at `/opt/local/etc/php5/php.ini` while the old one was at `/etc/php.ini`. Take a moment to copy over any settings you’ll want to maintain into the new PHP installation.\n\n8. You’ll need to tell Apache to enable PHP support. Open your new `httpd.conf` file, find where the extensions are loaded (with `LoadModule`), and add this to the end of the line:\n\n    ```apache\n    LoadModule php5_module modules/libphp5.so\n    ```\n\n9. Restart Apache. If you were using `apachectl` before, it still points to the old Apache, so we’ll want to point specifically to the new one.\n\n    ```bash\n    sudo /opt/local/apache2/bin/apachectl restart\n    ```\n\nAt this point, PHP 5.3 with Apache 2.2 and the new `mysqlnd` extension are all installed.\n\n## Extra stuff\n\n1. I generally prefer to have lots more stuff installed locally so that I can worry more about developing and less about installing. Because of this, I also install a few other things.\n\n    ```bash\n    sudo port install memcached \\\n        php5-apc \\\n        php5-curl \\\n        php5-gd \\\n        php5-http \\\n        php5-iconv \\\n        php5-imagick \\\n        php5-mbstring \\\n        php5-memcache \\\n        php5-mysql \\\n        php5-openssl \\\n        php5-postgresql \\\n        php5-sockets \\\n        php5-sqlite \\\n        php5-tidy \\\n        php5-xdebug \\\n    ;\n    ```\n\n2. Restart Apache with:\n\n    ```bash\n    sudo /opt/local/apache2/bin/apachectl restart\n    ```\n\n## Replacing older versions\n\nNow, we want to continue using our command-line PHP scripts and the “Web Sharing” checkbox in the Sharing Preference Pane, so let’s make sure that those are all pointing to the new locations instead. We’ll be backing up and redirecting `php`, `apachectl`, and `httpd`.\n\n1. Open up your Sharing Preference Pane, and disable Web Sharing\n\n2. Run the following command on the Terminal:\n\n    ```bash\n    sudo mv /usr/bin/php /usr/bin/php.bak \u0026\u0026 sudo ln -s /opt/local/bin/php /usr/bin/php; \\\n    sudo mv /usr/sbin/apachectl /usr/sbin/apachectl.bak \u0026\u0026 sudo ln -s /opt/local/apache2/bin/apachectl /usr/sbin/apachectl; \\\n    sudo mv /usr/sbin/httpd /usr/sbin/httpd.bak \u0026\u0026 sudo ln -s /opt/local/apache2/bin/httpd /usr/sbin/httpd;\n    ```\n\n3. Re-enable Web Sharing in the preference pane.\n\n## Shortcuts\n\nLastly, I like to set up some shortcuts so that I can access all of my important localhost stuff from one place. I’ll create a new directory called `www-config` and then I’ll place symlinks into it for quick access to Apache and PHP configuration files.\n\n```bash\nsudo mkdir /www-config \u0026\u0026 \\\ncd /www-config \u0026\u0026 \\\nsudo ln -s /opt/local/apache2/bin/apachectl /www-config/apachectl \u0026\u0026 \\\nsudo ln -s /opt/local/apache2/conf/ /www-config/httpd-conf \u0026\u0026 \\\nsudo ln -s /opt/local/apache2/logs/ /www-config/logs \u0026\u0026 \\\nsudo ln -s /opt/local/var/db/php5/ /www-config/php-ini \u0026\u0026 \\\nsudo ln -s /opt/local/etc/php5/php.ini /www-config/php.ini\n```\n"},
    "links": {
        "prev": {"title": "Run Internet Explorer 6 (or IE7, or IE8) images in VirtualBox on Mac OS X", "permalink": "https://ryanparman.com/posts/2009/run-ie6-ie7-ie8-images-virtualbox-macosx/"},
        "next": {"title": "WebKit 3D CSS Transforms", "permalink": "https://ryanparman.com/posts/2009/webkit-3d-css-transforms/"},
        "ignore": "me"
    }
}

}
