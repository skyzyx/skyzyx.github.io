{
    "data": {
    "kind": "page",
    "title": "Introducing DOMBuilder",
    "description": "",
    "summary": {
        "content": "The DOM I hate the DOM. Actually, I take that back. I love the DOM, but I hate the fact that generating DOM nodes in JavaScript is so verbose and unintuitive. You need to construct a new element, then add properties, then construct a child element, then add properties, then append the child to the parent, and the parent to whatever DOM object you want that’s already in the page. A few years ago I discovered Builder.node(), a component of Scriptaculous.",
        "isTruncated": true
    },
    "published": "2009-02-27T17:13:22Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2009/introducing-dombuilder/",
    "relativePermalink": "/posts/2009/introducing-dombuilder/",
    "aliases": ["/2009/02/27/introducing-dombuilder/"],
    "images": [],
    "videos": [],
    "categories": ["Projects and Code"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 339,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2009/20090227-introducing-dombuilder.md",
        "logicalName": "20090227-introducing-dombuilder.md",
        "translationBaseName": "20090227-introducing-dombuilder",
        "baseFileName": "20090227-introducing-dombuilder",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2009/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#the-dom\"\u003eThe DOM\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#examples\"\u003eExamples\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#download\"\u003eDownload\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003ch2 id=\"the-dom\"\u003eThe DOM\u003c/h2\u003e\n\u003cp\u003eI hate the DOM. Actually, I take that back. I love the DOM, but I hate the fact that generating DOM nodes in JavaScript is so verbose and unintuitive.\u003c/p\u003e\n\u003cp\u003eYou need to construct a new element, then add properties, then construct a child element, then add properties, then append the child to the parent, and the parent to whatever DOM object you want that’s already in the page.\u003c/p\u003e\n\u003cp\u003eA few years ago I discovered \u003ccode\u003eBuilder.node()\u003c/code\u003e, a component of \u003ca href=\"https://web.archive.org/web/20090227171322/http://script.aculo.us\"\u003eScriptaculous\u003c/a\u003e. The problem is that Scriptaculous relies on Prototype, and both are HUGE JavaScript libraries. Later I moved to Moo.fx/MooTools, then I didn’t do much JavaScript for a while, then I started doing a lot with YUI, while sprinkling a little jQuery around here and there. None of these other frameworks had an equivalent to \u003ccode\u003eBuilder.node()\u003c/code\u003e, and again, that sucks.\u003c/p\u003e\n\u003cp\u003eSo last night, I wrote a small JavaScript class to handle this very thing. Introducing \u003ca href=\"https://web.archive.org/web/20090227171322/http://github.com/skyzyx/dombuilder/\"\u003eDOMBuilder\u003c/a\u003e. DOMBuilder is small, fast, and doesn’t depend on any other JavaScript frameworks meaning that it’s easy to use in any project where you need to construct nested DOM elements.\u003c/p\u003e\n\u003cp\u003eThe fully commented debug version clocks in around 3k. The minified version is 739 bytes. With gzip compression, it squeezes down to a mere 393 bytes. It’s not quite as terse or elegant as I’d like (yet), but it’s a good result for about 2 hours of hacking.\u003c/p\u003e\n\u003ch2 id=\"examples\"\u003eExamples\u003c/h2\u003e\n\u003cp\u003eHere’s the HTML we want to generate:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u0026lt;\u003cspan style=\"color:#f92672\"\u003ediv\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;location_select_control\u0026#34;\u003c/span\u003e\u0026gt;\n    \u0026lt;\u003cspan style=\"color:#f92672\"\u003ea\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehref\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;location_select_label\u0026#34;\u003c/span\u003e\u0026gt;\n        \u0026lt;\u003cspan style=\"color:#f92672\"\u003elabel\u003c/span\u003e\u0026gt;This is my label\u0026lt;/\u003cspan style=\"color:#f92672\"\u003elabel\u003c/span\u003e\u0026gt;\n    \u0026lt;/\u003cspan style=\"color:#f92672\"\u003ea\u003c/span\u003e\u0026gt;\n\u0026lt;/\u003cspan style=\"color:#f92672\"\u003ediv\u003c/span\u003e\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere is how we’d do it with the standard DOM:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan style=\"color:#a6e22e\"\u003econtrol_div\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e document.\u003cspan style=\"color:#a6e22e\"\u003ecreateElement\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;div\u0026#39;\u003c/span\u003e);\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_div\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eclassName\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;location_select_control\u0026#34;\u003c/span\u003e;\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_link\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e document.\u003cspan style=\"color:#a6e22e\"\u003ecreateElement\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e);\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_link\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ehref\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e;\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_link\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eclassName\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;location_select_label\u0026#34;\u003c/span\u003e;\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_label\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e document.\u003cspan style=\"color:#a6e22e\"\u003ecreateElement\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;label\u0026#39;\u003c/span\u003e);\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_label\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003einnerHTML\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;This is my label\u0026#34;\u003c/span\u003e;\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_link\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eappendChild\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003econtrol_label\u003c/span\u003e);\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_div\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eappendChild\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003econtrol_link\u003c/span\u003e);\ndocument.\u003cspan style=\"color:#a6e22e\"\u003ebody\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eappendChild\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003econtrol_div\u003c/span\u003e);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLastly, here’s how we’d do it with DOMBuilder:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eDOMBuilder\u003c/span\u003e;\ndocument.\u003cspan style=\"color:#a6e22e\"\u003ebody\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eappendChild\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;div\u0026#39;\u003c/span\u003e, { \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;location_select_control\u0026#39;\u003c/span\u003e }).\u003cspan style=\"color:#a6e22e\"\u003echild\u003c/span\u003e(\n    \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e, { \u003cspan style=\"color:#a6e22e\"\u003ehref\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;location_select_label\u0026#39;\u003c/span\u003e }).\u003cspan style=\"color:#a6e22e\"\u003echild\u003c/span\u003e(\n        \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;label\u0026#39;\u003c/span\u003e).\u003cspan style=\"color:#a6e22e\"\u003einnerHTML\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;This is my label\u0026#39;\u003c/span\u003e)\n    )\n).\u003cspan style=\"color:#a6e22e\"\u003easDOM\u003c/span\u003e());\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"download\"\u003eDownload\u003c/h2\u003e\n\u003cp\u003eThis code is BSD licensed, so feel free to use it in personal or commercial projects. You can download it from \u003ca href=\"https://web.archive.org/web/20090227171322/http://github.com/skyzyx/dombuilder/\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n",
        "plain":"The DOM I hate the DOM. Actually, I take that back. I love the DOM, but I hate the fact that generating DOM nodes in JavaScript is so verbose and unintuitive.\nYou need to construct a new element, then add properties, then construct a child element, then add properties, then append the child to the parent, and the parent to whatever DOM object you want that’s already in the page.\nA few years ago I discovered Builder.node(), a component of Scriptaculous. The problem is that Scriptaculous relies on Prototype, and both are HUGE JavaScript libraries. Later I moved to Moo.fx/MooTools, then I didn’t do much JavaScript for a while, then I started doing a lot with YUI, while sprinkling a little jQuery around here and there. None of these other frameworks had an equivalent to Builder.node(), and again, that sucks.\nSo last night, I wrote a small JavaScript class to handle this very thing. Introducing DOMBuilder. DOMBuilder is small, fast, and doesn’t depend on any other JavaScript frameworks meaning that it’s easy to use in any project where you need to construct nested DOM elements.\nThe fully commented debug version clocks in around 3k. The minified version is 739 bytes. With gzip compression, it squeezes down to a mere 393 bytes. It’s not quite as terse or elegant as I’d like (yet), but it’s a good result for about 2 hours of hacking.\nExamples Here’s the HTML we want to generate:\n\u0026lt;div class=\u0026#34;location_select_control\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;\u0026#34; class=\u0026#34;location_select_label\u0026#34;\u0026gt; \u0026lt;label\u0026gt;This is my label\u0026lt;/label\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; Here is how we’d do it with the standard DOM:\ncontrol_div = document.createElement(\u0026#39;div\u0026#39;); control_div.className = \u0026#34;location_select_control\u0026#34;; control_link = document.createElement(\u0026#39;a\u0026#39;); control_link.href = \u0026#34;\u0026#34;; control_link.className = \u0026#34;location_select_label\u0026#34;; control_label = document.createElement(\u0026#39;label\u0026#39;); control_label.innerHTML = \u0026#34;This is my label\u0026#34;; control_link.appendChild(control_label); control_div.appendChild(control_link); document.body.appendChild(control_div); Lastly, here’s how we’d do it with DOMBuilder:\nvar _ = DOMBuilder; document.body.appendChild(_(\u0026#39;div\u0026#39;, { class:\u0026#39;location_select_control\u0026#39; }).child( _(\u0026#39;a\u0026#39;, { href:\u0026#39;\u0026#39;, class:\u0026#39;location_select_label\u0026#39; }).child( _(\u0026#39;label\u0026#39;).innerHTML(\u0026#39;This is my label\u0026#39;) ) ).asDOM()); Download This code is BSD licensed, so feel free to use it in personal or commercial projects. You can download it from GitHub.\n",
        "source":"\n## The DOM\n\nI hate the DOM. Actually, I take that back. I love the DOM, but I hate the fact that generating DOM nodes in JavaScript is so verbose and unintuitive.\n\nYou need to construct a new element, then add properties, then construct a child element, then add properties, then append the child to the parent, and the parent to whatever DOM object you want that’s already in the page.\n\nA few years ago I discovered `Builder.node()`, a component of [Scriptaculous]({{% wayback \"http://script.aculo.us\" %}}). The problem is that Scriptaculous relies on Prototype, and both are HUGE JavaScript libraries. Later I moved to Moo.fx/MooTools, then I didn’t do much JavaScript for a while, then I started doing a lot with YUI, while sprinkling a little jQuery around here and there. None of these other frameworks had an equivalent to `Builder.node()`, and again, that sucks.\n\nSo last night, I wrote a small JavaScript class to handle this very thing. Introducing [DOMBuilder]({{% wayback \"http://github.com/skyzyx/dombuilder/\" %}}). DOMBuilder is small, fast, and doesn’t depend on any other JavaScript frameworks meaning that it’s easy to use in any project where you need to construct nested DOM elements.\n\nThe fully commented debug version clocks in around 3k. The minified version is 739 bytes. With gzip compression, it squeezes down to a mere 393 bytes. It’s not quite as terse or elegant as I’d like (yet), but it’s a good result for about 2 hours of hacking.\n\n## Examples\n\nHere’s the HTML we want to generate:\n\n```html\n\u003cdiv class=\"location_select_control\"\u003e\n    \u003ca href=\"\" class=\"location_select_label\"\u003e\n        \u003clabel\u003eThis is my label\u003c/label\u003e\n    \u003c/a\u003e\n\u003c/div\u003e\n```\n\nHere is how we’d do it with the standard DOM:\n\n```javascript\ncontrol_div = document.createElement('div');\ncontrol_div.className = \"location_select_control\";\ncontrol_link = document.createElement('a');\ncontrol_link.href = \"\";\ncontrol_link.className = \"location_select_label\";\ncontrol_label = document.createElement('label');\ncontrol_label.innerHTML = \"This is my label\";\ncontrol_link.appendChild(control_label);\ncontrol_div.appendChild(control_link);\ndocument.body.appendChild(control_div);\n```\n\nLastly, here’s how we’d do it with DOMBuilder:\n\n```javascript\nvar _ = DOMBuilder;\ndocument.body.appendChild(_('div', { class:'location_select_control' }).child(\n    _('a', { href:'', class:'location_select_label' }).child(\n        _('label').innerHTML('This is my label')\n    )\n).asDOM());\n```\n\n## Download\n\nThis code is BSD licensed, so feel free to use it in personal or commercial projects. You can download it from [GitHub]({{% wayback \"http://github.com/skyzyx/dombuilder/\" %}}).\n"},
    "links": {
        "prev": {"title": "Run Internet Explorer 6 (or IE7, or IE8) images in VMware Fusion on Mac OS X", "permalink": "https://ryanparman.com/posts/2009/run-ie6-ie7-ie8-images-vmware-fusion-macosx/"},
        "next": {"title": "Those kids and their Wiis", "permalink": "https://ryanparman.com/posts/2009/those-kids-and-their-wiis/"},
        "ignore": "me"
    }
}

}
