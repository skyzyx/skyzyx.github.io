{
    "data": {
        
        "section": "posts",
        
        
        "count": 6,
        "items": [
            
            {
    "kind": "page",
    "title": "WebKit 3D CSS Transforms",
    "description": "",
    "summary": {
        "content": "I came across the following demos of the new 3D CSS Transform functionality in the latest WebKit builds. These will be making their way into Safari, Google Chrome, iPhone, and Android sometime soon. Snow Stacks Download video Image Fly Download video ",
        "isTruncated": false
    },
    "published": "2009-07-15T05:38:51Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2009/webkit-3d-css-transforms/",
    "relativePermalink": "/posts/2009/webkit-3d-css-transforms/",
    "aliases": ["/2009/07/14/webkit-3d-css-transforms/"],
    "images": [],
    "videos": [],
    "categories": ["Browsers"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 41,
        "readingTime": "1 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2009/20090715-webkit-3d-css-transforms.md",
        "logicalName": "20090715-webkit-3d-css-transforms.md",
        "translationBaseName": "20090715-webkit-3d-css-transforms",
        "baseFileName": "20090715-webkit-3d-css-transforms",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2009/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#snow-stacks\"\u003eSnow Stacks\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#image-fly\"\u003eImage Fly\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eI came across the following demos of the new 3D CSS Transform functionality in the latest WebKit builds. These will be making their way into Safari, Google Chrome, iPhone, and Android sometime soon.\u003c/p\u003e\n\u003ch2 id=\"snow-stacks\"\u003eSnow Stacks\u003c/h2\u003e\n\u003cvideo controls width=\"100%\"\u003e\n    \u003csource src=\"https://s3.amazonaws.com/s3.ryanparman.com/videos/safari_snowstacks.mp4\" type=\"video/mp4\"\u003e\n    \u003ca href=\"https://s3.amazonaws.com/s3.ryanparman.com/videos/safari_snowstacks.mp4\"\u003eDownload video\u003c/a\u003e\n\u003c/video\u003e\n\u003ch2 id=\"image-fly\"\u003eImage Fly\u003c/h2\u003e\n\u003cvideo controls width=\"100%\"\u003e\n    \u003csource src=\"https://s3.amazonaws.com/s3.ryanparman.com/videos/safari_imagefly.mp4\" type=\"video/mp4\"\u003e\n    \u003ca href=\"https://s3.amazonaws.com/s3.ryanparman.com/videos/safari_imagefly.mp4\"\u003eDownload video\u003c/a\u003e\n\u003c/video\u003e\n",
        "plain":"I came across the following demos of the new 3D CSS Transform functionality in the latest WebKit builds. These will be making their way into Safari, Google Chrome, iPhone, and Android sometime soon.\nSnow Stacks Download video  Image Fly Download video  ",
        "source":"\nI came across the following demos of the new 3D CSS Transform functionality in the latest WebKit builds. These will be making their way into Safari, Google Chrome, iPhone, and Android sometime soon.\n\n## Snow Stacks\n\n\u003cvideo controls width=\"100%\"\u003e\n    \u003csource src=\"https://s3.amazonaws.com/s3.ryanparman.com/videos/safari_snowstacks.mp4\" type=\"video/mp4\"\u003e\n    \u003ca href=\"https://s3.amazonaws.com/s3.ryanparman.com/videos/safari_snowstacks.mp4\"\u003eDownload video\u003c/a\u003e\n\u003c/video\u003e\n\n## Image Fly\n\n\u003cvideo controls width=\"100%\"\u003e\n    \u003csource src=\"https://s3.amazonaws.com/s3.ryanparman.com/videos/safari_imagefly.mp4\" type=\"video/mp4\"\u003e\n    \u003ca href=\"https://s3.amazonaws.com/s3.ryanparman.com/videos/safari_imagefly.mp4\"\u003eDownload video\u003c/a\u003e\n\u003c/video\u003e\n"},
    "links": {
        "prev": {"title": "Installing PHP 5.3 with mysqlnd on Mac OS X with MacPorts", "permalink": "https://ryanparman.com/posts/2009/installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports/"},
        "next": {"title": "Movie Review: Avatar", "permalink": "https://ryanparman.com/posts/2010/movie-review-avatar/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Installing PHP 5.3 with mysqlnd on Mac OS X with MacPorts",
    "description": "",
    "summary": {
        "content": "Historically, I’ve always preferred to use Apple’s built-in Apache 2.2 and PHP 5.x that comes with Leopard. However, after trying to compile PHP 5.3 from scratch and connect it with Apache, I decided to just use the MacPorts installer instead. That did mean giving up control of a finely-tuned Apache installation, but in the end, I think I’ve ended up with a better localhost system. Prerequisites Install MacPorts Also, make sure that your MacPorts install is completely up-to-date with:",
        "isTruncated": true
    },
    "published": "2009-07-11T20:33:44Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2009/installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports/",
    "relativePermalink": "/posts/2009/installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports/",
    "aliases": ["/2009/07/11/installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports/"],
    "images": [],
    "videos": [],
    "categories": ["Projects and Code"],
    "tags": [],
    "series": ["Editors Choice"],
    "keywords": [],
    "meta": {
        "wordCount": 716,
        "readingTime": "4 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2009/20090711-installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports.md",
        "logicalName": "20090711-installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports.md",
        "translationBaseName": "20090711-installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports",
        "baseFileName": "20090711-installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2009/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#prerequisites\"\u003ePrerequisites\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installation\"\u003eInstallation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#extra-stuff\"\u003eExtra stuff\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#replacing-older-versions\"\u003eReplacing older versions\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#shortcuts\"\u003eShortcuts\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eHistorically, I’ve always preferred to use Apple’s built-in Apache 2.2 and PHP 5.x that comes with Leopard. However, after trying to compile PHP 5.3 from scratch and connect it with Apache, I decided to just use the \u003ca href=\"https://web.archive.org/web/20090711203344/http://www.macports.org/install.php\"\u003eMacPorts\u003c/a\u003e installer instead. That did mean giving up control of a finely-tuned Apache installation, but in the end, I think I’ve ended up with a better localhost system.\u003c/p\u003e\n\u003ch2 id=\"prerequisites\"\u003ePrerequisites\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eInstall \u003ca href=\"https://web.archive.org/web/20090711203344/http://www.macports.org/install.php\"\u003eMacPorts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAlso, make sure that your MacPorts install is completely up-to-date with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo port -d selfupdate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"installation\"\u003eInstallation\u003c/h2\u003e\n\u003cp\u003eNow, I’ve never used MacPorts to install PHP or Apache before, so I’m starting with a clean slate. If you’ve already installed PHP or Apache with MacPorts, your steps may be different. As always, your mileage may vary. For me, I develop several open-source projects, so I need things that others may not. Adjust these steps as necessary.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eUsing “Web Sharing” in your Sharing Preferences should be turned off. Currently this points to the (old) Apple Apache installation, although we’ll change that later.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFrom Terminal, install PHP 5.3 + Apache, and some other stuff. This will likely take quite a while. I’m installing SQLite, MySQL, and PostgreSQL because of my work on \u003ca href=\"https://web.archive.org/web/20090711203344/http://cachecore.googlecode.com\"\u003eCacheCore\u003c/a\u003e, so you may or may not need those. \u003ccode\u003emysqlnd\u003c/code\u003e is the new PHP Native Driver for MySQL and is supposed to be better, so we’ll use that. We also need to enable non-default settings for cURL.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo port install curl +ssl+ipv6+ares+idn+gss+openldap+sftp_scp \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ephp5 +apache2+fastcgi+pear\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eYou can see all available options by running \u003ccode\u003eport variants php5\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe new Apache configuration file is stored at \u003ccode\u003e/opt/local/apache2/conf/httpd.conf\u003c/code\u003e while the old one was at \u003ccode\u003e/etc/apache2/conf/httpd.conf\u003c/code\u003e. Take a moment to copy over any settings you’ll want to maintain into the new Apache installation.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eYou’ll also want to include your \u003cem\u003eextra\u003c/em\u003e settings. Toward the bottom of your \u003ccode\u003ehttpd.conf\u003c/code\u003e file, add the following line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-apache\" data-lang=\"apache\"\u003e\u003cspan style=\"color:#75715e\"\u003e# All settings\u003c/span\u003e\nInclude conf/extra/*.conf\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you \u003cstrong\u003edon’t\u003c/strong\u003e have an SSL certificate, rename your SSL configuration:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecd /opt/local/apache2\nsudo mv conf/extra/httpd-ssl.conf conf/extra/httpd-ssl.conf-disabled\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eYou’ll also want to enable PHP in Apache:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo mv conf/extras-conf/mod_php.conf conf/extra/mod_php.conf\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe new PHP configuration file is stored at \u003ccode\u003e/opt/local/etc/php5/php.ini\u003c/code\u003e while the old one was at \u003ccode\u003e/etc/php.ini\u003c/code\u003e. Take a moment to copy over any settings you’ll want to maintain into the new PHP installation.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eYou’ll need to tell Apache to enable PHP support. Open your new \u003ccode\u003ehttpd.conf\u003c/code\u003e file, find where the extensions are loaded (with \u003ccode\u003eLoadModule\u003c/code\u003e), and add this to the end of the line:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-apache\" data-lang=\"apache\"\u003eLoadModule php5_module modules/libphp5.so\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRestart Apache. If you were using \u003ccode\u003eapachectl\u003c/code\u003e before, it still points to the old Apache, so we’ll want to point specifically to the new one.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo /opt/local/apache2/bin/apachectl restart\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eAt this point, PHP 5.3 with Apache 2.2 and the new \u003ccode\u003emysqlnd\u003c/code\u003e extension are all installed.\u003c/p\u003e\n\u003ch2 id=\"extra-stuff\"\u003eExtra stuff\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eI generally prefer to have lots more stuff installed locally so that I can worry more about developing and less about installing. Because of this, I also install a few other things.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo port install memcached \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-apc \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-curl \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-gd \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-http \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-iconv \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-imagick \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-mbstring \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-memcache \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-mysql \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-openssl \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-postgresql \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-sockets \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-sqlite \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-tidy \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    php5-xdebug \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRestart Apache with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo /opt/local/apache2/bin/apachectl restart\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"replacing-older-versions\"\u003eReplacing older versions\u003c/h2\u003e\n\u003cp\u003eNow, we want to continue using our command-line PHP scripts and the “Web Sharing” checkbox in the Sharing Preference Pane, so let’s make sure that those are all pointing to the new locations instead. We’ll be backing up and redirecting \u003ccode\u003ephp\u003c/code\u003e, \u003ccode\u003eapachectl\u003c/code\u003e, and \u003ccode\u003ehttpd\u003c/code\u003e.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eOpen up your Sharing Preference Pane, and disable Web Sharing\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRun the following command on the Terminal:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo mv /usr/bin/php /usr/bin/php.bak \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo ln -s /opt/local/bin/php /usr/bin/php; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo mv /usr/sbin/apachectl /usr/sbin/apachectl.bak \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo ln -s /opt/local/apache2/bin/apachectl /usr/sbin/apachectl; \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo mv /usr/sbin/httpd /usr/sbin/httpd.bak \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo ln -s /opt/local/apache2/bin/httpd /usr/sbin/httpd;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRe-enable Web Sharing in the preference pane.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"shortcuts\"\u003eShortcuts\u003c/h2\u003e\n\u003cp\u003eLastly, I like to set up some shortcuts so that I can access all of my important localhost stuff from one place. I’ll create a new directory called \u003ccode\u003ewww-config\u003c/code\u003e and then I’ll place symlinks into it for quick access to Apache and PHP configuration files.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo mkdir /www-config \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003ecd /www-config \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo ln -s /opt/local/apache2/bin/apachectl /www-config/apachectl \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo ln -s /opt/local/apache2/conf/ /www-config/httpd-conf \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo ln -s /opt/local/apache2/logs/ /www-config/logs \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo ln -s /opt/local/var/db/php5/ /www-config/php-ini \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003esudo ln -s /opt/local/etc/php5/php.ini /www-config/php.ini\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e",
        "plain":"Historically, I’ve always preferred to use Apple’s built-in Apache 2.2 and PHP 5.x that comes with Leopard. However, after trying to compile PHP 5.3 from scratch and connect it with Apache, I decided to just use the MacPorts installer instead. That did mean giving up control of a finely-tuned Apache installation, but in the end, I think I’ve ended up with a better localhost system.\nPrerequisites  Install MacPorts  Also, make sure that your MacPorts install is completely up-to-date with:\nsudo port -d selfupdate Installation Now, I’ve never used MacPorts to install PHP or Apache before, so I’m starting with a clean slate. If you’ve already installed PHP or Apache with MacPorts, your steps may be different. As always, your mileage may vary. For me, I develop several open-source projects, so I need things that others may not. Adjust these steps as necessary.\n  Using “Web Sharing” in your Sharing Preferences should be turned off. Currently this points to the (old) Apple Apache installation, although we’ll change that later.\n  From Terminal, install PHP 5.3 + Apache, and some other stuff. This will likely take quite a while. I’m installing SQLite, MySQL, and PostgreSQL because of my work on CacheCore, so you may or may not need those. mysqlnd is the new PHP Native Driver for MySQL and is supposed to be better, so we’ll use that. We also need to enable non-default settings for cURL.\nsudo port install curl +ssl+ipv6+ares+idn+gss+openldap+sftp_scp \\ php5 +apache2+fastcgi+pear You can see all available options by running port variants php5.\n  The new Apache configuration file is stored at /opt/local/apache2/conf/httpd.conf while the old one was at /etc/apache2/conf/httpd.conf. Take a moment to copy over any settings you’ll want to maintain into the new Apache installation.\n  You’ll also want to include your extra settings. Toward the bottom of your httpd.conf file, add the following line:\n# All settings Include conf/extra/*.conf   If you don’t have an SSL certificate, rename your SSL configuration:\ncd /opt/local/apache2 sudo mv conf/extra/httpd-ssl.conf conf/extra/httpd-ssl.conf-disabled   You’ll also want to enable PHP in Apache:\nsudo mv conf/extras-conf/mod_php.conf conf/extra/mod_php.conf   The new PHP configuration file is stored at /opt/local/etc/php5/php.ini while the old one was at /etc/php.ini. Take a moment to copy over any settings you’ll want to maintain into the new PHP installation.\n  You’ll need to tell Apache to enable PHP support. Open your new httpd.conf file, find where the extensions are loaded (with LoadModule), and add this to the end of the line:\nLoadModule php5_module modules/libphp5.so   Restart Apache. If you were using apachectl before, it still points to the old Apache, so we’ll want to point specifically to the new one.\nsudo /opt/local/apache2/bin/apachectl restart   At this point, PHP 5.3 with Apache 2.2 and the new mysqlnd extension are all installed.\nExtra stuff   I generally prefer to have lots more stuff installed locally so that I can worry more about developing and less about installing. Because of this, I also install a few other things.\nsudo port install memcached \\  php5-apc \\  php5-curl \\  php5-gd \\  php5-http \\  php5-iconv \\  php5-imagick \\  php5-mbstring \\  php5-memcache \\  php5-mysql \\  php5-openssl \\  php5-postgresql \\  php5-sockets \\  php5-sqlite \\  php5-tidy \\  php5-xdebug \\ ;   Restart Apache with:\nsudo /opt/local/apache2/bin/apachectl restart   Replacing older versions Now, we want to continue using our command-line PHP scripts and the “Web Sharing” checkbox in the Sharing Preference Pane, so let’s make sure that those are all pointing to the new locations instead. We’ll be backing up and redirecting php, apachectl, and httpd.\n  Open up your Sharing Preference Pane, and disable Web Sharing\n  Run the following command on the Terminal:\nsudo mv /usr/bin/php /usr/bin/php.bak \u0026amp;\u0026amp; sudo ln -s /opt/local/bin/php /usr/bin/php; \\ sudo mv /usr/sbin/apachectl /usr/sbin/apachectl.bak \u0026amp;\u0026amp; sudo ln -s /opt/local/apache2/bin/apachectl /usr/sbin/apachectl; \\ sudo mv /usr/sbin/httpd /usr/sbin/httpd.bak \u0026amp;\u0026amp; sudo ln -s /opt/local/apache2/bin/httpd /usr/sbin/httpd;   Re-enable Web Sharing in the preference pane.\n  Shortcuts Lastly, I like to set up some shortcuts so that I can access all of my important localhost stuff from one place. I’ll create a new directory called www-config and then I’ll place symlinks into it for quick access to Apache and PHP configuration files.\nsudo mkdir /www-config \u0026amp;\u0026amp; \\ cd /www-config \u0026amp;\u0026amp; \\ sudo ln -s /opt/local/apache2/bin/apachectl /www-config/apachectl \u0026amp;\u0026amp; \\ sudo ln -s /opt/local/apache2/conf/ /www-config/httpd-conf \u0026amp;\u0026amp; \\ sudo ln -s /opt/local/apache2/logs/ /www-config/logs \u0026amp;\u0026amp; \\ sudo ln -s /opt/local/var/db/php5/ /www-config/php-ini \u0026amp;\u0026amp; \\ sudo ln -s /opt/local/etc/php5/php.ini /www-config/php.ini ",
        "source":"\nHistorically, I’ve always preferred to use Apple’s built-in Apache 2.2 and PHP 5.x that comes with Leopard. However, after trying to compile PHP 5.3 from scratch and connect it with Apache, I decided to just use the [MacPorts]({{% wayback \"http://www.macports.org/install.php\" %}}) installer instead. That did mean giving up control of a finely-tuned Apache installation, but in the end, I think I’ve ended up with a better localhost system.\n\n## Prerequisites\n\n* Install [MacPorts]({{% wayback \"http://www.macports.org/install.php\" %}})\n\nAlso, make sure that your MacPorts install is completely up-to-date with:\n\n```bash\nsudo port -d selfupdate\n```\n\n## Installation\n\nNow, I’ve never used MacPorts to install PHP or Apache before, so I’m starting with a clean slate. If you’ve already installed PHP or Apache with MacPorts, your steps may be different. As always, your mileage may vary. For me, I develop several open-source projects, so I need things that others may not. Adjust these steps as necessary.\n\n1. Using “Web Sharing” in your Sharing Preferences should be turned off. Currently this points to the (old) Apple Apache installation, although we’ll change that later.\n\n2. From Terminal, install PHP 5.3 + Apache, and some other stuff. This will likely take quite a while. I’m installing SQLite, MySQL, and PostgreSQL because of my work on [CacheCore]({{% wayback \"http://cachecore.googlecode.com\" %}}), so you may or may not need those. `mysqlnd` is the new PHP Native Driver for MySQL and is supposed to be better, so we’ll use that. We also need to enable non-default settings for cURL.\n\n    ```bash\n    sudo port install curl +ssl+ipv6+ares+idn+gss+openldap+sftp_scp \\\n    php5 +apache2+fastcgi+pear\n    ```\n\n    You can see all available options by running `port variants php5`.\n\n3. The new Apache configuration file is stored at `/opt/local/apache2/conf/httpd.conf` while the old one was at `/etc/apache2/conf/httpd.conf`. Take a moment to copy over any settings you’ll want to maintain into the new Apache installation.\n\n4. You’ll also want to include your *extra* settings. Toward the bottom of your `httpd.conf` file, add the following line:\n\n    ```apache\n    # All settings\n    Include conf/extra/*.conf\n    ```\n\n5. If you **don’t** have an SSL certificate, rename your SSL configuration:\n\n    ```bash\n    cd /opt/local/apache2\n    sudo mv conf/extra/httpd-ssl.conf conf/extra/httpd-ssl.conf-disabled\n    ```\n\n6. You’ll also want to enable PHP in Apache:\n\n    ```bash\n    sudo mv conf/extras-conf/mod_php.conf conf/extra/mod_php.conf\n    ```\n\n7. The new PHP configuration file is stored at `/opt/local/etc/php5/php.ini` while the old one was at `/etc/php.ini`. Take a moment to copy over any settings you’ll want to maintain into the new PHP installation.\n\n8. You’ll need to tell Apache to enable PHP support. Open your new `httpd.conf` file, find where the extensions are loaded (with `LoadModule`), and add this to the end of the line:\n\n    ```apache\n    LoadModule php5_module modules/libphp5.so\n    ```\n\n9. Restart Apache. If you were using `apachectl` before, it still points to the old Apache, so we’ll want to point specifically to the new one.\n\n    ```bash\n    sudo /opt/local/apache2/bin/apachectl restart\n    ```\n\nAt this point, PHP 5.3 with Apache 2.2 and the new `mysqlnd` extension are all installed.\n\n## Extra stuff\n\n1. I generally prefer to have lots more stuff installed locally so that I can worry more about developing and less about installing. Because of this, I also install a few other things.\n\n    ```bash\n    sudo port install memcached \\\n        php5-apc \\\n        php5-curl \\\n        php5-gd \\\n        php5-http \\\n        php5-iconv \\\n        php5-imagick \\\n        php5-mbstring \\\n        php5-memcache \\\n        php5-mysql \\\n        php5-openssl \\\n        php5-postgresql \\\n        php5-sockets \\\n        php5-sqlite \\\n        php5-tidy \\\n        php5-xdebug \\\n    ;\n    ```\n\n2. Restart Apache with:\n\n    ```bash\n    sudo /opt/local/apache2/bin/apachectl restart\n    ```\n\n## Replacing older versions\n\nNow, we want to continue using our command-line PHP scripts and the “Web Sharing” checkbox in the Sharing Preference Pane, so let’s make sure that those are all pointing to the new locations instead. We’ll be backing up and redirecting `php`, `apachectl`, and `httpd`.\n\n1. Open up your Sharing Preference Pane, and disable Web Sharing\n\n2. Run the following command on the Terminal:\n\n    ```bash\n    sudo mv /usr/bin/php /usr/bin/php.bak \u0026\u0026 sudo ln -s /opt/local/bin/php /usr/bin/php; \\\n    sudo mv /usr/sbin/apachectl /usr/sbin/apachectl.bak \u0026\u0026 sudo ln -s /opt/local/apache2/bin/apachectl /usr/sbin/apachectl; \\\n    sudo mv /usr/sbin/httpd /usr/sbin/httpd.bak \u0026\u0026 sudo ln -s /opt/local/apache2/bin/httpd /usr/sbin/httpd;\n    ```\n\n3. Re-enable Web Sharing in the preference pane.\n\n## Shortcuts\n\nLastly, I like to set up some shortcuts so that I can access all of my important localhost stuff from one place. I’ll create a new directory called `www-config` and then I’ll place symlinks into it for quick access to Apache and PHP configuration files.\n\n```bash\nsudo mkdir /www-config \u0026\u0026 \\\ncd /www-config \u0026\u0026 \\\nsudo ln -s /opt/local/apache2/bin/apachectl /www-config/apachectl \u0026\u0026 \\\nsudo ln -s /opt/local/apache2/conf/ /www-config/httpd-conf \u0026\u0026 \\\nsudo ln -s /opt/local/apache2/logs/ /www-config/logs \u0026\u0026 \\\nsudo ln -s /opt/local/var/db/php5/ /www-config/php-ini \u0026\u0026 \\\nsudo ln -s /opt/local/etc/php5/php.ini /www-config/php.ini\n```\n"},
    "links": {
        "prev": {"title": "Run Internet Explorer 6 (or IE7, or IE8) images in VirtualBox on Mac OS X", "permalink": "https://ryanparman.com/posts/2009/run-ie6-ie7-ie8-images-virtualbox-macosx/"},
        "next": {"title": "WebKit 3D CSS Transforms", "permalink": "https://ryanparman.com/posts/2009/webkit-3d-css-transforms/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Run Internet Explorer 6 (or IE7, or IE8) images in VirtualBox on Mac OS X",
    "description": "",
    "summary": {
        "content": "These days I’m looking to save money anywhere I can. How about you? Whereas VMWare Fusion (as awesome as it is) runs around $80 USD per copy, Sun’s VirtualBox is a free, open-source product for virtualization that runs on Mac OS X, Linux, and Windows. Update: Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at MSDN. If you’ve not yet read the related post, \u0026ldquo;Run Internet Explorer 6 (or IE7, or IE8) images in VMWare Fusion on Mac OS X, you should.",
        "isTruncated": true
    },
    "published": "2009-07-01T04:33:14Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2009/run-ie6-ie7-ie8-images-virtualbox-macosx/",
    "relativePermalink": "/posts/2009/run-ie6-ie7-ie8-images-virtualbox-macosx/",
    "aliases": ["/2009/06/30/run-ie6-ie7-ie8-images-virtualbox-macosx/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 962,
        "readingTime": "5 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2009/20090701-run-ie6-ie7-ie8-images-virtualbox-macosx.md",
        "logicalName": "20090701-run-ie6-ie7-ie8-images-virtualbox-macosx.md",
        "translationBaseName": "20090701-run-ie6-ie7-ie8-images-virtualbox-macosx",
        "baseFileName": "20090701-run-ie6-ie7-ie8-images-virtualbox-macosx",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2009/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#prerequisites\"\u003ePrerequisites\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#downloading-and-preparing-stuff\"\u003eDownloading and Preparing stuff\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#extracting-the-disk-image\"\u003eExtracting the disk image\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#converting-the-vmware-image-to-a-virtualbox-image-optional\"\u003eConverting the VMWare image to a VirtualBox image (Optional)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#configuring-the-vm\"\u003eConfiguring the VM\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installing-the-drivers-and-guest-additions\"\u003eInstalling the drivers and Guest Additions\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#done\"\u003eDone!\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eThese days I’m looking to save money anywhere I can. How about you? Whereas VMWare Fusion (as awesome as it is) runs around $80 USD per copy, Sun’s VirtualBox is a free, open-source product for virtualization that runs on Mac OS X, Linux, and Windows.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUpdate:\u003c/strong\u003e Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at \u003ca href=\"https://web.archive.org/web/20090701043314/http://blogs.msdn.com/petel/archive/2009/09/09/running-the-ie-vpc-s-on-other-vpc-hosts.aspx\"\u003eMSDN\u003c/a\u003e. If you’ve not yet read the related post, \u0026ldquo;\u003ca href=\"/2009/01/07/run-ie6-ie7-ie8-images-vmware-fusion-macosx/\"\u003eRun Internet Explorer 6 (or IE7, or IE8) images in VMWare Fusion on Mac OS X\u003c/a\u003e, you should. This is a follow up on how to take those virtual machines (which we’ve already done a lot of work on), and convert them for use VirtualBox.\u003c/p\u003e\n\u003ch2 id=\"prerequisites\"\u003ePrerequisites\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eYou need to have access to a Mac OS X machine.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA broadband connection would be quite helpful.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA USB flash drive (or some other way to copy files to the VM before you have network access enabled).\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eVMWare Fusion uses the \u003ccode\u003e.vmdk\u003c/code\u003e disk format for its virtual drives. VirtualBox uses the \u003ccode\u003e.vdi\u003c/code\u003e format. Although VirtualBox can use the existing \u003ccode\u003e.vmdk\u003c/code\u003e images, you get better performance if you convert them to \u003ccode\u003e.vdi\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"downloading-and-preparing-stuff\"\u003eDownloading and Preparing stuff\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eDownload and install \u003ca href=\"https://web.archive.org/web/20090701043314/http://www.virtualbox.org/wiki/Downloads\"\u003eVirtualBox\u003c/a\u003e. It should live in the \u003ccode\u003e/Applications\u003c/code\u003e directory.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDownload and install \u003ca href=\"https://web.archive.org/web/20090701043314/http://www.kju-app.org\"\u003eQ\u003c/a\u003e (a Mac version of \u003ca href=\"https://web.archive.org/web/20090701043314/http://qemu.org\"\u003eQemu\u003c/a\u003e). It should live in the \u003ccode\u003e/Applications\u003c/code\u003e directory.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDownload and decompress an \u003ca href=\"https://web.archive.org/web/20090701043314/http://cdn.ryanparman.com/ie6-xpsp3.tar.gz\"\u003eIE6\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20090701043314/http://cdn.ryanparman.com/ie7-xpsp3.tar.gz\"\u003eIE7\u003c/a\u003e, or \u003ca href=\"https://web.archive.org/web/20090701043314/http://cdn.ryanparman.com/ie8-xpsp3.tar.gz\"\u003eIE8\u003c/a\u003e VMWare Fusion image that I’ve posted previously. If you need ALL of them, you can save yourself the bandwidth by downloading the IE6 image, making a copy of the file, and upgrading that copy to IE7 or IE8.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"extracting-the-disk-image\"\u003eExtracting the disk image\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eWhen you decompress the VMWare Fusion image, you should end up with a folder containing 3 files: Two text files, and a \u003ccode\u003e.vmware\u003c/code\u003e file.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRight-click (or command-click) the \u003ccode\u003e.vmware\u003c/code\u003e file and choose “Show package contents.” This will open up a new window.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFind the \u003ccode\u003e.vmdk\u003c/code\u003e file and drag it some place that’s easy to find. In this tutorial, we’ll use the desktop.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"converting-the-vmware-image-to-a-virtualbox-image-optional\"\u003eConverting the VMWare image to a VirtualBox image (Optional)\u003c/h2\u003e\n\u003cp\u003eThis step is optional. VirtualBox can read the VMWare Fusion disk image format if you’re short on time. However, you get better performance if you convert to the native VirtualBox format.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eFire up \u003ccode\u003eTerminal.app\u003c/code\u003e. It lives inside your \u003ccode\u003e/Applications/Utilities\u003c/code\u003e directory.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMove to your desktop directory:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecd ~/Desktop\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWe’ll convert the \u003ccode\u003e.vmdk\u003c/code\u003e file into a raw hard drive file, then convert that raw file into the native \u003ccode\u003e.vdi\u003c/code\u003e format:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e/Applications/Q.app/Contents/MacOS/qemu-img convert -O raw IE6-XP.vmdk IE6-XP.raw \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e/Applications/VirtualBox.app/Contents/MacOS/VBoxManage convertdd IE6-XP.raw IE6-XP.vdi \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003erm IE6-XP.raw\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWait. Depending on your computer, this will probably take 20–45 minutes.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOnce it’s done, you can delete the \u003ccode\u003eIE6-XP.vmdk\u003c/code\u003e file.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"configuring-the-vm\"\u003eConfiguring the VM\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eMove the new \u003ccode\u003e.vdi\u003c/code\u003e file to wherever you’ll want your virtual machines to live.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLaunch VirtualBox. You’ll be presented with the “Welcome to VirtualBox” dialog.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick “New.” A “Create new virtual machine” dialog box will pop up. Click “Next.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eName your virtual machine. I named mine “IE6-XP.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOperating system is “Microsoft Windows.” Version is “Windows XP.” Click “Next.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDetermine the amount of RAM you want to allow the virtual machine to use. I have 4 GB of RAM, so I allow 512 MB. Adjust as necessary, but I wouldn’t go below 192 MB. Click “Next.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eHere, you select the disk image to use. Choose “Use existing hard disk.” There is a pull-down menu that says “\u0026lt;no media\u0026gt;”. Click the icon to the right of it.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe “Virtual Media Manager” dialog should pop up. Click “Add.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFind where you saved the \u003ccode\u003e.vdi\u003c/code\u003e file to, and select it. Once that’s done, click the “Select” button. This will close the Virtual Media Manager\u0026rdquo; dialog.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eBack on the “Create new virtual machine” dialog, the pull-down menu that used to say “\u0026lt;no media\u0026gt;” should now say something along the lines of “IE6-XP.vdi (Normal, 16.00 GB).” Click “Next,” then “Finish.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFrom there, click “Settings” along the top of the application.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick the “Audio” tab, and deselect “Enable audio.” We don’t have the drivers for this, so we’ll save ourselves the nag-ware.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick the “Network” tab, and choose “Intel PRO/1000 MT Desktop” from the Adapter Type pull-down.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLeave everything else as default, and click OK.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick “Start” along the top of the application to start the virtual machine.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"installing-the-drivers-and-guest-additions\"\u003eInstalling the drivers and Guest Additions\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eWhen the virtual machine starts, the viewport will be very small. Windows also may be asking you to find drivers. Make it go away for now.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the “Devices” menu, choose “Install Guest Additions.” This will load a virtual CD-ROM.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe setup should begin automatically. If it doesn’t, go to the Start Menu, choose “My Computer,” then double-click on “VirtualBox Guest Additions.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eGo through the process and install the software, then restart your VM.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWhile that restarts, switch back to Mac OS X and download the driver for the \u003ca href=\"https://web.archive.org/web/20090701043314/http://downloadcenter.intel.com/Detail_Desc.aspx?agr=N\u0026amp;DwnldId=8659\u0026amp;lang=eng\"\u003eIntel PRO/1000 MT\u003c/a\u003e ethernet card. Download the version for Windows XP (32-bit). Copy it to your USB flash drive.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWhen the virtual machine comes back up, you’ll need to connect your USB flash drive to your virtual machine. To do this, you’ll need to drag the flash drive icon to the trash from Mac OS X (but leave it physically connected). In VirtualBox, go to the menubar and choose \u003cem\u003eDevices\u003c/em\u003e → \u003cem\u003eUSB Devices\u003c/em\u003e → \u003cem\u003eUSB Flash Drive\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNavigate to the installer on your flash drive, and install the Intel drivers.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLastly, go to \u003cem\u003eStart Menu\u003c/em\u003e → \u003cem\u003eRun\u003c/em\u003e, then in the dialog type the following so that you can keep the additional drivers on your VM:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-plain\" data-lang=\"plain\"\u003eD:\\VBoxWindowsAdditions-x86.exe /extract /D=C:\\Drivers\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"done\"\u003eDone!\u003c/h2\u003e\n\u003cp\u003eYou should be all set! If you want to get all super-hacky, you can check out \u0026ldquo;\u003ca href=\"https://web.archive.org/web/20090701043314/http://www.peculier.com/blog/create-ie-vbox.html\"\u003eCreate IE VBox\u003c/a\u003e\u0026rdquo; for geekier details.\u003c/p\u003e\n",
        "plain":"These days I’m looking to save money anywhere I can. How about you? Whereas VMWare Fusion (as awesome as it is) runs around $80 USD per copy, Sun’s VirtualBox is a free, open-source product for virtualization that runs on Mac OS X, Linux, and Windows.\nUpdate: Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at MSDN. If you’ve not yet read the related post, \u0026ldquo;Run Internet Explorer 6 (or IE7, or IE8) images in VMWare Fusion on Mac OS X, you should. This is a follow up on how to take those virtual machines (which we’ve already done a lot of work on), and convert them for use VirtualBox.\nPrerequisites   You need to have access to a Mac OS X machine.\n  A broadband connection would be quite helpful.\n  A USB flash drive (or some other way to copy files to the VM before you have network access enabled).\n  VMWare Fusion uses the .vmdk disk format for its virtual drives. VirtualBox uses the .vdi format. Although VirtualBox can use the existing .vmdk images, you get better performance if you convert them to .vdi.\nDownloading and Preparing stuff   Download and install VirtualBox. It should live in the /Applications directory.\n  Download and install Q (a Mac version of Qemu). It should live in the /Applications directory.\n  Download and decompress an IE6, IE7, or IE8 VMWare Fusion image that I’ve posted previously. If you need ALL of them, you can save yourself the bandwidth by downloading the IE6 image, making a copy of the file, and upgrading that copy to IE7 or IE8.\n  Extracting the disk image   When you decompress the VMWare Fusion image, you should end up with a folder containing 3 files: Two text files, and a .vmware file.\n  Right-click (or command-click) the .vmware file and choose “Show package contents.” This will open up a new window.\n  Find the .vmdk file and drag it some place that’s easy to find. In this tutorial, we’ll use the desktop.\n  Converting the VMWare image to a VirtualBox image (Optional) This step is optional. VirtualBox can read the VMWare Fusion disk image format if you’re short on time. However, you get better performance if you convert to the native VirtualBox format.\n  Fire up Terminal.app. It lives inside your /Applications/Utilities directory.\n  Move to your desktop directory:\ncd ~/Desktop   We’ll convert the .vmdk file into a raw hard drive file, then convert that raw file into the native .vdi format:\n/Applications/Q.app/Contents/MacOS/qemu-img convert -O raw IE6-XP.vmdk IE6-XP.raw \u0026amp;\u0026amp; \\ /Applications/VirtualBox.app/Contents/MacOS/VBoxManage convertdd IE6-XP.raw IE6-XP.vdi \u0026amp;\u0026amp; \\ rm IE6-XP.raw   Wait. Depending on your computer, this will probably take 20–45 minutes.\n  Once it’s done, you can delete the IE6-XP.vmdk file.\n  Configuring the VM   Move the new .vdi file to wherever you’ll want your virtual machines to live.\n  Launch VirtualBox. You’ll be presented with the “Welcome to VirtualBox” dialog.\n  Click “New.” A “Create new virtual machine” dialog box will pop up. Click “Next.”\n  Name your virtual machine. I named mine “IE6-XP.”\n  Operating system is “Microsoft Windows.” Version is “Windows XP.” Click “Next.”\n  Determine the amount of RAM you want to allow the virtual machine to use. I have 4 GB of RAM, so I allow 512 MB. Adjust as necessary, but I wouldn’t go below 192 MB. Click “Next.”\n  Here, you select the disk image to use. Choose “Use existing hard disk.” There is a pull-down menu that says “\u0026lt;no media\u0026gt;”. Click the icon to the right of it.\n  The “Virtual Media Manager” dialog should pop up. Click “Add.”\n  Find where you saved the .vdi file to, and select it. Once that’s done, click the “Select” button. This will close the Virtual Media Manager\u0026rdquo; dialog.\n  Back on the “Create new virtual machine” dialog, the pull-down menu that used to say “\u0026lt;no media\u0026gt;” should now say something along the lines of “IE6-XP.vdi (Normal, 16.00 GB).” Click “Next,” then “Finish.”\n  From there, click “Settings” along the top of the application.\n  Click the “Audio” tab, and deselect “Enable audio.” We don’t have the drivers for this, so we’ll save ourselves the nag-ware.\n  Click the “Network” tab, and choose “Intel PRO/1000 MT Desktop” from the Adapter Type pull-down.\n  Leave everything else as default, and click OK.\n  Click “Start” along the top of the application to start the virtual machine.\n  Installing the drivers and Guest Additions   When the virtual machine starts, the viewport will be very small. Windows also may be asking you to find drivers. Make it go away for now.\n  In the “Devices” menu, choose “Install Guest Additions.” This will load a virtual CD-ROM.\n  The setup should begin automatically. If it doesn’t, go to the Start Menu, choose “My Computer,” then double-click on “VirtualBox Guest Additions.”\n  Go through the process and install the software, then restart your VM.\n  While that restarts, switch back to Mac OS X and download the driver for the Intel PRO/1000 MT ethernet card. Download the version for Windows XP (32-bit). Copy it to your USB flash drive.\n  When the virtual machine comes back up, you’ll need to connect your USB flash drive to your virtual machine. To do this, you’ll need to drag the flash drive icon to the trash from Mac OS X (but leave it physically connected). In VirtualBox, go to the menubar and choose Devices → USB Devices → USB Flash Drive.\n  Navigate to the installer on your flash drive, and install the Intel drivers.\n  Lastly, go to Start Menu → Run, then in the dialog type the following so that you can keep the additional drivers on your VM:\nD:\\VBoxWindowsAdditions-x86.exe /extract /D=C:\\Drivers   Done! You should be all set! If you want to get all super-hacky, you can check out \u0026ldquo;Create IE VBox\u0026rdquo; for geekier details.\n",
        "source":"\nThese days I’m looking to save money anywhere I can. How about you? Whereas VMWare Fusion (as awesome as it is) runs around $80 USD per copy, Sun’s VirtualBox is a free, open-source product for virtualization that runs on Mac OS X, Linux, and Windows.\n\n**Update:** Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at [MSDN]({{% wayback \"http://blogs.msdn.com/petel/archive/2009/09/09/running-the-ie-vpc-s-on-other-vpc-hosts.aspx\" %}}). If you’ve not yet read the related post, \"[Run Internet Explorer 6 (or IE7, or IE8) images in VMWare Fusion on Mac OS X](/2009/01/07/run-ie6-ie7-ie8-images-vmware-fusion-macosx/), you should. This is a follow up on how to take those virtual machines (which we’ve already done a lot of work on), and convert them for use VirtualBox.\n\n## Prerequisites\n\n* You need to have access to a Mac OS X machine.\n\n* A broadband connection would be quite helpful.\n\n* A USB flash drive (or some other way to copy files to the VM before you have network access enabled).\n\nVMWare Fusion uses the `.vmdk` disk format for its virtual drives. VirtualBox uses the `.vdi` format. Although VirtualBox can use the existing `.vmdk` images, you get better performance if you convert them to `.vdi`.\n\n## Downloading and Preparing stuff\n\n1. Download and install [VirtualBox]({{% wayback \"http://www.virtualbox.org/wiki/Downloads\" %}}). It should live in the `/Applications` directory.\n\n2. Download and install [Q]({{% wayback \"http://www.kju-app.org\" %}}) (a Mac version of [Qemu]({{% wayback \"http://qemu.org\" %}})). It should live in the `/Applications` directory.\n\n3. Download and decompress an [IE6]({{% wayback \"http://cdn.ryanparman.com/ie6-xpsp3.tar.gz\" %}}), [IE7]({{% wayback \"http://cdn.ryanparman.com/ie7-xpsp3.tar.gz\" %}}), or [IE8]({{% wayback \"http://cdn.ryanparman.com/ie8-xpsp3.tar.gz\" %}}) VMWare Fusion image that I’ve posted previously. If you need ALL of them, you can save yourself the bandwidth by downloading the IE6 image, making a copy of the file, and upgrading that copy to IE7 or IE8.\n\n## Extracting the disk image\n\n1. When you decompress the VMWare Fusion image, you should end up with a folder containing 3 files: Two text files, and a `.vmware` file.\n\n2. Right-click (or command-click) the `.vmware` file and choose “Show package contents.” This will open up a new window.\n\n3. Find the `.vmdk` file and drag it some place that’s easy to find. In this tutorial, we’ll use the desktop.\n\n## Converting the VMWare image to a VirtualBox image (Optional)\n\nThis step is optional. VirtualBox can read the VMWare Fusion disk image format if you’re short on time. However, you get better performance if you convert to the native VirtualBox format.\n\n1. Fire up `Terminal.app`. It lives inside your `/Applications/Utilities` directory.\n\n2. Move to your desktop directory:\n\n    ```bash\n    cd ~/Desktop\n    ```\n\n3. We’ll convert the `.vmdk` file into a raw hard drive file, then convert that raw file into the native `.vdi` format:\n\n    ```bash\n    /Applications/Q.app/Contents/MacOS/qemu-img convert -O raw IE6-XP.vmdk IE6-XP.raw \u0026\u0026 \\\n    /Applications/VirtualBox.app/Contents/MacOS/VBoxManage convertdd IE6-XP.raw IE6-XP.vdi \u0026\u0026 \\\n    rm IE6-XP.raw\n    ```\n\n4. Wait. Depending on your computer, this will probably take 20–45 minutes.\n\n5. Once it’s done, you can delete the `IE6-XP.vmdk` file.\n\n## Configuring the VM\n\n1. Move the new `.vdi` file to wherever you’ll want your virtual machines to live.\n\n2. Launch VirtualBox. You’ll be presented with the “Welcome to VirtualBox” dialog.\n\n3. Click “New.” A “Create new virtual machine” dialog box will pop up. Click “Next.”\n\n4. Name your virtual machine. I named mine “IE6-XP.”\n\n5. Operating system is “Microsoft Windows.” Version is “Windows XP.” Click “Next.”\n\n6. Determine the amount of RAM you want to allow the virtual machine to use. I have 4 GB of RAM, so I allow 512 MB. Adjust as necessary, but I wouldn’t go below 192 MB. Click “Next.”\n\n7. Here, you select the disk image to use. Choose “Use existing hard disk.” There is a pull-down menu that says “\u0026lt;no media\u0026gt;”. Click the icon to the right of it.\n\n8. The “Virtual Media Manager” dialog should pop up. Click “Add.”\n\n9. Find where you saved the `.vdi` file to, and select it. Once that’s done, click the “Select” button. This will close the Virtual Media Manager\" dialog.\n\n10. Back on the “Create new virtual machine” dialog, the pull-down menu that used to say “\u0026lt;no media\u0026gt;” should now say something along the lines of “IE6-XP.vdi (Normal, 16.00 GB).” Click “Next,” then “Finish.”\n\n11. From there, click “Settings” along the top of the application.\n\n12. Click the “Audio” tab, and deselect “Enable audio.” We don’t have the drivers for this, so we’ll save ourselves the nag-ware.\n\n13. Click the “Network” tab, and choose “Intel PRO/1000 MT Desktop” from the Adapter Type pull-down.\n\n14. Leave everything else as default, and click OK.\n\n15. Click “Start” along the top of the application to start the virtual machine.\n\n## Installing the drivers and Guest Additions\n\n1. When the virtual machine starts, the viewport will be very small. Windows also may be asking you to find drivers. Make it go away for now.\n\n2. In the “Devices” menu, choose “Install Guest Additions.” This will load a virtual CD-ROM.\n\n3. The setup should begin automatically. If it doesn’t, go to the Start Menu, choose “My Computer,” then double-click on “VirtualBox Guest Additions.”\n\n4. Go through the process and install the software, then restart your VM.\n\n5. While that restarts, switch back to Mac OS X and download the driver for the [Intel PRO/1000 MT]({{% wayback \"http://downloadcenter.intel.com/Detail_Desc.aspx?agr=N\u0026DwnldId=8659\u0026lang=eng\" %}}) ethernet card. Download the version for Windows XP (32-bit). Copy it to your USB flash drive.\n\n6. When the virtual machine comes back up, you’ll need to connect your USB flash drive to your virtual machine. To do this, you’ll need to drag the flash drive icon to the trash from Mac OS X (but leave it physically connected). In VirtualBox, go to the menubar and choose _Devices_ → _USB Devices_ → _USB Flash Drive_.\n\n7. Navigate to the installer on your flash drive, and install the Intel drivers.\n\n8. Lastly, go to _Start Menu_ → _Run_, then in the dialog type the following so that you can keep the additional drivers on your VM:\n\n    ```plain\n    D:\\VBoxWindowsAdditions-x86.exe /extract /D=C:\\Drivers\n    ```\n\n## Done!\n\nYou should be all set! If you want to get all super-hacky, you can check out \"[Create IE VBox]({{% wayback \"http://www.peculier.com/blog/create-ie-vbox.html\" %}})\" for geekier details.\n"},
    "links": {
        "prev": {"title": "Those kids and their Wiis", "permalink": "https://ryanparman.com/posts/2009/those-kids-and-their-wiis/"},
        "next": {"title": "Installing PHP 5.3 with mysqlnd on Mac OS X with MacPorts", "permalink": "https://ryanparman.com/posts/2009/installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Those kids and their Wiis",
    "description": "",
    "summary": {
        "content": "I remember back to the late 80’s when I would play Super Mario Bros. with my friends. The one defining aspect of playing that game back then was that I would try to make Mario jump by jerking my controller up in the air. Of course this didn’t do anything, but it was just a natural reaction to playing the game. My mom did the same thing for years. Fast-forward to today. My 7-year-old is just starting to learn to play video games.",
        "isTruncated": true
    },
    "published": "2009-04-26T16:27:36Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2009/those-kids-and-their-wiis/",
    "relativePermalink": "/posts/2009/those-kids-and-their-wiis/",
    "aliases": ["/2009/04/26/those-kids-and-their-wiis/"],
    "images": [],
    "videos": [],
    "categories": ["Family Life"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 425,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2009/20090426-those-kids-and-their-wiis.md",
        "logicalName": "20090426-those-kids-and-their-wiis.md",
        "translationBaseName": "20090426-those-kids-and-their-wiis",
        "baseFileName": "20090426-those-kids-and-their-wiis",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2009/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eI remember back to the late 80’s when I would play Super Mario Bros. with my friends. The one defining aspect of playing that game back then was that I would try to make Mario jump by jerking my controller up in the air. Of course this didn’t do anything, but it was just a natural reaction to playing the game. My mom did the same thing for years.\u003c/p\u003e\n\u003cp\u003eFast-forward to today. My 7-year-old is just starting to learn to play video games.\u003c/p\u003e\n\u003cp\u003eFor the past few months, she’s enjoyed (or been frustrated by) games like Mario Kart Wii and other games where motion (such as jerking the controller up in the air) gives her the response she wants. Playing the Wii has been a bit unnerving for me, as I spent years of my childhood trying to unlearn the very sorts of actions that the Wii encourages. This has always come naturally to her.\u003c/p\u003e\n\u003cp\u003eA few days ago, I decided that it was time for her to learn how to play with my Nintendo DS. As the was playing “The New Super Mario Bros.,” I noticed that the motion that she’d become accustomed to (jerking the controller around) wasn’t working, and it was making her frustrated. When playing Mario Kart DS, she kept trying to turn her driver by turning the DS in the air… which, of course, doesn’t work. All in all, playing the DS was a frustrating experience for her after having played the Wii for so long.\u003c/p\u003e\n\u003cp\u003eAfter seeing her frustration playing those action-oriented games, I decided to let her try another game that I thought might hold her attention longer: Final Fantasy. Specifically, it was Final Fantasy Tactics Advance for Gameboy Advance. (FFA for PlayStation is still one of my favorite FF games.) I handed her the DS and let her play, warning her that there was a lot of reading involved, but that it might be more interesting for her. She started playing and I didn’t hear anything out of her for over 4 hours. Simply amazing.\u003c/p\u003e\n\u003cp\u003eHer cousin came over yesterday, and they’ve been playing a LOT of Nintendo DS together. So I suppose it was interesting to see the difference between her generation and mine. Or rather, the similarities. The biggest difference is that this time around, Nintendo allows people to jerk the controller around. I also think it’s interesting that my daughter couldn’t pay attention to the Mario games, but was able to hyper-focus when it came to playing an RPG.\u003c/p\u003e\n\u003cp\u003eThat sounds like \u003cem\u003emy\u003c/em\u003e daughter.\u003c/p\u003e\n",
        "plain":"I remember back to the late 80’s when I would play Super Mario Bros. with my friends. The one defining aspect of playing that game back then was that I would try to make Mario jump by jerking my controller up in the air. Of course this didn’t do anything, but it was just a natural reaction to playing the game. My mom did the same thing for years.\nFast-forward to today. My 7-year-old is just starting to learn to play video games.\nFor the past few months, she’s enjoyed (or been frustrated by) games like Mario Kart Wii and other games where motion (such as jerking the controller up in the air) gives her the response she wants. Playing the Wii has been a bit unnerving for me, as I spent years of my childhood trying to unlearn the very sorts of actions that the Wii encourages. This has always come naturally to her.\nA few days ago, I decided that it was time for her to learn how to play with my Nintendo DS. As the was playing “The New Super Mario Bros.,” I noticed that the motion that she’d become accustomed to (jerking the controller around) wasn’t working, and it was making her frustrated. When playing Mario Kart DS, she kept trying to turn her driver by turning the DS in the air… which, of course, doesn’t work. All in all, playing the DS was a frustrating experience for her after having played the Wii for so long.\nAfter seeing her frustration playing those action-oriented games, I decided to let her try another game that I thought might hold her attention longer: Final Fantasy. Specifically, it was Final Fantasy Tactics Advance for Gameboy Advance. (FFA for PlayStation is still one of my favorite FF games.) I handed her the DS and let her play, warning her that there was a lot of reading involved, but that it might be more interesting for her. She started playing and I didn’t hear anything out of her for over 4 hours. Simply amazing.\nHer cousin came over yesterday, and they’ve been playing a LOT of Nintendo DS together. So I suppose it was interesting to see the difference between her generation and mine. Or rather, the similarities. The biggest difference is that this time around, Nintendo allows people to jerk the controller around. I also think it’s interesting that my daughter couldn’t pay attention to the Mario games, but was able to hyper-focus when it came to playing an RPG.\nThat sounds like my daughter.\n",
        "source":"\nI remember back to the late 80’s when I would play Super Mario Bros. with my friends. The one defining aspect of playing that game back then was that I would try to make Mario jump by jerking my controller up in the air. Of course this didn’t do anything, but it was just a natural reaction to playing the game. My mom did the same thing for years.\n\nFast-forward to today. My 7-year-old is just starting to learn to play video games.\n\nFor the past few months, she’s enjoyed (or been frustrated by) games like Mario Kart Wii and other games where motion (such as jerking the controller up in the air) gives her the response she wants. Playing the Wii has been a bit unnerving for me, as I spent years of my childhood trying to unlearn the very sorts of actions that the Wii encourages. This has always come naturally to her.\n\nA few days ago, I decided that it was time for her to learn how to play with my Nintendo DS. As the was playing “The New Super Mario Bros.,” I noticed that the motion that she’d become accustomed to (jerking the controller around) wasn’t working, and it was making her frustrated. When playing Mario Kart DS, she kept trying to turn her driver by turning the DS in the air… which, of course, doesn’t work. All in all, playing the DS was a frustrating experience for her after having played the Wii for so long.\n\nAfter seeing her frustration playing those action-oriented games, I decided to let her try another game that I thought might hold her attention longer: Final Fantasy. Specifically, it was Final Fantasy Tactics Advance for Gameboy Advance. (FFA for PlayStation is still one of my favorite FF games.) I handed her the DS and let her play, warning her that there was a lot of reading involved, but that it might be more interesting for her. She started playing and I didn’t hear anything out of her for over 4 hours. Simply amazing.\n\nHer cousin came over yesterday, and they’ve been playing a LOT of Nintendo DS together. So I suppose it was interesting to see the difference between her generation and mine. Or rather, the similarities. The biggest difference is that this time around, Nintendo allows people to jerk the controller around. I also think it’s interesting that my daughter couldn’t pay attention to the Mario games, but was able to hyper-focus when it came to playing an RPG.\n\nThat sounds like *my* daughter.\n"},
    "links": {
        "prev": {"title": "Introducing DOMBuilder", "permalink": "https://ryanparman.com/posts/2009/introducing-dombuilder/"},
        "next": {"title": "Run Internet Explorer 6 (or IE7, or IE8) images in VirtualBox on Mac OS X", "permalink": "https://ryanparman.com/posts/2009/run-ie6-ie7-ie8-images-virtualbox-macosx/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Introducing DOMBuilder",
    "description": "",
    "summary": {
        "content": "The DOM I hate the DOM. Actually, I take that back. I love the DOM, but I hate the fact that generating DOM nodes in JavaScript is so verbose and unintuitive. You need to construct a new element, then add properties, then construct a child element, then add properties, then append the child to the parent, and the parent to whatever DOM object you want that’s already in the page. A few years ago I discovered Builder.node(), a component of Scriptaculous.",
        "isTruncated": true
    },
    "published": "2009-02-27T17:13:22Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2009/introducing-dombuilder/",
    "relativePermalink": "/posts/2009/introducing-dombuilder/",
    "aliases": ["/2009/02/27/introducing-dombuilder/"],
    "images": [],
    "videos": [],
    "categories": ["Projects and Code"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 339,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2009/20090227-introducing-dombuilder.md",
        "logicalName": "20090227-introducing-dombuilder.md",
        "translationBaseName": "20090227-introducing-dombuilder",
        "baseFileName": "20090227-introducing-dombuilder",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2009/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#the-dom\"\u003eThe DOM\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#examples\"\u003eExamples\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#download\"\u003eDownload\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003ch2 id=\"the-dom\"\u003eThe DOM\u003c/h2\u003e\n\u003cp\u003eI hate the DOM. Actually, I take that back. I love the DOM, but I hate the fact that generating DOM nodes in JavaScript is so verbose and unintuitive.\u003c/p\u003e\n\u003cp\u003eYou need to construct a new element, then add properties, then construct a child element, then add properties, then append the child to the parent, and the parent to whatever DOM object you want that’s already in the page.\u003c/p\u003e\n\u003cp\u003eA few years ago I discovered \u003ccode\u003eBuilder.node()\u003c/code\u003e, a component of \u003ca href=\"https://web.archive.org/web/20090227171322/http://script.aculo.us\"\u003eScriptaculous\u003c/a\u003e. The problem is that Scriptaculous relies on Prototype, and both are HUGE JavaScript libraries. Later I moved to Moo.fx/MooTools, then I didn’t do much JavaScript for a while, then I started doing a lot with YUI, while sprinkling a little jQuery around here and there. None of these other frameworks had an equivalent to \u003ccode\u003eBuilder.node()\u003c/code\u003e, and again, that sucks.\u003c/p\u003e\n\u003cp\u003eSo last night, I wrote a small JavaScript class to handle this very thing. Introducing \u003ca href=\"https://web.archive.org/web/20090227171322/http://github.com/skyzyx/dombuilder/\"\u003eDOMBuilder\u003c/a\u003e. DOMBuilder is small, fast, and doesn’t depend on any other JavaScript frameworks meaning that it’s easy to use in any project where you need to construct nested DOM elements.\u003c/p\u003e\n\u003cp\u003eThe fully commented debug version clocks in around 3k. The minified version is 739 bytes. With gzip compression, it squeezes down to a mere 393 bytes. It’s not quite as terse or elegant as I’d like (yet), but it’s a good result for about 2 hours of hacking.\u003c/p\u003e\n\u003ch2 id=\"examples\"\u003eExamples\u003c/h2\u003e\n\u003cp\u003eHere’s the HTML we want to generate:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u0026lt;\u003cspan style=\"color:#f92672\"\u003ediv\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;location_select_control\u0026#34;\u003c/span\u003e\u0026gt;\n    \u0026lt;\u003cspan style=\"color:#f92672\"\u003ea\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehref\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;location_select_label\u0026#34;\u003c/span\u003e\u0026gt;\n        \u0026lt;\u003cspan style=\"color:#f92672\"\u003elabel\u003c/span\u003e\u0026gt;This is my label\u0026lt;/\u003cspan style=\"color:#f92672\"\u003elabel\u003c/span\u003e\u0026gt;\n    \u0026lt;/\u003cspan style=\"color:#f92672\"\u003ea\u003c/span\u003e\u0026gt;\n\u0026lt;/\u003cspan style=\"color:#f92672\"\u003ediv\u003c/span\u003e\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere is how we’d do it with the standard DOM:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan style=\"color:#a6e22e\"\u003econtrol_div\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e document.\u003cspan style=\"color:#a6e22e\"\u003ecreateElement\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;div\u0026#39;\u003c/span\u003e);\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_div\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eclassName\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;location_select_control\u0026#34;\u003c/span\u003e;\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_link\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e document.\u003cspan style=\"color:#a6e22e\"\u003ecreateElement\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e);\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_link\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ehref\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e;\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_link\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eclassName\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;location_select_label\u0026#34;\u003c/span\u003e;\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_label\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e document.\u003cspan style=\"color:#a6e22e\"\u003ecreateElement\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;label\u0026#39;\u003c/span\u003e);\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_label\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003einnerHTML\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;This is my label\u0026#34;\u003c/span\u003e;\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_link\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eappendChild\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003econtrol_label\u003c/span\u003e);\n\u003cspan style=\"color:#a6e22e\"\u003econtrol_div\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eappendChild\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003econtrol_link\u003c/span\u003e);\ndocument.\u003cspan style=\"color:#a6e22e\"\u003ebody\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eappendChild\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003econtrol_div\u003c/span\u003e);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLastly, here’s how we’d do it with DOMBuilder:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eDOMBuilder\u003c/span\u003e;\ndocument.\u003cspan style=\"color:#a6e22e\"\u003ebody\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eappendChild\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;div\u0026#39;\u003c/span\u003e, { \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;location_select_control\u0026#39;\u003c/span\u003e }).\u003cspan style=\"color:#a6e22e\"\u003echild\u003c/span\u003e(\n    \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;a\u0026#39;\u003c/span\u003e, { \u003cspan style=\"color:#a6e22e\"\u003ehref\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;location_select_label\u0026#39;\u003c/span\u003e }).\u003cspan style=\"color:#a6e22e\"\u003echild\u003c/span\u003e(\n        \u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;label\u0026#39;\u003c/span\u003e).\u003cspan style=\"color:#a6e22e\"\u003einnerHTML\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;This is my label\u0026#39;\u003c/span\u003e)\n    )\n).\u003cspan style=\"color:#a6e22e\"\u003easDOM\u003c/span\u003e());\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"download\"\u003eDownload\u003c/h2\u003e\n\u003cp\u003eThis code is BSD licensed, so feel free to use it in personal or commercial projects. You can download it from \u003ca href=\"https://web.archive.org/web/20090227171322/http://github.com/skyzyx/dombuilder/\"\u003eGitHub\u003c/a\u003e.\u003c/p\u003e\n",
        "plain":"The DOM I hate the DOM. Actually, I take that back. I love the DOM, but I hate the fact that generating DOM nodes in JavaScript is so verbose and unintuitive.\nYou need to construct a new element, then add properties, then construct a child element, then add properties, then append the child to the parent, and the parent to whatever DOM object you want that’s already in the page.\nA few years ago I discovered Builder.node(), a component of Scriptaculous. The problem is that Scriptaculous relies on Prototype, and both are HUGE JavaScript libraries. Later I moved to Moo.fx/MooTools, then I didn’t do much JavaScript for a while, then I started doing a lot with YUI, while sprinkling a little jQuery around here and there. None of these other frameworks had an equivalent to Builder.node(), and again, that sucks.\nSo last night, I wrote a small JavaScript class to handle this very thing. Introducing DOMBuilder. DOMBuilder is small, fast, and doesn’t depend on any other JavaScript frameworks meaning that it’s easy to use in any project where you need to construct nested DOM elements.\nThe fully commented debug version clocks in around 3k. The minified version is 739 bytes. With gzip compression, it squeezes down to a mere 393 bytes. It’s not quite as terse or elegant as I’d like (yet), but it’s a good result for about 2 hours of hacking.\nExamples Here’s the HTML we want to generate:\n\u0026lt;div class=\u0026#34;location_select_control\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;\u0026#34; class=\u0026#34;location_select_label\u0026#34;\u0026gt; \u0026lt;label\u0026gt;This is my label\u0026lt;/label\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; Here is how we’d do it with the standard DOM:\ncontrol_div = document.createElement(\u0026#39;div\u0026#39;); control_div.className = \u0026#34;location_select_control\u0026#34;; control_link = document.createElement(\u0026#39;a\u0026#39;); control_link.href = \u0026#34;\u0026#34;; control_link.className = \u0026#34;location_select_label\u0026#34;; control_label = document.createElement(\u0026#39;label\u0026#39;); control_label.innerHTML = \u0026#34;This is my label\u0026#34;; control_link.appendChild(control_label); control_div.appendChild(control_link); document.body.appendChild(control_div); Lastly, here’s how we’d do it with DOMBuilder:\nvar _ = DOMBuilder; document.body.appendChild(_(\u0026#39;div\u0026#39;, { class:\u0026#39;location_select_control\u0026#39; }).child( _(\u0026#39;a\u0026#39;, { href:\u0026#39;\u0026#39;, class:\u0026#39;location_select_label\u0026#39; }).child( _(\u0026#39;label\u0026#39;).innerHTML(\u0026#39;This is my label\u0026#39;) ) ).asDOM()); Download This code is BSD licensed, so feel free to use it in personal or commercial projects. You can download it from GitHub.\n",
        "source":"\n## The DOM\n\nI hate the DOM. Actually, I take that back. I love the DOM, but I hate the fact that generating DOM nodes in JavaScript is so verbose and unintuitive.\n\nYou need to construct a new element, then add properties, then construct a child element, then add properties, then append the child to the parent, and the parent to whatever DOM object you want that’s already in the page.\n\nA few years ago I discovered `Builder.node()`, a component of [Scriptaculous]({{% wayback \"http://script.aculo.us\" %}}). The problem is that Scriptaculous relies on Prototype, and both are HUGE JavaScript libraries. Later I moved to Moo.fx/MooTools, then I didn’t do much JavaScript for a while, then I started doing a lot with YUI, while sprinkling a little jQuery around here and there. None of these other frameworks had an equivalent to `Builder.node()`, and again, that sucks.\n\nSo last night, I wrote a small JavaScript class to handle this very thing. Introducing [DOMBuilder]({{% wayback \"http://github.com/skyzyx/dombuilder/\" %}}). DOMBuilder is small, fast, and doesn’t depend on any other JavaScript frameworks meaning that it’s easy to use in any project where you need to construct nested DOM elements.\n\nThe fully commented debug version clocks in around 3k. The minified version is 739 bytes. With gzip compression, it squeezes down to a mere 393 bytes. It’s not quite as terse or elegant as I’d like (yet), but it’s a good result for about 2 hours of hacking.\n\n## Examples\n\nHere’s the HTML we want to generate:\n\n```html\n\u003cdiv class=\"location_select_control\"\u003e\n    \u003ca href=\"\" class=\"location_select_label\"\u003e\n        \u003clabel\u003eThis is my label\u003c/label\u003e\n    \u003c/a\u003e\n\u003c/div\u003e\n```\n\nHere is how we’d do it with the standard DOM:\n\n```javascript\ncontrol_div = document.createElement('div');\ncontrol_div.className = \"location_select_control\";\ncontrol_link = document.createElement('a');\ncontrol_link.href = \"\";\ncontrol_link.className = \"location_select_label\";\ncontrol_label = document.createElement('label');\ncontrol_label.innerHTML = \"This is my label\";\ncontrol_link.appendChild(control_label);\ncontrol_div.appendChild(control_link);\ndocument.body.appendChild(control_div);\n```\n\nLastly, here’s how we’d do it with DOMBuilder:\n\n```javascript\nvar _ = DOMBuilder;\ndocument.body.appendChild(_('div', { class:'location_select_control' }).child(\n    _('a', { href:'', class:'location_select_label' }).child(\n        _('label').innerHTML('This is my label')\n    )\n).asDOM());\n```\n\n## Download\n\nThis code is BSD licensed, so feel free to use it in personal or commercial projects. You can download it from [GitHub]({{% wayback \"http://github.com/skyzyx/dombuilder/\" %}}).\n"},
    "links": {
        "prev": {"title": "Run Internet Explorer 6 (or IE7, or IE8) images in VMware Fusion on Mac OS X", "permalink": "https://ryanparman.com/posts/2009/run-ie6-ie7-ie8-images-vmware-fusion-macosx/"},
        "next": {"title": "Those kids and their Wiis", "permalink": "https://ryanparman.com/posts/2009/those-kids-and-their-wiis/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Run Internet Explorer 6 (or IE7, or IE8) images in VMware Fusion on Mac OS X",
    "description": "",
    "summary": {
        "content": "By now, most front-end web developers have heard of the Standalone Internet Explorers (Wikipedia article). Although these are incredibly useful, they’ve always been hacky at best. Because of that, we need to go the long way. We’ll download the “officially sanctioned” VirtualPC images containing a time-limited version of Windows XP SP3 and Internet Explorer 6.0, and then we’ll convert these images to the kind that work with VMware Fusion (which works on Mac OS X). This should only need to be done every 3 or 4 months when the images expire.",
        "isTruncated": true
    },
    "published": "2009-01-07T20:33:34Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2009/run-ie6-ie7-ie8-images-vmware-fusion-macosx/",
    "relativePermalink": "/posts/2009/run-ie6-ie7-ie8-images-vmware-fusion-macosx/",
    "aliases": ["/2009/01/07/run-ie6-ie7-ie8-images-vmware-fusion-macosx/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 744,
        "readingTime": "4 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2009/20090107-run-ie6-ie7-ie8-images-vmware-fusion-macosx.md",
        "logicalName": "20090107-run-ie6-ie7-ie8-images-vmware-fusion-macosx.md",
        "translationBaseName": "20090107-run-ie6-ie7-ie8-images-vmware-fusion-macosx",
        "baseFileName": "20090107-run-ie6-ie7-ie8-images-vmware-fusion-macosx",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2009/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#prerequisites\"\u003ePrerequisites\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installing-qemu-first-time-only\"\u003eInstalling Qemu (FIRST-TIME ONLY)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#downloading-and-preparing-stuff\"\u003eDownloading and Preparing stuff\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#converting-the-image\"\u003eConverting the image\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#configuring-the-vm\"\u003eConfiguring the VM\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installing-the-drivers-and-vmware-tools\"\u003eInstalling the drivers and VMWare Tools\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp itemprop=\"description\" class=\"f5 f4-m f3-l mt0 lh-copy p-summary entry-summary\"\u003e\nBy now, most front-end web developers have heard of the \u003ca href=\"/2003/11/06/multiple-versions-of-internet-explorer/\"\u003eStandalone Internet Explorers\u003c/a\u003e (\u003ca href=\"https://web.archive.org/web/20090107203334/http://en.wikipedia.org/wiki/Internet_Explorer#.22Standalone.22_Internet_Explorer\"\u003eWikipedia article\u003c/a\u003e). Although these are incredibly useful, they’ve always been hacky at best.\n\u003c/p\u003e\n\n\u003cp\u003eBecause of that, we need to go the long way. We’ll download the “officially sanctioned” VirtualPC images containing a time-limited version of Windows XP SP3 and Internet Explorer 6.0, and then we’ll convert these images to the kind that work with VMware Fusion (which works on Mac OS X). This should only need to be done every 3 or 4 months when the images expire. These instructions are loosely based on the ones found at \u003ca href=\"https://web.archive.org/web/20090107203334/http://blog.mozmonkey.com/2008/vpc-ie6-ie7-ie8-on-mac-os-x/\"\u003eRunning IE6, IE7 and IE8 on your Mac\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUpdate:\u003c/strong\u003e Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at \u003ca href=\"https://web.archive.org/web/20090107203334/http://petelepage.com/blog/2009/09/running-the-ie-vpcs-on-other-vpc-hosts/\"\u003eRunning The IE VPC’s on other VPC Hosts?\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"prerequisites\"\u003ePrerequisites\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eYou need to have \u003ca href=\"https://web.archive.org/web/20090107203334/http://vmware.com/products/fusion/\"\u003eVMware Fusion\u003c/a\u003e installed on your Mac.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eYou need to have access to a Windows XP machine, as this is where the converting will happen.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"installing-qemu-first-time-only\"\u003eInstalling Qemu (FIRST-TIME ONLY)\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eDownload a small application to our Windows machine called \u003ca href=\"https://web.archive.org/web/20090107203334/http://lassauge.free.fr/qemu/\"\u003eQemu\u003c/a\u003e. At the time of this writing, you want to download the \u003ca href=\"https://web.archive.org/web/20090107203334/http://lassauge.free.fr/qemu/release/Qemu-0.9.1-windows.zip\"\u003eregular version 0.9.1\u003c/a\u003e. Once it’s done, unzip it someplace that’s easy to get to via the command line (e.g., \u003ccode\u003ec:\\qemu\u003c/code\u003e).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eGo into the Qemu folder, then into the \u003ccode\u003ebin\u003c/code\u003e folder and copy all of the files in the \u003ccode\u003ebin\u003c/code\u003e folder back to the original Qemu folder (you can simply copy-paste).\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"downloading-and-preparing-stuff\"\u003eDownloading and Preparing stuff\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eOn Microsoft’s website, they have a page entitled \u003ca href=\"https://web.archive.org/web/20090107203334/http://www.microsoft.com/downloads/details.aspx?FamilyId=21EABB90-958F-4B64-B5F1-73D0A413C8EF\u0026amp;displaylang=en\"\u003eInternet Explorer Application Compatibility VPC Image\u003c/a\u003e where you can download various time-limited images that allow you to test combinations of Windows XP SP3 or Vista, along with Internet Explorer 6.0, 7.0, and the 8.0 betas. In this example, we’re going to install the IE6/XP image but you can do whatever you need to do.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWe’ll need to unpack this download in Windows, so if you haven’t already, make sure you’re doing this part in Windows.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDouble-click it (in Windows) to begin unpacking it. It will warn you that it has an expiration date. On that date, we’ll have to download a fresh VPC image from Microsoft and do this all over again.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"converting-the-image\"\u003eConverting the image\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eYou’ll want to copy the \u003ccode\u003eXP SP3 with IE6.vhd\u003c/code\u003e file into the Qemu folder. This will allow us to use simpler, more consistent commands to convert the image.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn your Windows VM go to \u003cem\u003eStart Menu\u003c/em\u003e → \u003cem\u003eRun\u003c/em\u003e, type the \u003ccode\u003ecmd\u003c/code\u003e command, and click OK.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUsing your deftly intimate knowledge of MS-DOS, use commands like \u003ccode\u003ecd\u003c/code\u003e to navigate to where you unpacked Qemu.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you don’t know MS-DOS commands from a hole in the wall, you can download \u003ca href=\"https://cdn.ryanparman.com/wp-content/uploads/2009/01/CmdHerePowertoySetup.exe\"\u003eOpen Command Window Here\u003c/a\u003e from Microsoft, install it, find the Qemu folder in the normal Windows Explorer, right-click, and choose “Open Command Window Here”. One method is shorter and harder, while the other is easier and slower. Take your pick.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eType the following command in your MS-DOS window:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eqemu-img.exe convert -f vpc \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;XP SP3 with IE6.vhd\u0026#34;\u003c/span\u003e -O vmdk IE6-XP.vmdk\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNote that \u003ccode\u003eXP SP3 with IE6.vhd\u003c/code\u003e is the path to the IE6 VPC file you downloaded, while \u003ccode\u003eIE6-XP.vmdk\u003c/code\u003e is the new file that VMWare Fusion will use.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWait. This will probably take 5–10 minutes.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"configuring-the-vm\"\u003eConfiguring the VM\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eMove the new \u003ccode\u003e.vmdk\u003c/code\u003e file to your Mac.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOpen VMWare Fusion (or shutdown the Windows VM you may already have running) and click \u003cem\u003eFile\u003c/em\u003e → \u003cem\u003eNew\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eGo through the wizard and when you get to the “Virtual Hard Disk” page, expand “Advanced disk options”, check “Use an existing virtual disk” and use the dropdown to find the new \u003ccode\u003e.vmdk\u003c/code\u003e image you just copied back to your Mac.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFinish the wizard and start it! If prompted to upgrade the virtual hard drive, click “Yes.”\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"installing-the-drivers-and-vmware-tools\"\u003eInstalling the drivers and VMWare Tools\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eWith VMWare Fusion running, download and decompress \u003ca href=\"https://cdn.ryanparman.com/wp-content/uploads/2009/01/vmware_xpsp3_drivers.tar.gz\"\u003evmware_xpsp3_drivers.tar.gz\u003c/a\u003e. Copy all of the resulting files to \u003ccode\u003ec:\\windows\\system32\\drivers\u003c/code\u003e. \u003cem\u003eMake sure you install these BEFORE the VMware tools!\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDownload \u003ca href=\"http://cdn.ryanparman.com/vmware_mouse.reg\"\u003evmware_mouse.reg\u003c/a\u003e and double-click it to load its settings into the Windows registry. \u003cem\u003eVMware doesn’t correctly overwrite these setting upon install of the VMware tools, and the mouse can start doing wonky things. These registry settings fix it.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn VMware, click \u003cem\u003eVirtual Machine\u003c/em\u003e → \u003cem\u003eInstall VMWare Tools\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFollow the instructions. If Windows asks for additional drivers, point it to \u003ccode\u003ec:\\windows\\system32\\drivers\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMake sure that you shutdown the VM and configure your memory (etc.) settings appropriately.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n",
        "plain":"By now, most front-end web developers have heard of the Standalone Internet Explorers (Wikipedia article). Although these are incredibly useful, they’ve always been hacky at best. Because of that, we need to go the long way. We’ll download the “officially sanctioned” VirtualPC images containing a time-limited version of Windows XP SP3 and Internet Explorer 6.0, and then we’ll convert these images to the kind that work with VMware Fusion (which works on Mac OS X). This should only need to be done every 3 or 4 months when the images expire. These instructions are loosely based on the ones found at Running IE6, IE7 and IE8 on your Mac.\nUpdate: Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at Running The IE VPC’s on other VPC Hosts?.\nPrerequisites   You need to have VMware Fusion installed on your Mac.\n  You need to have access to a Windows XP machine, as this is where the converting will happen.\n  Installing Qemu (FIRST-TIME ONLY)   Download a small application to our Windows machine called Qemu. At the time of this writing, you want to download the regular version 0.9.1. Once it’s done, unzip it someplace that’s easy to get to via the command line (e.g., c:\\qemu).\n  Go into the Qemu folder, then into the bin folder and copy all of the files in the bin folder back to the original Qemu folder (you can simply copy-paste).\n  Downloading and Preparing stuff   On Microsoft’s website, they have a page entitled Internet Explorer Application Compatibility VPC Image where you can download various time-limited images that allow you to test combinations of Windows XP SP3 or Vista, along with Internet Explorer 6.0, 7.0, and the 8.0 betas. In this example, we’re going to install the IE6/XP image but you can do whatever you need to do.\n  We’ll need to unpack this download in Windows, so if you haven’t already, make sure you’re doing this part in Windows.\n  Double-click it (in Windows) to begin unpacking it. It will warn you that it has an expiration date. On that date, we’ll have to download a fresh VPC image from Microsoft and do this all over again.\n  Converting the image   You’ll want to copy the XP SP3 with IE6.vhd file into the Qemu folder. This will allow us to use simpler, more consistent commands to convert the image.\n  In your Windows VM go to Start Menu → Run, type the cmd command, and click OK.\n  Using your deftly intimate knowledge of MS-DOS, use commands like cd to navigate to where you unpacked Qemu.\n  If you don’t know MS-DOS commands from a hole in the wall, you can download Open Command Window Here from Microsoft, install it, find the Qemu folder in the normal Windows Explorer, right-click, and choose “Open Command Window Here”. One method is shorter and harder, while the other is easier and slower. Take your pick.\n  Type the following command in your MS-DOS window:\nqemu-img.exe convert -f vpc \u0026#34;XP SP3 with IE6.vhd\u0026#34; -O vmdk IE6-XP.vmdk Note that XP SP3 with IE6.vhd is the path to the IE6 VPC file you downloaded, while IE6-XP.vmdk is the new file that VMWare Fusion will use.\n  Wait. This will probably take 5–10 minutes.\n  Configuring the VM   Move the new .vmdk file to your Mac.\n  Open VMWare Fusion (or shutdown the Windows VM you may already have running) and click File → New.\n  Go through the wizard and when you get to the “Virtual Hard Disk” page, expand “Advanced disk options”, check “Use an existing virtual disk” and use the dropdown to find the new .vmdk image you just copied back to your Mac.\n  Finish the wizard and start it! If prompted to upgrade the virtual hard drive, click “Yes.”\n  Installing the drivers and VMWare Tools   With VMWare Fusion running, download and decompress vmware_xpsp3_drivers.tar.gz. Copy all of the resulting files to c:\\windows\\system32\\drivers. Make sure you install these BEFORE the VMware tools!\n  Download vmware_mouse.reg and double-click it to load its settings into the Windows registry. VMware doesn’t correctly overwrite these setting upon install of the VMware tools, and the mouse can start doing wonky things. These registry settings fix it.\n  In VMware, click Virtual Machine → Install VMWare Tools.\n  Follow the instructions. If Windows asks for additional drivers, point it to c:\\windows\\system32\\drivers.\n  Make sure that you shutdown the VM and configure your memory (etc.) settings appropriately.\n  ",
        "source":"\n{{\u003cdescription\u003e}}\nBy now, most front-end web developers have heard of the \u003ca href=\"/2003/11/06/multiple-versions-of-internet-explorer/\"\u003eStandalone Internet Explorers\u003c/a\u003e (\u003ca href=\"https://web.archive.org/web/20090107203334/http://en.wikipedia.org/wiki/Internet_Explorer#.22Standalone.22_Internet_Explorer\"\u003eWikipedia article\u003c/a\u003e). Although these are incredibly useful, they’ve always been hacky at best.\n{{\u003c/description\u003e}}\n\nBecause of that, we need to go the long way. We’ll download the “officially sanctioned” VirtualPC images containing a time-limited version of Windows XP SP3 and Internet Explorer 6.0, and then we’ll convert these images to the kind that work with VMware Fusion (which works on Mac OS X). This should only need to be done every 3 or 4 months when the images expire. These instructions are loosely based on the ones found at [Running IE6, IE7 and IE8 on your Mac]({{% wayback \"http://blog.mozmonkey.com/2008/vpc-ie6-ie7-ie8-on-mac-os-x/\" %}}).\n\n**Update:** Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at [Running The IE VPC’s on other VPC Hosts?]({{% wayback \"http://petelepage.com/blog/2009/09/running-the-ie-vpcs-on-other-vpc-hosts/\" %}}).\n\n## Prerequisites\n\n* You need to have [VMware Fusion]({{% wayback \"http://vmware.com/products/fusion/\" %}}) installed on your Mac.\n\n* You need to have access to a Windows XP machine, as this is where the converting will happen.\n\n## Installing Qemu (FIRST-TIME ONLY)\n\n1. Download a small application to our Windows machine called [Qemu]({{% wayback \"http://lassauge.free.fr/qemu/\" %}}). At the time of this writing, you want to download the [regular version 0.9.1]({{% wayback \"http://lassauge.free.fr/qemu/release/Qemu-0.9.1-windows.zip\" %}}). Once it’s done, unzip it someplace that’s easy to get to via the command line (e.g., `c:\\qemu`).\n\n2. Go into the Qemu folder, then into the `bin` folder and copy all of the files in the `bin` folder back to the original Qemu folder (you can simply copy-paste).\n\n## Downloading and Preparing stuff\n\n1. On Microsoft’s website, they have a page entitled [Internet Explorer Application Compatibility VPC Image]({{% wayback \"http://www.microsoft.com/downloads/details.aspx?FamilyId=21EABB90-958F-4B64-B5F1-73D0A413C8EF\u0026displaylang=en\" %}}) where you can download various time-limited images that allow you to test combinations of Windows XP SP3 or Vista, along with Internet Explorer 6.0, 7.0, and the 8.0 betas. In this example, we’re going to install the IE6/XP image but you can do whatever you need to do.\n\n2. We’ll need to unpack this download in Windows, so if you haven’t already, make sure you’re doing this part in Windows.\n\n3. Double-click it (in Windows) to begin unpacking it. It will warn you that it has an expiration date. On that date, we’ll have to download a fresh VPC image from Microsoft and do this all over again.\n\n## Converting the image\n\n1. You’ll want to copy the `XP SP3 with IE6.vhd` file into the Qemu folder. This will allow us to use simpler, more consistent commands to convert the image.\n\n2. In your Windows VM go to _Start Menu_ → _Run_, type the `cmd` command, and click OK.\n\n3. Using your deftly intimate knowledge of MS-DOS, use commands like `cd` to navigate to where you unpacked Qemu.\n\n4. If you don’t know MS-DOS commands from a hole in the wall, you can download [Open Command Window Here](https://cdn.ryanparman.com/wp-content/uploads/2009/01/CmdHerePowertoySetup.exe) from Microsoft, install it, find the Qemu folder in the normal Windows Explorer, right-click, and choose “Open Command Window Here”. One method is shorter and harder, while the other is easier and slower. Take your pick.\n\n5. Type the following command in your MS-DOS window:\n\n    ```bash\n    qemu-img.exe convert -f vpc \"XP SP3 with IE6.vhd\" -O vmdk IE6-XP.vmdk\n    ```\n\n    Note that `XP SP3 with IE6.vhd` is the path to the IE6 VPC file you downloaded, while `IE6-XP.vmdk` is the new file that VMWare Fusion will use.\n\n6. Wait. This will probably take 5–10 minutes.\n\n## Configuring the VM\n\n1. Move the new `.vmdk` file to your Mac.\n\n2. Open VMWare Fusion (or shutdown the Windows VM you may already have running) and click _File_ → _New_.\n\n3. Go through the wizard and when you get to the “Virtual Hard Disk” page, expand “Advanced disk options”, check “Use an existing virtual disk” and use the dropdown to find the new `.vmdk` image you just copied back to your Mac.\n\n4. Finish the wizard and start it! If prompted to upgrade the virtual hard drive, click “Yes.”\n\n## Installing the drivers and VMWare Tools\n\n1. With VMWare Fusion running, download and decompress [vmware_xpsp3_drivers.tar.gz](https://cdn.ryanparman.com/wp-content/uploads/2009/01/vmware_xpsp3_drivers.tar.gz). Copy all of the resulting files to `c:\\windows\\system32\\drivers`. *Make sure you install these BEFORE the VMware tools!*\n\n2. Download [vmware_mouse.reg](http://cdn.ryanparman.com/vmware_mouse.reg) and double-click it to load its settings into the Windows registry. *VMware doesn’t correctly overwrite these setting upon install of the VMware tools, and the mouse can start doing wonky things. These registry settings fix it.*\n\n3. In VMware, click _Virtual Machine_ → _Install VMWare Tools_.\n\n4. Follow the instructions. If Windows asks for additional drivers, point it to `c:\\windows\\system32\\drivers`.\n\n5. Make sure that you shutdown the VM and configure your memory (etc.) settings appropriately.\n"},
    "links": {
        "prev": {"title": "Tarzan 2.0 is finally here!", "permalink": "https://ryanparman.com/posts/2008/tarzan-20-is-finally-here/"},
        "next": {"title": "Introducing DOMBuilder", "permalink": "https://ryanparman.com/posts/2009/introducing-dombuilder/"},
        "ignore": "me"
    }
}

            
        ]
    }
}
