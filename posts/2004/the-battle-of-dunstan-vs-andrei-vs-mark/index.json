{
    "data": {
    "kind": "page",
    "title": "The Battle of Dunstan vs. Andrei vs. Mark",
    "description": "",
    "summary": {
        "content": "…well, their syndication feeds anyways. Here’s the problem: While working on SimplePie initially, I used copies of Dunstan’s Atom and RSS feeds because I felt that they’d be representative of most people’s decently well-formed feeds. I know that some people have worse feeds, and that Mark Pilgrim’s feeds are a bit too “academically” correct. Dunstan has a problem with his feed. He uses the numeric entity for a “smart-apostrophe” in his feed’s \u0026lt;title\u0026gt; tag. This happens to be a UTF–8 character.",
        "isTruncated": true
    },
    "published": "2004-08-29T19:38:27Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/the-battle-of-dunstan-vs-andrei-vs-mark/",
    "relativePermalink": "/posts/2004/the-battle-of-dunstan-vs-andrei-vs-mark/",
    "aliases": ["/2004/08/29/the-battle-of-dunstan-vs-andrei-vs-mark/"],
    "images": [],
    "videos": [],
    "categories": ["Projects and Code"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 378,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20040829-the-battle-of-dunstan-vs-andrei-vs-mark.md",
        "logicalName": "20040829-the-battle-of-dunstan-vs-andrei-vs-mark.md",
        "translationBaseName": "20040829-the-battle-of-dunstan-vs-andrei-vs-mark",
        "baseFileName": "20040829-the-battle-of-dunstan-vs-andrei-vs-mark",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003e…well, their syndication feeds anyways. Here’s the problem:\u003c/p\u003e\n\u003cp\u003eWhile working on \u003ca href=\"/projects/simplepie/\"\u003eSimplePie\u003c/a\u003e initially, I used copies of \u003ca href=\"https://web.archive.org/web/20040829193827/http://www.1976design.com/blog/\"\u003eDunstan’s\u003c/a\u003e Atom and RSS feeds because I felt that they’d be representative of most people’s decently well-formed feeds. I know that some people have worse feeds, and that \u003ca href=\"https://web.archive.org/web/20040829193827/http://www.diveintomark.org\"\u003eMark Pilgrim’s\u003c/a\u003e feeds are a bit too “academically” correct.\u003c/p\u003e\n\u003cp\u003eDunstan has a problem with his feed. He uses the numeric entity for a “smart-apostrophe” in his feed’s \u003ccode\u003e\u0026lt;title\u0026gt;\u003c/code\u003e tag. This happens to be a UTF–8 character. For whatever reason, parsing his feed in every PHP-based feed reader I’ve ever used displays that smart-apostrophe as a question mark. In wanting to build a “feed parser for the rest of us”, I decided to be smart and wrap a CDATA section around the contents of the \u003ccode\u003e\u0026lt;title\u0026gt;\u003c/code\u003e, \u003ccode\u003e\u0026lt;link\u0026gt;\u003c/code\u003e, and \u003ccode\u003e\u0026lt;description\u0026gt;\u003c/code\u003e on the fly for those that don’t already have them. Dunstan’s question mark becomes the character that it’s supposed to be. No problem.\u003c/p\u003e\n\u003cp\u003eOn the other hand, \u003ca href=\"https://web.archive.org/web/20040829193827/http://www.designbyfire.com\"\u003eAndrei\u003c/a\u003e also has a problem with his feed. Well, not really… it’s just that the fix I put in place to fix Dunstan’s feed broke Andrei’s feed. Andrei does a fake-out with his CDATA sections. He closes the CDATA section in \u003ccode\u003e\u0026lt;description\u0026gt;\u003c/code\u003e, then has one last bit of content before closing the tag. This is just enough to get past SimplePie’s logic. Wonderful.\u003c/p\u003e\n\u003cp\u003eSince Dunstan’s issue is only in the feed’s \u003ccode\u003e\u0026lt;title\u0026gt;\u003c/code\u003e tag, I went ahead and changed how SimplePie handles the feeds by removing the code for wrapping CDATA sections around \u003ccode\u003e\u0026lt;link\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;description\u0026gt;\u003c/code\u003e. Both Dunstan and Andrei have working feeds again.\u003c/p\u003e\n\u003cp\u003eThen, I go and test it on \u003ca href=\"https://web.archive.org/web/20040829193827/http://www.diveintomark.org\"\u003eMark’s\u003c/a\u003e Feed Parser project feed. SimplePie breaks down again. Well, crap. Instead of using \u003ccode\u003e\u0026lt;title\u0026gt;\u003c/code\u003e like normal people, Mark has to be all cool by using \u003ccode\u003e\u0026lt;title type=\u0026quot;text/plain\u0026quot;\u0026gt;\u003c/code\u003e. Argh.\u003c/p\u003e\n\u003cp\u003eSo, I’m off to find some code that can resolve this little quarrel. I’m thinking about going through and looking for UTF–8 entities (4-digit, typically begins with an 8: \u003ccode\u003e\u0026amp;#8217;\u003c/code\u003e) and wrapping CDATA sections around those entities alone, which will probably work. I don’t want to release this software as 1.0 until it performs satisfactorily with every single feed in my entire \u003ca href=\"/blogs/\"\u003ereading list\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eVersion 0.92 is \u003cdel\u003eon it’s way\u003c/del\u003e \u003ca href=\"/projects/simplepie/\"\u003ehere\u003c/a\u003e folks. \u003ca href=\"https://web.archive.org/web/20040829193827/http://www.leftjustified.net\"\u003eAndrew\u003c/a\u003e, how’s that WordPress plug-in coming along?\u003c/p\u003e\n",
        "plain":"…well, their syndication feeds anyways. Here’s the problem:\nWhile working on SimplePie initially, I used copies of Dunstan’s Atom and RSS feeds because I felt that they’d be representative of most people’s decently well-formed feeds. I know that some people have worse feeds, and that Mark Pilgrim’s feeds are a bit too “academically” correct.\nDunstan has a problem with his feed. He uses the numeric entity for a “smart-apostrophe” in his feed’s \u0026lt;title\u0026gt; tag. This happens to be a UTF–8 character. For whatever reason, parsing his feed in every PHP-based feed reader I’ve ever used displays that smart-apostrophe as a question mark. In wanting to build a “feed parser for the rest of us”, I decided to be smart and wrap a CDATA section around the contents of the \u0026lt;title\u0026gt;, \u0026lt;link\u0026gt;, and \u0026lt;description\u0026gt; on the fly for those that don’t already have them. Dunstan’s question mark becomes the character that it’s supposed to be. No problem.\nOn the other hand, Andrei also has a problem with his feed. Well, not really… it’s just that the fix I put in place to fix Dunstan’s feed broke Andrei’s feed. Andrei does a fake-out with his CDATA sections. He closes the CDATA section in \u0026lt;description\u0026gt;, then has one last bit of content before closing the tag. This is just enough to get past SimplePie’s logic. Wonderful.\nSince Dunstan’s issue is only in the feed’s \u0026lt;title\u0026gt; tag, I went ahead and changed how SimplePie handles the feeds by removing the code for wrapping CDATA sections around \u0026lt;link\u0026gt; and \u0026lt;description\u0026gt;. Both Dunstan and Andrei have working feeds again.\nThen, I go and test it on Mark’s Feed Parser project feed. SimplePie breaks down again. Well, crap. Instead of using \u0026lt;title\u0026gt; like normal people, Mark has to be all cool by using \u0026lt;title type=\u0026quot;text/plain\u0026quot;\u0026gt;. Argh.\nSo, I’m off to find some code that can resolve this little quarrel. I’m thinking about going through and looking for UTF–8 entities (4-digit, typically begins with an 8: \u0026amp;#8217;) and wrapping CDATA sections around those entities alone, which will probably work. I don’t want to release this software as 1.0 until it performs satisfactorily with every single feed in my entire reading list.\nVersion 0.92 is on it’s way here folks. Andrew, how’s that WordPress plug-in coming along?\n",
        "source":"\n…well, their syndication feeds anyways. Here’s the problem:\n\nWhile working on [SimplePie](/projects/simplepie/) initially, I used copies of [Dunstan’s]({{% wayback \"http://www.1976design.com/blog/\" %}}) Atom and RSS feeds because I felt that they’d be representative of most people’s decently well-formed feeds. I know that some people have worse feeds, and that [Mark Pilgrim’s]({{% wayback \"http://www.diveintomark.org\" %}}) feeds are a bit too “academically” correct.\n\nDunstan has a problem with his feed. He uses the numeric entity for a “smart-apostrophe” in his feed’s `\u003ctitle\u003e` tag. This happens to be a UTF–8 character. For whatever reason, parsing his feed in every PHP-based feed reader I’ve ever used displays that smart-apostrophe as a question mark. In wanting to build a “feed parser for the rest of us”, I decided to be smart and wrap a CDATA section around the contents of the `\u003ctitle\u003e`, `\u003clink\u003e`, and `\u003cdescription\u003e` on the fly for those that don’t already have them. Dunstan’s question mark becomes the character that it’s supposed to be. No problem.\n\nOn the other hand, [Andrei]({{% wayback \"http://www.designbyfire.com\" %}}) also has a problem with his feed. Well, not really… it’s just that the fix I put in place to fix Dunstan’s feed broke Andrei’s feed. Andrei does a fake-out with his CDATA sections. He closes the CDATA section in `\u003cdescription\u003e`, then has one last bit of content before closing the tag. This is just enough to get past SimplePie’s logic. Wonderful.\n\nSince Dunstan’s issue is only in the feed’s `\u003ctitle\u003e` tag, I went ahead and changed how SimplePie handles the feeds by removing the code for wrapping CDATA sections around `\u003clink\u003e` and `\u003cdescription\u003e`. Both Dunstan and Andrei have working feeds again.\n\nThen, I go and test it on [Mark’s]({{% wayback \"http://www.diveintomark.org\" %}}) Feed Parser project feed. SimplePie breaks down again. Well, crap. Instead of using `\u003ctitle\u003e` like normal people, Mark has to be all cool by using `\u003ctitle type=\"text/plain\"\u003e`. Argh.\n\nSo, I’m off to find some code that can resolve this little quarrel. I’m thinking about going through and looking for UTF–8 entities (4-digit, typically begins with an 8: `\u0026#8217;`) and wrapping CDATA sections around those entities alone, which will probably work. I don’t want to release this software as 1.0 until it performs satisfactorily with every single feed in my entire [reading list](/blogs/).\n\nVersion 0.92 is ~~on it’s way~~ [here](/projects/simplepie/) folks. [Andrew]({{% wayback \"http://www.leftjustified.net\" %}}), how’s that WordPress plug-in coming along?\n"},
    "links": {
        "prev": {"title": "Newer.  Better.  Simpler.", "permalink": "https://ryanparman.com/posts/2004/newer-better-simpler/"},
        "next": {"title": "Newer-er.  Better-er.  Simpler-er.", "permalink": "https://ryanparman.com/posts/2004/newer-er-better-er-simpler-er/"},
        "ignore": "me"
    }
}

}
