{
    "data": {
    "kind": "page",
    "title": "Simple PHP Gallery 1.1",
    "description": "",
    "summary": {
        "content": "Paul Griffin has just released SPG 1.1! For those who aren’t familiar with this project, Simple PHP Gallery is exactly that—an easy-to-use image gallery system, written in PHP. There are several new features listed on Paul’s SPG Mini-Site, but there are a few that are my favorites (as I was a beta tester for this and the last versions): Image Precaching This was one of the two features that I actually coded the original code for *grin*. In v1.0 and the early v1.",
        "isTruncated": true
    },
    "published": "2004-11-19T16:42:06Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/simple-php-gallery-11/",
    "relativePermalink": "/posts/2004/simple-php-gallery-11/",
    "aliases": ["/2004/11/19/simple-php-gallery-11/"],
    "images": [],
    "videos": [],
    "categories": ["Projects and Code"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 695,
        "readingTime": "4 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20041119-simple-php-gallery-11.md",
        "logicalName": "20041119-simple-php-gallery-11.md",
        "translationBaseName": "20041119-simple-php-gallery-11",
        "baseFileName": "20041119-simple-php-gallery-11",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#image-precaching\"\u003eImage Precaching\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#image-resizing\"\u003eImage Resizing\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#accesskey-navigation\"\u003eAccesskey Navigation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#automatically-generated-sub-folder-details\"\u003eAutomatically Generated Sub-Folder Details\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#conclusion\"\u003eConclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003e\u003ca href=\"https://web.archive.org/web/20041119164206/http://www.relativelyabsolute.com\"\u003ePaul Griffin\u003c/a\u003e has just released \u003ca href=\"https://web.archive.org/web/20041119164206/http://www.relativelyabsolute.com/spg/\"\u003eSPG 1.1\u003c/a\u003e! For those who aren’t familiar with this project, Simple PHP Gallery is exactly that—an easy-to-use image gallery system, written in PHP.\u003c/p\u003e\n\u003cp\u003eThere are several new features listed on Paul’s \u003ca href=\"\"\u003eSPG Mini-Site\u003c/a\u003e, but there are a few that are my favorites (as I was a beta tester for this and the last versions):\u003c/p\u003e\n\u003ch2 id=\"image-precaching\"\u003eImage Precaching\u003c/h2\u003e\n\u003cp\u003eThis was one of the two features that I actually coded the original code for *grin*. In v1.0 and the early v1.1 betas, I got tired of clicking the Next and Previous buttons and having to wait for the new image to load, after I’d just spent several seconds looking at a single picture. It didn’t seem very efficient to me, so I figured why not allow the image loading to happen in the background while I’m spending time looking at this picture anyways.\u003c/p\u003e\n\u003cp\u003eSo, what I did was I figured out what images the Next and Previous buttons were pointing to (which is all dynamic, BTW), and added the Next and Previous to the page at a size of 1x1. I then added inline styles to the image that absolutely positioned them to the top-left corner of the page, and set the visibility to hidden. Doing so allowed the images to load into the cache, while remaining invisible to CSS-enabled browsers (and as two 1 pixel dots on CSS-disabled browsers).\u003c/p\u003e\n\u003cp\u003eVoila! Image precaching for the previous and next images in sequence.\u003c/p\u003e\n\u003ch2 id=\"image-resizing\"\u003eImage Resizing\u003c/h2\u003e\n\u003cp\u003eDo you have a digital camera that takes pictures at a ridiculously gargantuan size? I used to have one that saved images at 1600x1200. With this feature, you can upload these images, and they will automatically be resized and cached according to the settings in your \u003ccode\u003esp_config.php\u003c/code\u003e file. Very useful.\u003c/p\u003e\n\u003ch2 id=\"accesskey-navigation\"\u003eAccesskey Navigation\u003c/h2\u003e\n\u003cp\u003eThis was my first suggestion for features in SPG 1.1 after 1.0 launched. I took a 3ds Max class in college, and we had to build something cool from the things we’d learned in the class, and make both a still frame as well as a short rendered video. Mine was about \u003ca href=\"/portfolio/threemacs/\"\u003e3 Macs\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAnyways, I went online to grab various images about the computers that I was going to be building. At first, I’d have to open one, then another, then another. Tiring of this quickly, I wrote up a quick HTML page with a JavaScript that would allow me to simply hit Previous or Next to move from one image to the next. The it dawned on me to use accesskeys, since I knew they at least worked in IE and Mozilla (this was during the pre-Firefox “Phoenix” days).\u003c/p\u003e\n\u003cp\u003eInstantly, I was able to hit Alt+Plus and Alt+Minus to move back and forth through the images. When I recommended this to Paul, we had some discussion, and this is what ended up getting implemented:\u003c/p\u003e\n\u003cp\u003eThe Previous button is Alt+Minus[-]. The Next button is both Alt+Plus[+] as well as Alt+Equals[=]. This is because most QWERTY-language desktop keyboards have a 10-key number pad on the right where [+] and [-] are right next to each other. Most laptops, however, don’t have that, but rather a [-/_] key right next to a [=/+] key (where you have to press shift for the latter). This means that you’d have to press Alt+Minus to move back, and Alt+Shift+Plus to move forward, and that sucks. Allowing Alt+Equals to move forward makes it easy for both Laptop and Desktop QWERTY-keyboards.\u003c/p\u003e\n\u003ch2 id=\"automatically-generated-sub-folder-details\"\u003eAutomatically Generated Sub-Folder Details\u003c/h2\u003e\n\u003cp\u003eThis was yet another idea that I had for the 1.1 release, and that was to add the number of images in a folder, much like how many people will display the number of comments a blog post has. It just seemed to make sense.\u003c/p\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003ePaul has done a terrific job with writing this software, and I have really enjoyed the opportunity to be a part of it. Heck, I’m probably just as proud of this release as he is, and I’m excited that so many of my suggestions made it into the final release. If you’ve got an image gallery, or you’ve been thinking of setting one up, I would highly recommend Paul Griffin’s \u003ca href=\"https://web.archive.org/web/20041119164206/http://www.relativelyabsolute.com/spg/\"\u003eSimple PHP Gallery\u003c/a\u003e.\u003c/p\u003e\n",
        "plain":"Paul Griffin has just released SPG 1.1! For those who aren’t familiar with this project, Simple PHP Gallery is exactly that—an easy-to-use image gallery system, written in PHP.\nThere are several new features listed on Paul’s SPG Mini-Site, but there are a few that are my favorites (as I was a beta tester for this and the last versions):\nImage Precaching This was one of the two features that I actually coded the original code for *grin*. In v1.0 and the early v1.1 betas, I got tired of clicking the Next and Previous buttons and having to wait for the new image to load, after I’d just spent several seconds looking at a single picture. It didn’t seem very efficient to me, so I figured why not allow the image loading to happen in the background while I’m spending time looking at this picture anyways.\nSo, what I did was I figured out what images the Next and Previous buttons were pointing to (which is all dynamic, BTW), and added the Next and Previous to the page at a size of 1x1. I then added inline styles to the image that absolutely positioned them to the top-left corner of the page, and set the visibility to hidden. Doing so allowed the images to load into the cache, while remaining invisible to CSS-enabled browsers (and as two 1 pixel dots on CSS-disabled browsers).\nVoila! Image precaching for the previous and next images in sequence.\nImage Resizing Do you have a digital camera that takes pictures at a ridiculously gargantuan size? I used to have one that saved images at 1600x1200. With this feature, you can upload these images, and they will automatically be resized and cached according to the settings in your sp_config.php file. Very useful.\nAccesskey Navigation This was my first suggestion for features in SPG 1.1 after 1.0 launched. I took a 3ds Max class in college, and we had to build something cool from the things we’d learned in the class, and make both a still frame as well as a short rendered video. Mine was about 3 Macs.\nAnyways, I went online to grab various images about the computers that I was going to be building. At first, I’d have to open one, then another, then another. Tiring of this quickly, I wrote up a quick HTML page with a JavaScript that would allow me to simply hit Previous or Next to move from one image to the next. The it dawned on me to use accesskeys, since I knew they at least worked in IE and Mozilla (this was during the pre-Firefox “Phoenix” days).\nInstantly, I was able to hit Alt+Plus and Alt+Minus to move back and forth through the images. When I recommended this to Paul, we had some discussion, and this is what ended up getting implemented:\nThe Previous button is Alt+Minus[-]. The Next button is both Alt+Plus[+] as well as Alt+Equals[=]. This is because most QWERTY-language desktop keyboards have a 10-key number pad on the right where [+] and [-] are right next to each other. Most laptops, however, don’t have that, but rather a [-/_] key right next to a [=/+] key (where you have to press shift for the latter). This means that you’d have to press Alt+Minus to move back, and Alt+Shift+Plus to move forward, and that sucks. Allowing Alt+Equals to move forward makes it easy for both Laptop and Desktop QWERTY-keyboards.\nAutomatically Generated Sub-Folder Details This was yet another idea that I had for the 1.1 release, and that was to add the number of images in a folder, much like how many people will display the number of comments a blog post has. It just seemed to make sense.\nConclusion Paul has done a terrific job with writing this software, and I have really enjoyed the opportunity to be a part of it. Heck, I’m probably just as proud of this release as he is, and I’m excited that so many of my suggestions made it into the final release. If you’ve got an image gallery, or you’ve been thinking of setting one up, I would highly recommend Paul Griffin’s Simple PHP Gallery.\n",
        "source":"\n[Paul Griffin]({{% wayback \"http://www.relativelyabsolute.com\" %}}) has just released [SPG 1.1]({{% wayback \"http://www.relativelyabsolute.com/spg/\" %}})! For those who aren’t familiar with this project, Simple PHP Gallery is exactly that—an easy-to-use image gallery system, written in PHP.\n\nThere are several new features listed on Paul’s [SPG Mini-Site](), but there are a few that are my favorites (as I was a beta tester for this and the last versions):\n\n## Image Precaching\n\nThis was one of the two features that I actually coded the original code for \\*grin\\*. In v1.0 and the early v1.1 betas, I got tired of clicking the Next and Previous buttons and having to wait for the new image to load, after I’d just spent several seconds looking at a single picture. It didn’t seem very efficient to me, so I figured why not allow the image loading to happen in the background while I’m spending time looking at this picture anyways.\n\nSo, what I did was I figured out what images the Next and Previous buttons were pointing to (which is all dynamic, BTW), and added the Next and Previous to the page at a size of 1x1. I then added inline styles to the image that absolutely positioned them to the top-left corner of the page, and set the visibility to hidden. Doing so allowed the images to load into the cache, while remaining invisible to CSS-enabled browsers (and as two 1 pixel dots on CSS-disabled browsers).\n\nVoila! Image precaching for the previous and next images in sequence.\n\n## Image Resizing\n\nDo you have a digital camera that takes pictures at a ridiculously gargantuan size? I used to have one that saved images at 1600x1200. With this feature, you can upload these images, and they will automatically be resized and cached according to the settings in your `sp_config.php` file. Very useful.\n\n## Accesskey Navigation\n\nThis was my first suggestion for features in SPG 1.1 after 1.0 launched. I took a 3ds Max class in college, and we had to build something cool from the things we’d learned in the class, and make both a still frame as well as a short rendered video. Mine was about [3 Macs](/portfolio/threemacs/).\n\nAnyways, I went online to grab various images about the computers that I was going to be building. At first, I’d have to open one, then another, then another. Tiring of this quickly, I wrote up a quick HTML page with a JavaScript that would allow me to simply hit Previous or Next to move from one image to the next. The it dawned on me to use accesskeys, since I knew they at least worked in IE and Mozilla (this was during the pre-Firefox “Phoenix” days).\n\nInstantly, I was able to hit Alt+Plus and Alt+Minus to move back and forth through the images. When I recommended this to Paul, we had some discussion, and this is what ended up getting implemented:\n\nThe Previous button is Alt+Minus\\[-\\]. The Next button is both Alt+Plus\\[+\\] as well as Alt+Equals\\[=\\]. This is because most QWERTY-language desktop keyboards have a 10-key number pad on the right where \\[+\\] and \\[-\\] are right next to each other. Most laptops, however, don’t have that, but rather a \\[-/\\_\\] key right next to a \\[=/+\\] key (where you have to press shift for the latter). This means that you’d have to press Alt+Minus to move back, and Alt+Shift+Plus to move forward, and that sucks. Allowing Alt+Equals to move forward makes it easy for both Laptop and Desktop QWERTY-keyboards.\n\n## Automatically Generated Sub-Folder Details\n\nThis was yet another idea that I had for the 1.1 release, and that was to add the number of images in a folder, much like how many people will display the number of comments a blog post has. It just seemed to make sense.\n\n## Conclusion\n\nPaul has done a terrific job with writing this software, and I have really enjoyed the opportunity to be a part of it. Heck, I’m probably just as proud of this release as he is, and I’m excited that so many of my suggestions made it into the final release. If you’ve got an image gallery, or you’ve been thinking of setting one up, I would highly recommend Paul Griffin’s [Simple PHP Gallery]({{% wayback \"http://www.relativelyabsolute.com/spg/\" %}}).\n"},
    "links": {
        "prev": {"title": "I Got iBalls… I mean iSight", "permalink": "https://ryanparman.com/posts/2004/i-got-iballs-i-mean-isight/"},
        "next": {"title": "Our First Christmas Tree", "permalink": "https://ryanparman.com/posts/2004/our-first-christmas-tree/"},
        "ignore": "me"
    }
}

}
