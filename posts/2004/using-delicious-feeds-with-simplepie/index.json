{
    "data": {
    "kind": "page",
    "title": "Using Del.icio.us Feeds With SimplePie",
    "description": "",
    "summary": {
        "content": "I know that a lot of people are using Magpie RSS to power their del.icio.us sidebar links, so I figured I’d throw out a code sample showing how you could use SimplePie for the same task. If you need to come to terms with why SimplePie might be a better choice of RSS parser, check out the SimplePie project page. The only other thing that might be worth mentioning is that SimplePie still has a difficult time with non-encoded special characters in feeds and feeds in non-western-european/non-american/non-australian languages.",
        "isTruncated": true
    },
    "published": "2004-12-14T05:42:42Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/using-delicious-feeds-with-simplepie/",
    "relativePermalink": "/posts/2004/using-delicious-feeds-with-simplepie/",
    "aliases": ["/2004/12/13/using-delicious-feeds-with-simplepie/"],
    "images": [],
    "videos": [],
    "categories": ["Projects and Code"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 504,
        "readingTime": "3 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20041214-using-delicious-feeds-with-simplepie.md",
        "logicalName": "20041214-using-delicious-feeds-with-simplepie.md",
        "translationBaseName": "20041214-using-delicious-feeds-with-simplepie",
        "baseFileName": "20041214-using-delicious-feeds-with-simplepie",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eI know that a lot of people are using Magpie RSS to power their del.icio.us sidebar links, so I figured I’d throw out a code sample showing how you could use SimplePie for the same task. If you need to come to terms with why SimplePie might be a better choice of RSS parser, check out the \u003ca href=\"/projects/simplepie/\"\u003eSimplePie project page\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe only other thing that might be worth mentioning is that SimplePie still has a difficult time with non-encoded special characters in feeds and feeds in non-western-european/non-american/non-australian languages. Beyond that, it’s pretty solid so far.\u003c/p\u003e\n\u003cp\u003eNow, before I get to explaining, I’ll point to a \u003ca href=\"/dev/simplepie/delicious/\"\u003edel.icio.us demo\u003c/a\u003e with SimplePie in action. Now, here’s the code as a whole:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-php\" data-lang=\"php\"\u003e\u003cspan style=\"color:#75715e\"\u003e\u0026lt;?php\u003c/span\u003e\n\u003cspan style=\"color:#66d9ef\"\u003einclude_once\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;../simplepie.inc\u0026#34;\u003c/span\u003e);\n\n\u003cspan style=\"color:#f92672\"\u003e@\u003c/span\u003e$rss \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esimplepie\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http://del.icio.us/rss/tag/web\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0.02\u003c/span\u003e);\n\n\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e ($rss \u003cspan style=\"color:#f92672\"\u003e!=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e) {\n    \u003cspan style=\"color:#66d9ef\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026lt;p\u0026gt;Reading from \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eget_feed_url\u003c/span\u003e() \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026lt;/p\u0026gt;\u0026#34;\u003c/span\u003e);\n    \u003cspan style=\"color:#66d9ef\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026lt;ul\u0026gt;\u0026#34;\u003c/span\u003e);\n\n    \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e ($x\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e; $x \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e15\u003c/span\u003e; $x\u003cspan style=\"color:#f92672\"\u003e++\u003c/span\u003e) {\n        \u003cspan style=\"color:#66d9ef\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eget_item_permalink\u003c/span\u003e($x, $rss) \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#34;\u0026gt;\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eget_item_title\u003c/span\u003e($x, $rss) \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u0026#39;\u003c/span\u003e);\n    }\n\n    \u003cspan style=\"color:#66d9ef\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026lt;/ul\u0026gt;\u0026#34;\u003c/span\u003e);\n}\n\u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e {\n    \u003cspan style=\"color:#66d9ef\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;The del.icio.us feed is not currently available.\u0026#34;\u003c/span\u003e);\n}\n\n\u003cspan style=\"color:#66d9ef\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Powered by \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esp_linkback\u003c/span\u003e());\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLet’s begin with the first part, \u003ccode\u003einclude_once(\u0026quot;../simplepie.inc\u0026quot;);\u003c/code\u003e. This is an instance of including the SimplePie library. In my example, the \u003ccode\u003esimplepie.inc\u003c/code\u003e file is located in the subdirectory.\u003c/p\u003e\n\u003cp\u003eThe next line is where we start processing the rss feed:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-php\" data-lang=\"php\"\u003e\u003cspan style=\"color:#75715e\"\u003e\u0026lt;?php\u003c/span\u003e\n\u003cspan style=\"color:#f92672\"\u003e@\u003c/span\u003e$rss \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esimplepie\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http://del.icio.us/rss/tag/web\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e0.02\u003c/span\u003e);\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eWe start by passing the first parameter, which tells SimplePie where the feed is that we want to process. The second parameter asks whether or not to enable a mode called XMLDump, which we don’t need for this excersize. The third parameter asks whether we want to cache the feed that we’re reading. Since SimplePie currently doesn’t work if the feed isn’t cached (unless it’s a local file), this needs to be true. Lastly, we tell SimplePie how many hours before refreshing the cached feed. We then set the feed to the \u003ccode\u003e$rss\u003c/code\u003e variable.\u003c/p\u003e\n\u003cp\u003eNext, we check whether the feed actually exists and was processed. If the expression \u003ccode\u003eif ($rss != false)\u003c/code\u003e (if \u003ccode\u003e$rss\u003c/code\u003e is not false…) is true, then we begin displaying the del.icio.us feed.\u003c/p\u003e\n\u003cp\u003eIf you so choose, you can display the URL of the feed you’re using with the \u003ccode\u003eget_feed_url()\u003c/code\u003e function. I also chose to have this display as an unordered list, since that’s really what it is.\u003c/p\u003e\n\u003cp\u003eInside of that \u003ccode\u003e\u0026lt;ul\u0026gt;\u0026lt;/ul\u0026gt;\u003c/code\u003e code block, I’ve set up a for-loop. Using \u003ccode\u003e$x\u003c/code\u003e as my counter variable, I decided to display only the most recent 15 entries. If you want to display all entries in the feed, you can use the \u003ccode\u003eget_item_quantity($rss)\u003c/code\u003e function.\u003c/p\u003e\n\u003cp\u003eAs a backup plan, I like to add a short message for when the feed isn’t working. In my case, I said that “The del.icio.us feed is not currently available.” Simple and to-the-point.\u003c/p\u003e\n\u003cp\u003eNext, you want to tell everybody how you made all of this really cool stuff happen by linking back to the SimplePie project page. The easiest way is with the \u003ccode\u003esp_linkback()\u003c/code\u003e function.\u003c/p\u003e\n\u003cp\u003eThere! You should now have a fully-functional del.icio.us sidebar right there in your website.\u003c/p\u003e\n",
        "plain":"I know that a lot of people are using Magpie RSS to power their del.icio.us sidebar links, so I figured I’d throw out a code sample showing how you could use SimplePie for the same task. If you need to come to terms with why SimplePie might be a better choice of RSS parser, check out the SimplePie project page.\nThe only other thing that might be worth mentioning is that SimplePie still has a difficult time with non-encoded special characters in feeds and feeds in non-western-european/non-american/non-australian languages. Beyond that, it’s pretty solid so far.\nNow, before I get to explaining, I’ll point to a del.icio.us demo with SimplePie in action. Now, here’s the code as a whole:\n\u0026lt;?php include_once(\u0026#34;../simplepie.inc\u0026#34;); @$rss = simplepie(\u0026#34;http://del.icio.us/rss/tag/web\u0026#34;, false, true, 0.02); if ($rss != false) { print(\u0026#34;\u0026lt;p\u0026gt;Reading from \u0026#34; . get_feed_url() . \u0026#34;\u0026lt;/p\u0026gt;\u0026#34;); print(\u0026#34;\u0026lt;ul\u0026gt;\u0026#34;); for ($x=0; $x \u0026lt; 15; $x++) { print(\u0026#39;\u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;\u0026#39; . get_item_permalink($x, $rss) . \u0026#39;\u0026#34;\u0026gt;\u0026#39; . get_item_title($x, $rss) . \u0026#39;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u0026#39;); } print(\u0026#34;\u0026lt;/ul\u0026gt;\u0026#34;); } else { print(\u0026#34;The del.icio.us feed is not currently available.\u0026#34;); } print(\u0026#34;Powered by \u0026#34; . sp_linkback()); Let’s begin with the first part, include_once(\u0026quot;../simplepie.inc\u0026quot;);. This is an instance of including the SimplePie library. In my example, the simplepie.inc file is located in the subdirectory.\nThe next line is where we start processing the rss feed:\n\u0026lt;?php @$rss = simplepie(\u0026#34;http://del.icio.us/rss/tag/web\u0026#34;, false, true, 0.02); We start by passing the first parameter, which tells SimplePie where the feed is that we want to process. The second parameter asks whether or not to enable a mode called XMLDump, which we don’t need for this excersize. The third parameter asks whether we want to cache the feed that we’re reading. Since SimplePie currently doesn’t work if the feed isn’t cached (unless it’s a local file), this needs to be true. Lastly, we tell SimplePie how many hours before refreshing the cached feed. We then set the feed to the $rss variable.\nNext, we check whether the feed actually exists and was processed. If the expression if ($rss != false) (if $rss is not false…) is true, then we begin displaying the del.icio.us feed.\nIf you so choose, you can display the URL of the feed you’re using with the get_feed_url() function. I also chose to have this display as an unordered list, since that’s really what it is.\nInside of that \u0026lt;ul\u0026gt;\u0026lt;/ul\u0026gt; code block, I’ve set up a for-loop. Using $x as my counter variable, I decided to display only the most recent 15 entries. If you want to display all entries in the feed, you can use the get_item_quantity($rss) function.\nAs a backup plan, I like to add a short message for when the feed isn’t working. In my case, I said that “The del.icio.us feed is not currently available.” Simple and to-the-point.\nNext, you want to tell everybody how you made all of this really cool stuff happen by linking back to the SimplePie project page. The easiest way is with the sp_linkback() function.\nThere! You should now have a fully-functional del.icio.us sidebar right there in your website.\n",
        "source":"\nI know that a lot of people are using Magpie RSS to power their del.icio.us sidebar links, so I figured I’d throw out a code sample showing how you could use SimplePie for the same task. If you need to come to terms with why SimplePie might be a better choice of RSS parser, check out the [SimplePie project page](/projects/simplepie/).\n\nThe only other thing that might be worth mentioning is that SimplePie still has a difficult time with non-encoded special characters in feeds and feeds in non-western-european/non-american/non-australian languages. Beyond that, it’s pretty solid so far.\n\nNow, before I get to explaining, I’ll point to a [del.icio.us demo](/dev/simplepie/delicious/) with SimplePie in action. Now, here’s the code as a whole:\n\n```php\n\u003c?php\ninclude_once(\"../simplepie.inc\");\n\n@$rss = simplepie(\"http://del.icio.us/rss/tag/web\", false, true, 0.02);\n\nif ($rss != false) {\n    print(\"\u003cp\u003eReading from \" . get_feed_url() . \"\u003c/p\u003e\");\n    print(\"\u003cul\u003e\");\n\n    for ($x=0; $x \u003c 15; $x++) {\n        print('\u003cli\u003e\u003ca href=\"' . get_item_permalink($x, $rss) . '\"\u003e' . get_item_title($x, $rss) . '\u003c/a\u003e\u003c/li\u003e');\n    }\n\n    print(\"\u003c/ul\u003e\");\n}\nelse {\n    print(\"The del.icio.us feed is not currently available.\");\n}\n\nprint(\"Powered by \" . sp_linkback());\n```\n\nLet’s begin with the first part, `include_once(\"../simplepie.inc\");`. This is an instance of including the SimplePie library. In my example, the `simplepie.inc` file is located in the subdirectory.\n\nThe next line is where we start processing the rss feed:\n\n```php\n\u003c?php\n@$rss = simplepie(\"http://del.icio.us/rss/tag/web\", false, true, 0.02);\n```\n\nWe start by passing the first parameter, which tells SimplePie where the feed is that we want to process. The second parameter asks whether or not to enable a mode called XMLDump, which we don’t need for this excersize. The third parameter asks whether we want to cache the feed that we’re reading. Since SimplePie currently doesn’t work if the feed isn’t cached (unless it’s a local file), this needs to be true. Lastly, we tell SimplePie how many hours before refreshing the cached feed. We then set the feed to the `$rss` variable.\n\nNext, we check whether the feed actually exists and was processed. If the expression `if ($rss != false)` (if `$rss` is not false…) is true, then we begin displaying the del.icio.us feed.\n\nIf you so choose, you can display the URL of the feed you’re using with the `get_feed_url()` function. I also chose to have this display as an unordered list, since that’s really what it is.\n\nInside of that `\u003cul\u003e\u003c/ul\u003e` code block, I’ve set up a for-loop. Using `$x` as my counter variable, I decided to display only the most recent 15 entries. If you want to display all entries in the feed, you can use the `get_item_quantity($rss)` function.\n\nAs a backup plan, I like to add a short message for when the feed isn’t working. In my case, I said that “The del.icio.us feed is not currently available.” Simple and to-the-point.\n\nNext, you want to tell everybody how you made all of this really cool stuff happen by linking back to the SimplePie project page. The easiest way is with the `sp_linkback()` function.\n\nThere! You should now have a fully-functional del.icio.us sidebar right there in your website.\n"},
    "links": {
        "prev": {"title": "Happy Birthday, Emily Ann Boydston", "permalink": "https://ryanparman.com/posts/2004/happy-birthday-emily-ann-boydston/"},
        "next": {"title": "God Came Near", "permalink": "https://ryanparman.com/posts/2004/god-came-near/"},
        "ignore": "me"
    }
}

}
