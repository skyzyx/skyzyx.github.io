{
    "data": {
    "kind": "page",
    "title": "Things I learned about how websites manage passwords",
    "description": "",
    "summary": {
        "content": "I recently wrote about the work I did to change every single password I had into ones that were unique for every site, and far more difficult to brute-force due to their long and randomized nature. As part of this exercise, I was essentially trying to change 250 passwords on 250 websites as quickly as possible. When you do this, you end up seeing trends and patterns across unrelated sites that you might not have noticed otherwise. Observations Here are some of the patterns I observed about how websites manage passwords:",
        "isTruncated": true
    },
    "published": "2013-08-10T09:30:18Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2013/things-i-learned-about-how-websites-manage-passwords/",
    "relativePermalink": "/posts/2013/things-i-learned-about-how-websites-manage-passwords/",
    "aliases": ["/2013/08/10/things-i-learned-about-how-websites-manage-passwords/"],
    "images": ["https://cdn.ryanparman.com/hugo/posts/2014/password-day@2x.jpg"],
    "videos": [],
    "categories": ["Privacy and Security"],
    "tags": ["passwords", "authy", "openid", "multifactor authentication", "enterprise"],
    "series": ["Editors Choice", "Passwords"],
    "keywords": [],
    "meta": {
        "wordCount": 668,
        "readingTime": "4 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2013/20130810-things-i-learned-about-how-websites-manage-passwords.md",
        "logicalName": "20130810-things-i-learned-about-how-websites-manage-passwords.md",
        "translationBaseName": "20130810-things-i-learned-about-how-websites-manage-passwords",
        "baseFileName": "20130810-things-i-learned-about-how-websites-manage-passwords",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2013/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#observations\"\u003eObservations\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#conclusion\"\u003eConclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp itemprop=\"description\" class=\"f5 f4-m f3-l mt0 lh-copy p-summary entry-summary\"\u003e\n\u003ca href=\"/2013/08/10/breaking-my-bad-password-habits-with-1password-authy-oauth-openid/\"\u003eI recently wrote about the work I did\u003c/a\u003e to change every single password I had into ones that were unique for every site, and far more difficult to brute-force due to their long and randomized nature.\n\u003c/p\u003e\n\n\u003cdiv class=\"pa2-ns\"\u003e\n\t\u003camp-img src=\"https://cdn.ryanparman.com/hugo/posts/2014/password-day@2x.jpg\" layout=\"responsive\" width=\"\" height=\"\"\u003e\u003c/amp-img\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eAs part of this exercise, I was essentially trying to change 250 passwords on 250 websites as quickly as possible. When you do this, you end up seeing trends and patterns across unrelated sites that you might not have noticed otherwise.\u003c/p\u003e\n\u003ch2 id=\"observations\"\u003eObservations\u003c/h2\u003e\n\u003cp\u003eHere are some of the patterns I observed about how websites manage passwords:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eThe Login/Sign-in link is typically in the upper-right part of the global navigation bar.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eVery few sites support OpenID logins anymore. :(\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eVery few sites support OAuth logins, but many will pre-fill registration forms using OAuth. We still end up with multiple accounts and multiple passwords across the board. (Missing the point, much?)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eI can count on 3–4 hands the number of sites I use that offer Multi-Factor Authentication options for increased security.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDifferent companies use the words “account”, “preferences” and “settings” differently. Sometimes they use more than one of these words in their UI, and they don’t always mean the same thing for everybody. Sometimes I would log into a site and click through “preferences” and “settings” until I found where I could change my password.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSome websites didn’t offer a way to change my password \u003cem\u003eat all\u003c/em\u003e (e.g., Authy, Lockitron). In those cases, I had to pretend that I forgot my password so that I could logout and go through the “forgot password” flow to change it.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMost were pretty good about telling me about success/failure of changing my password. Some didn’t say anything, so I tried again to see if it worked.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe more enterprise-focused a company was, the worse its password requirements and/or tools were (e.g., Microsoft, VMware). There were a few customer-facing sites that had bad handling as well (e.g., Redbox).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA surprising number of sites either offered \u003cem\u003eno information\u003c/em\u003e about the password requirements, \u003cem\u003esome information\u003c/em\u003e, or occasionally \u003cem\u003ewrong information\u003c/em\u003e. It wasn’t until I tried to paste a 24-character password with special characters that some sites freaked-out. Some told me that my password was invalid, but changed it successfully, leaving me in a weird state. Some took the password and told me everything was successful, then wouldn’t let me log in again.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSites tend to make one very specific assumption: \u003cem\u003eYou know what your new password is going to be.\u003c/em\u003e I didn’t. Paypal even goes so far as to use JavaScript to disallow copy-pasting so that you’re forced to know your password, even if you don’t want to. I had to open up the Web Inspector tools to manually override this \u003cem\u003ehateful\u003c/em\u003e behavior.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAs part of the aforementioned assumption, about 70% of sites require the old password while applying the new password. 30% of sites simply allow you to apply the new password since you’re already logged-in anyway. However, there are some sites which \u003cem\u003ehide\u003c/em\u003e the “old password” field until you’ve started typing a new password. Since you don’t know what the newly-generated password is, you then need to temporarily paste it somewhere, dig up the old password, paste that, then re-copy the new password from wherever you stashed it.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSome sites separate the username field and the password field by putting them on separate pages. Instead of talking about how that can actually \u003cem\u003ehurt\u003c/em\u003e security, I’ll just say that the only sites I saw that did this were banking/financial websites (except for \u003ca href=\"https://web.archive.org/web/20130810093018/http://simple.com\"\u003eSimple.com\u003c/a\u003e, of course), and Verizon Wireless. Go figure.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eWe, as a web-building culture, have absolutely no idea what we’re doing when it comes to handling passwords. Many of us don’t understand the first thing about the balance between convenience and security. Heck, some sites are both inconvenient \u003cem\u003eand\u003c/em\u003e insecure.\u003c/p\u003e\n\u003cp\u003eIMO, this should be the very next thing that Software Engineers and UX Practitioners work together on to solve: When you’re stuck with the “Password Anti-pattern”, how can we ensure a secure experience that isn’t cumbersome to human beings?\u003c/p\u003e\n",
        "plain":"I recently wrote about the work I did to change every single password I had into ones that were unique for every site, and far more difficult to brute-force due to their long and randomized nature.   As part of this exercise, I was essentially trying to change 250 passwords on 250 websites as quickly as possible. When you do this, you end up seeing trends and patterns across unrelated sites that you might not have noticed otherwise.\nObservations Here are some of the patterns I observed about how websites manage passwords:\n  The Login/Sign-in link is typically in the upper-right part of the global navigation bar.\n  Very few sites support OpenID logins anymore. :(\n  Very few sites support OAuth logins, but many will pre-fill registration forms using OAuth. We still end up with multiple accounts and multiple passwords across the board. (Missing the point, much?)\n  I can count on 3–4 hands the number of sites I use that offer Multi-Factor Authentication options for increased security.\n  Different companies use the words “account”, “preferences” and “settings” differently. Sometimes they use more than one of these words in their UI, and they don’t always mean the same thing for everybody. Sometimes I would log into a site and click through “preferences” and “settings” until I found where I could change my password.\n  Some websites didn’t offer a way to change my password at all (e.g., Authy, Lockitron). In those cases, I had to pretend that I forgot my password so that I could logout and go through the “forgot password” flow to change it.\n  Most were pretty good about telling me about success/failure of changing my password. Some didn’t say anything, so I tried again to see if it worked.\n  The more enterprise-focused a company was, the worse its password requirements and/or tools were (e.g., Microsoft, VMware). There were a few customer-facing sites that had bad handling as well (e.g., Redbox).\n  A surprising number of sites either offered no information about the password requirements, some information, or occasionally wrong information. It wasn’t until I tried to paste a 24-character password with special characters that some sites freaked-out. Some told me that my password was invalid, but changed it successfully, leaving me in a weird state. Some took the password and told me everything was successful, then wouldn’t let me log in again.\n  Sites tend to make one very specific assumption: You know what your new password is going to be. I didn’t. Paypal even goes so far as to use JavaScript to disallow copy-pasting so that you’re forced to know your password, even if you don’t want to. I had to open up the Web Inspector tools to manually override this hateful behavior.\n  As part of the aforementioned assumption, about 70% of sites require the old password while applying the new password. 30% of sites simply allow you to apply the new password since you’re already logged-in anyway. However, there are some sites which hide the “old password” field until you’ve started typing a new password. Since you don’t know what the newly-generated password is, you then need to temporarily paste it somewhere, dig up the old password, paste that, then re-copy the new password from wherever you stashed it.\n  Some sites separate the username field and the password field by putting them on separate pages. Instead of talking about how that can actually hurt security, I’ll just say that the only sites I saw that did this were banking/financial websites (except for Simple.com, of course), and Verizon Wireless. Go figure.\n  Conclusion We, as a web-building culture, have absolutely no idea what we’re doing when it comes to handling passwords. Many of us don’t understand the first thing about the balance between convenience and security. Heck, some sites are both inconvenient and insecure.\nIMO, this should be the very next thing that Software Engineers and UX Practitioners work together on to solve: When you’re stuck with the “Password Anti-pattern”, how can we ensure a secure experience that isn’t cumbersome to human beings?\n",
        "source":"\n{{\u003c description \u003e}}\n\u003ca href=\"/2013/08/10/breaking-my-bad-password-habits-with-1password-authy-oauth-openid/\"\u003eI recently wrote about the work I did\u003c/a\u003e to change every single password I had into ones that were unique for every site, and far more difficult to brute-force due to their long and randomized nature.\n{{\u003c /description \u003e}}\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2014/password-day@2x.jpg\"\u003e}}\n\nAs part of this exercise, I was essentially trying to change 250 passwords on 250 websites as quickly as possible. When you do this, you end up seeing trends and patterns across unrelated sites that you might not have noticed otherwise.\n\n## Observations\n\nHere are some of the patterns I observed about how websites manage passwords:\n\n1. The Login/Sign-in link is typically in the upper-right part of the global navigation bar.\n\n2. Very few sites support OpenID logins anymore. :(\n\n3. Very few sites support OAuth logins, but many will pre-fill registration forms using OAuth. We still end up with multiple accounts and multiple passwords across the board. (Missing the point, much?)\n\n4. I can count on 3–4 hands the number of sites I use that offer Multi-Factor Authentication options for increased security.\n\n5. Different companies use the words “account”, “preferences” and “settings” differently. Sometimes they use more than one of these words in their UI, and they don’t always mean the same thing for everybody. Sometimes I would log into a site and click through “preferences” and “settings” until I found where I could change my password.\n\n6. Some websites didn’t offer a way to change my password *at all* (e.g., Authy, Lockitron). In those cases, I had to pretend that I forgot my password so that I could logout and go through the “forgot password” flow to change it.\n\n7. Most were pretty good about telling me about success/failure of changing my password. Some didn’t say anything, so I tried again to see if it worked.\n\n8. The more enterprise-focused a company was, the worse its password requirements and/or tools were (e.g., Microsoft, VMware). There were a few customer-facing sites that had bad handling as well (e.g., Redbox).\n\n9. A surprising number of sites either offered *no information* about the password requirements, *some information*, or occasionally *wrong information*. It wasn’t until I tried to paste a 24-character password with special characters that some sites freaked-out. Some told me that my password was invalid, but changed it successfully, leaving me in a weird state. Some took the password and told me everything was successful, then wouldn’t let me log in again.\n\n10. Sites tend to make one very specific assumption: *You know what your new password is going to be.* I didn’t. Paypal even goes so far as to use JavaScript to disallow copy-pasting so that you’re forced to know your password, even if you don’t want to. I had to open up the Web Inspector tools to manually override this *hateful* behavior.\n\n11. As part of the aforementioned assumption, about 70% of sites require the old password while applying the new password. 30% of sites simply allow you to apply the new password since you’re already logged-in anyway. However, there are some sites which *hide* the “old password” field until you’ve started typing a new password. Since you don’t know what the newly-generated password is, you then need to temporarily paste it somewhere, dig up the old password, paste that, then re-copy the new password from wherever you stashed it.\n\n12. Some sites separate the username field and the password field by putting them on separate pages. Instead of talking about how that can actually *hurt* security, I’ll just say that the only sites I saw that did this were banking/financial websites (except for [Simple.com]({{% wayback \"http://simple.com\" %}}), of course), and Verizon Wireless. Go figure.\n\n## Conclusion\n\nWe, as a web-building culture, have absolutely no idea what we’re doing when it comes to handling passwords. Many of us don’t understand the first thing about the balance between convenience and security. Heck, some sites are both inconvenient *and* insecure.\n\nIMO, this should be the very next thing that Software Engineers and UX Practitioners work together on to solve: When you’re stuck with the “Password Anti-pattern”, how can we ensure a secure experience that isn’t cumbersome to human beings?\n"},
    "links": {
        "prev": {"title": "Breaking my bad password habits with 1Password, Authy, OAuth and OpenID", "permalink": "https://ryanparman.com/posts/2013/breaking-my-bad-password-habits-with-1password-authy-oauth-openid/"},
        "next": {"title": "Uploading web files to a new Amazon EC2 instance", "permalink": "https://ryanparman.com/posts/2013/uploading-web-files-to-a-new-amazon-ec2-instance/"},
        "ignore": "me"
    }
}

}
