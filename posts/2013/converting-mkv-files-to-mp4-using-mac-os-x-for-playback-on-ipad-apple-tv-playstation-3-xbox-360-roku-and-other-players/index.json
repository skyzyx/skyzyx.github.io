{
    "data": {
    "kind": "page",
    "title": "Converting MKV files to MP4, using Mac OS X, for playback on iPad, Apple TV, Playstation 3, Xbox 360, Roku and other players",
    "description": "",
    "summary": {
        "content": "Nearly 2 years ago, I became a Cord-Cutter. I couldn’t see the sense in paying a ton of money every month for 500 channels that I didn’t watch, just so that I could catch the occasional show. I invested in Netflix and Hulu Plus accounts so that I could watch most of my shows, and for the shows that haven’t made their way into the 21 century yet, there are plenty of places online where you can acquire the latest episodes.",
        "isTruncated": true
    },
    "published": "2013-04-10T07:45:02Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2013/converting-mkv-files-to-mp4-using-mac-os-x-for-playback-on-ipad-apple-tv-playstation-3-xbox-360-roku-and-other-players/",
    "relativePermalink": "/posts/2013/converting-mkv-files-to-mp4-using-mac-os-x-for-playback-on-ipad-apple-tv-playstation-3-xbox-360-roku-and-other-players/",
    "aliases": ["/2013/04/09/converting-mkv-files-to-mp4-using-mac-os-x-for-playback-on-ipad-apple-tv-playstation-3-xbox-360-roku-and-other-players/"],
    "images": ["https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/mkv.png"],
    "videos": [],
    "categories": ["Tutorials"],
    "tags": ["netflix", "hulu", "blu-ray", "dvd", "handbrake", "mkv", "aac", "ac3", "mp4", "h.264", "atomicparsley", "metax", "metaz", "subler", "mp4v2", "itunes"],
    "series": ["Handbrake"],
    "keywords": [],
    "meta": {
        "wordCount": 843,
        "readingTime": "4 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2013/20130410-converting-mkv-files-to-mp4-using-mac-os-x-for-playback-on-ipad-apple-tv-playstation-3-xbox-360-roku-and-other-players.md",
        "logicalName": "20130410-converting-mkv-files-to-mp4-using-mac-os-x-for-playback-on-ipad-apple-tv-playstation-3-xbox-360-roku-and-other-players.md",
        "translationBaseName": "20130410-converting-mkv-files-to-mp4-using-mac-os-x-for-playback-on-ipad-apple-tv-playstation-3-xbox-360-roku-and-other-players",
        "baseFileName": "20130410-converting-mkv-files-to-mp4-using-mac-os-x-for-playback-on-ipad-apple-tv-playstation-3-xbox-360-roku-and-other-players",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2013/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#crash-course-in-digital-video-formats\"\u003eCrash Course in Digital Video Formats\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#mkv--mp4\"\u003eMKV → MP4\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#metadata-and-artwork\"\u003eMetadata and Artwork\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#renaming\"\u003eRenaming\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#streaming-from-itunes\"\u003eStreaming from iTunes\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp itemprop=\"description\" class=\"f5 f4-m f3-l mt0 lh-copy p-summary entry-summary\"\u003e\nNearly 2 years ago, I became a \u003cem\u003eCord-Cutter\u003c/em\u003e. I couldn’t see the sense in paying a ton of money every month for 500 channels that I didn’t watch, just so that I could catch the occasional show.\n\u003c/p\u003e\n\n\u003cp\u003eI invested in \u003ca href=\"https://web.archive.org/web/20130410074502/http://netflix.com\"\u003eNetflix\u003c/a\u003e and \u003ca href=\"https://web.archive.org/web/20130410074502/http://hulu.com/plus\"\u003eHulu Plus\u003c/a\u003e accounts so that I could watch most of my shows, and for the shows that haven’t made their way into the 21 century yet, there are plenty of places online where you can acquire the latest episodes.\u003c/p\u003e\n\u003cp\u003eIf you read my previous post on \u003ca href=\"/2013/04/08/converting-blu-ray-and-dvd-movies-to-mp4-using-mac-os-x-for-playback-on-ipad-apple-tv-playstation-3-xbox-360-roku-and-other-players/\"\u003econverting Blu-ray and DVD movies to MP4\u003c/a\u003e, this process has a slightly different flow.\u003c/p\u003e\n\u003ch2 id=\"crash-course-in-digital-video-formats\"\u003eCrash Course in Digital Video Formats\u003c/h2\u003e\n\u003cp\u003eThese days, if you (ahem) \u003cem\u003eacquire\u003c/em\u003e a high-definition copy of your favorite show online (commonly in 720p), it will most likely be in MKV/H.264/AC3 format.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/mkv.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/mkv.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eThe short explanation is that every video file is made up of \u003cstrong\u003e3 different parts\u003c/strong\u003e: the \u003cstrong\u003evideo stream\u003c/strong\u003e, the \u003cstrong\u003eaudio stream\u003c/strong\u003e, and the \u003cstrong\u003econtainer\u003c/strong\u003e. The audio and video are synced-up (a.k.a., “multiplexed” or “muxed”) and are bundled together into a single file using a container format.\u003c/p\u003e\n\u003cp\u003eIf you want to make yourself a little more educated about this stuff, check out the “\u003ca href=\"https://web.archive.org/web/20130410074502/http://diveintohtml5.info/video.html\"\u003eVideo on the Web\u003c/a\u003e” chapter of \u003cem\u003eDive Into HTML5\u003c/em\u003e by Mark Pilgrim.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMKV\u003c/strong\u003e is a popular container format because it’s designed to be a kitchen sink. You can throw all sorts of stuff inside this container, so people like to stash it full of subtitle files and other sorts of things. \u003cstrong\u003eAC3\u003c/strong\u003e is the name of the \u003cem\u003eDolby Digital\u003c/em\u003e surround-sound audio format. You typically need a dedicated decoder ship to handle this kind of audio, which is common in modern receivers and some TVs.\u003c/p\u003e\n\u003ch2 id=\"mkv--mp4\"\u003eMKV → MP4\u003c/h2\u003e\n\u003cp\u003eThe first thing we need to do download a copy of \u003ca href=\"https://web.archive.org/web/20130410074502/http://www.emmgunn.com/mp4tools/mp4toolshome.html\"\u003eMP4Tools\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eWhile you can use it without a license, it’s always a good idea to support the independent software developers who write this stuff — especially if its useful.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/mp4tools-default.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/mp4tools-default.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eWhen you drag your MKV file into MP4Tools, you should see two entries — the video stream and the audio stream.\u003c/p\u003e\n\u003cp\u003eThe video stream should already be in \u003cstrong\u003eH.264\u003c/strong\u003e format. (If it isn’t, stop what you’re doing and run the file through \u003ca href=\"https://web.archive.org/web/20130410074502/http://handbrake.fr\"\u003eHandbrake\u003c/a\u003e instead.) Check the box next to the stream to select it.\u003c/p\u003e\n\u003cp\u003eIf the audio stream is already in \u003cstrong\u003eAAC\u003c/strong\u003e format, this will be very simple. If the audio stream is in \u003cstrong\u003eAC3\u003c/strong\u003e format, this will still be simple, but will take a little longer to complete.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/mp4tools-working.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/mp4tools-working.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eFor \u003cstrong\u003eH.264\u003c/strong\u003e video, choose \u003cem\u003ePass Thru\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFor \u003cstrong\u003eAAC\u003c/strong\u003e audio (if available), choose \u003cem\u003ePass Thru\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFor \u003cstrong\u003eAC3\u003c/strong\u003e audio (if available), choose the highest AAC audio selection you have available (either \u003cem\u003eAAC (2-Ch.)\u003c/em\u003e or \u003cem\u003eAAC (5.1)\u003c/em\u003e). If you selected \u003cem\u003eAAC (5.1)\u003c/em\u003e, also check the box for \u003cem\u003eadd 2-Ch. Track\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eLastly, choose your intended device. The \u003cem\u003eApple TV\u003c/em\u003e setting tends to have the broadest compatibility in my experience. Leave everything else as the default setting, and click the \u003cem\u003eConvert\u003c/em\u003e button.\u003c/p\u003e\n\u003cp\u003eIn a few minutes, you should have a new \u003ccode\u003e.m4v\u003c/code\u003e file.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/m4v.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/m4v.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"metadata-and-artwork\"\u003eMetadata and Artwork\u003c/h2\u003e\n\u003cp\u003eIt’s possible that you may have heard of \u003cem\u003eAtomicParsley\u003c/em\u003e, \u003cem\u003eMetaX\u003c/em\u003e or \u003cem\u003eMetaZ\u003c/em\u003e before. They all suck. Check out \u003ca href=\"https://web.archive.org/web/20130410074502/http://code.google.com/p/subler/\"\u003eSubler\u003c/a\u003e instead.\u003c/p\u003e\n\u003cp\u003eOnce you have your \u003ccode\u003e.m4v\u003c/code\u003e file, you’ll want to add the metadata and artwork to the file. As long as the video file starts with a format similar to \u003ccode\u003e\u0026lt;show\u0026gt;.s\u0026lt;#\u0026gt;e\u0026lt;#\u0026gt;\u003c/code\u003e (e.g., \u003ccode\u003eWeeds.s7e1\u003c/code\u003e), Subler will be able to determine the right things to search for.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/subler-metadata.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/subler-metadata.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eSubler queries \u003ca href=\"https://web.archive.org/web/20130410074502/http://thetvdb.com\"\u003eTVDB\u003c/a\u003e for TV show data, although I’m generally unimpressed with the TV show artwork. For that, I use \u003ca href=\"https://web.archive.org/web/20130410074502/http://getvideoartwork.com\"\u003eGet Video Artwork\u003c/a\u003e and download the iTunes-compatible, square-shaped TV show artwork.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/subler-artwork.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/subler-artwork.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eWhile Subler does a good job of checking the right boxes automatically, you’ll want to check the \u003cem\u003eOther Settings\u003c/em\u003e and make sure that the resolution and media kind are set correctly for your new \u003ccode\u003e.m4v\u003c/code\u003e file.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/subler-other.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/subler-other.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"renaming\"\u003eRenaming\u003c/h2\u003e\n\u003cp\u003eI prefer to keep my video files sorted by \u003ccode\u003e\u0026lt;show\u0026gt;/\u0026lt;season\u0026gt;/\u0026lt;file\u0026gt;\u003c/code\u003e. I also go so far to name my files as \u003ccode\u003eS.E - Title.mp4\u003c/code\u003e (e.g., a recent episode of \u003cem\u003eSupernatural\u003c/em\u003e was labeled \u003cem\u003e8.15 - Man’s Best Friend with Benefits\u003c/em\u003e).\u003c/p\u003e\n\u003cp\u003eGoing episode-by-episode can be very tedious, so I wrote up a \u003ca href=\"https://web.archive.org/web/20130410074502/https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/rename-workflow.zip\"\u003eMac OS X service\u003c/a\u003e to handle this for me. The only prerequisite is to install a package called \u003ca href=\"https://web.archive.org/web/20130410074502/https://trac.macports.org/browser/trunk/dports/multimedia/mp4v2/Portfile\"\u003emp4v2\u003c/a\u003e from \u003ca href=\"https://web.archive.org/web/20130410074502/http://macports.org\"\u003eMacPorts\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo port install mp4v2\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOnce you’ve installed MacPorts (if you hadn’t already) and the \u003cstrong\u003emp4v2\u003c/strong\u003e package, you can install the OS X service by double-clicking it. (It’s an Automator action, so feel free to take a look at what it does before installing it.)\u003c/p\u003e\n\u003cp\u003eWith everything installed, you can now right-click on one or more video files, choose \u003cem\u003eServices\u003c/em\u003e, then “Rename video to 1.01 - Title.mp4”.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/workflow.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/workflow.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eWithin a few seconds, the Automator workflow will read the contents of the video file for the season number, episode number, and episode title, and rename the file automatically.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/done.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/done.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"streaming-from-itunes\"\u003eStreaming from iTunes\u003c/h2\u003e\n\u003cp\u003eI’ve already covered this in my \u003ca href=\"/2013/04/08/converting-blu-ray-and-dvd-movies-to-mp4-using-mac-os-x-for-playback-on-ipad-apple-tv-playstation-3-xbox-360-roku-and-other-players/\"\u003eprevious post\u003c/a\u003e, so I’m not going to go over it again here.\u003c/p\u003e\n\u003cp\u003eOnce it’s in iTunes, you can sync shows to your smartphone, iPad, or stream them to a variety of devices throughout your home.\u003c/p\u003e\n",
        "plain":"Nearly 2 years ago, I became a Cord-Cutter. I couldn’t see the sense in paying a ton of money every month for 500 channels that I didn’t watch, just so that I could catch the occasional show. I invested in Netflix and Hulu Plus accounts so that I could watch most of my shows, and for the shows that haven’t made their way into the 21 century yet, there are plenty of places online where you can acquire the latest episodes.\nIf you read my previous post on converting Blu-ray and DVD movies to MP4, this process has a slightly different flow.\nCrash Course in Digital Video Formats These days, if you (ahem) acquire a high-definition copy of your favorite show online (commonly in 720p), it will most likely be in MKV/H.264/AC3 format.\n  The short explanation is that every video file is made up of 3 different parts: the video stream, the audio stream, and the container. The audio and video are synced-up (a.k.a., “multiplexed” or “muxed”) and are bundled together into a single file using a container format.\nIf you want to make yourself a little more educated about this stuff, check out the “Video on the Web” chapter of Dive Into HTML5 by Mark Pilgrim.\nMKV is a popular container format because it’s designed to be a kitchen sink. You can throw all sorts of stuff inside this container, so people like to stash it full of subtitle files and other sorts of things. AC3 is the name of the Dolby Digital surround-sound audio format. You typically need a dedicated decoder ship to handle this kind of audio, which is common in modern receivers and some TVs.\nMKV → MP4 The first thing we need to do download a copy of MP4Tools.\nWhile you can use it without a license, it’s always a good idea to support the independent software developers who write this stuff — especially if its useful.\n  When you drag your MKV file into MP4Tools, you should see two entries — the video stream and the audio stream.\nThe video stream should already be in H.264 format. (If it isn’t, stop what you’re doing and run the file through Handbrake instead.) Check the box next to the stream to select it.\nIf the audio stream is already in AAC format, this will be very simple. If the audio stream is in AC3 format, this will still be simple, but will take a little longer to complete.\n    For H.264 video, choose Pass Thru.\n  For AAC audio (if available), choose Pass Thru.\n  For AC3 audio (if available), choose the highest AAC audio selection you have available (either AAC (2-Ch.) or AAC (5.1)). If you selected AAC (5.1), also check the box for add 2-Ch. Track.\n  Lastly, choose your intended device. The Apple TV setting tends to have the broadest compatibility in my experience. Leave everything else as the default setting, and click the Convert button.\nIn a few minutes, you should have a new .m4v file.\n  Metadata and Artwork It’s possible that you may have heard of AtomicParsley, MetaX or MetaZ before. They all suck. Check out Subler instead.\nOnce you have your .m4v file, you’ll want to add the metadata and artwork to the file. As long as the video file starts with a format similar to \u0026lt;show\u0026gt;.s\u0026lt;#\u0026gt;e\u0026lt;#\u0026gt; (e.g., Weeds.s7e1), Subler will be able to determine the right things to search for.\n  Subler queries TVDB for TV show data, although I’m generally unimpressed with the TV show artwork. For that, I use Get Video Artwork and download the iTunes-compatible, square-shaped TV show artwork.\n  While Subler does a good job of checking the right boxes automatically, you’ll want to check the Other Settings and make sure that the resolution and media kind are set correctly for your new .m4v file.\n  Renaming I prefer to keep my video files sorted by \u0026lt;show\u0026gt;/\u0026lt;season\u0026gt;/\u0026lt;file\u0026gt;. I also go so far to name my files as S.E - Title.mp4 (e.g., a recent episode of Supernatural was labeled 8.15 - Man’s Best Friend with Benefits).\nGoing episode-by-episode can be very tedious, so I wrote up a Mac OS X service to handle this for me. The only prerequisite is to install a package called mp4v2 from MacPorts.\nsudo port install mp4v2 Once you’ve installed MacPorts (if you hadn’t already) and the mp4v2 package, you can install the OS X service by double-clicking it. (It’s an Automator action, so feel free to take a look at what it does before installing it.)\nWith everything installed, you can now right-click on one or more video files, choose Services, then “Rename video to 1.01 - Title.mp4”.\n  Within a few seconds, the Automator workflow will read the contents of the video file for the season number, episode number, and episode title, and rename the file automatically.\n  Streaming from iTunes I’ve already covered this in my previous post, so I’m not going to go over it again here.\nOnce it’s in iTunes, you can sync shows to your smartphone, iPad, or stream them to a variety of devices throughout your home.\n",
        "source":"\n{{\u003c description \u003e}}\nNearly 2 years ago, I became a \u003cem\u003eCord-Cutter\u003c/em\u003e. I couldn’t see the sense in paying a ton of money every month for 500 channels that I didn’t watch, just so that I could catch the occasional show.\n{{\u003c /description \u003e}}\n\nI invested in [Netflix]({{% wayback \"http://netflix.com\" %}}) and [Hulu Plus]({{% wayback \"http://hulu.com/plus\" %}}) accounts so that I could watch most of my shows, and for the shows that haven’t made their way into the 21 century yet, there are plenty of places online where you can acquire the latest episodes.\n\nIf you read my previous post on [converting Blu-ray and DVD movies to MP4](/2013/04/08/converting-blu-ray-and-dvd-movies-to-mp4-using-mac-os-x-for-playback-on-ipad-apple-tv-playstation-3-xbox-360-roku-and-other-players/), this process has a slightly different flow.\n\n\n## Crash Course in Digital Video Formats\n\nThese days, if you (ahem) *acquire* a high-definition copy of your favorite show online (commonly in 720p), it will most likely be in MKV/H.264/AC3 format.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/mkv.png\"\u003e}}\n\nThe short explanation is that every video file is made up of **3 different parts**: the **video stream**, the **audio stream**, and the **container**. The audio and video are synced-up (a.k.a., “multiplexed” or “muxed”) and are bundled together into a single file using a container format.\n\nIf you want to make yourself a little more educated about this stuff, check out the “[Video on the Web]({{% wayback \"http://diveintohtml5.info/video.html\" %}})” chapter of *Dive Into HTML5* by Mark Pilgrim.\n\n**MKV** is a popular container format because it’s designed to be a kitchen sink. You can throw all sorts of stuff inside this container, so people like to stash it full of subtitle files and other sorts of things. **AC3** is the name of the *Dolby Digital* surround-sound audio format. You typically need a dedicated decoder ship to handle this kind of audio, which is common in modern receivers and some TVs.\n\n\n## MKV → MP4\n\nThe first thing we need to do download a copy of [MP4Tools]({{% wayback \"http://www.emmgunn.com/mp4tools/mp4toolshome.html\" %}}).\n\nWhile you can use it without a license, it’s always a good idea to support the independent software developers who write this stuff — especially if its useful.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/mp4tools-default.png\"\u003e}}\n\nWhen you drag your MKV file into MP4Tools, you should see two entries — the video stream and the audio stream.\n\nThe video stream should already be in **H.264** format. (If it isn’t, stop what you’re doing and run the file through [Handbrake]({{% wayback \"http://handbrake.fr\" %}}) instead.) Check the box next to the stream to select it.\n\nIf the audio stream is already in **AAC** format, this will be very simple. If the audio stream is in **AC3** format, this will still be simple, but will take a little longer to complete.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/mp4tools-working.png\"\u003e}}\n\n1. For **H.264** video, choose *Pass Thru*.\n\n2. For **AAC** audio (if available), choose *Pass Thru*.\n\n3. For **AC3** audio (if available), choose the highest AAC audio selection you have available (either *AAC (2-Ch.)* or *AAC (5.1)*). If you selected *AAC (5.1)*, also check the box for *add 2-Ch. Track*.\n\nLastly, choose your intended device. The *Apple TV* setting tends to have the broadest compatibility in my experience. Leave everything else as the default setting, and click the *Convert* button.\n\nIn a few minutes, you should have a new `.m4v` file.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/m4v.png\"\u003e}}\n\n\n## Metadata and Artwork\n\nIt’s possible that you may have heard of *AtomicParsley*, *MetaX* or *MetaZ* before. They all suck. Check out [Subler]({{% wayback \"http://code.google.com/p/subler/\" %}}) instead.\n\nOnce you have your `.m4v` file, you’ll want to add the metadata and artwork to the file. As long as the video file starts with a format similar to `\u003cshow\u003e.s\u003c#\u003ee\u003c#\u003e` (e.g., `Weeds.s7e1`), Subler will be able to determine the right things to search for.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/subler-metadata.png\"\u003e}}\n\nSubler queries [TVDB]({{% wayback \"http://thetvdb.com\" %}}) for TV show data, although I’m generally unimpressed with the TV show artwork. For that, I use [Get Video Artwork]({{% wayback \"http://getvideoartwork.com\" %}}) and download the iTunes-compatible, square-shaped TV show artwork.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/subler-artwork.png\"\u003e}}\n\nWhile Subler does a good job of checking the right boxes automatically, you’ll want to check the *Other Settings* and make sure that the resolution and media kind are set correctly for your new `.m4v` file.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/subler-other.png\"\u003e}}\n\n\n## Renaming\n\nI prefer to keep my video files sorted by `\u003cshow\u003e/\u003cseason\u003e/\u003cfile\u003e`. I also go so far to name my files as `S.E - Title.mp4` (e.g., a recent episode of *Supernatural* was labeled *8.15 - Man’s Best Friend with Benefits*).\n\nGoing episode-by-episode can be very tedious, so I wrote up a [Mac OS X service]({{% wayback \"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/rename-workflow.zip\" %}}) to handle this for me. The only prerequisite is to install a package called [mp4v2]({{% wayback \"https://trac.macports.org/browser/trunk/dports/multimedia/mp4v2/Portfile\" %}}) from [MacPorts]({{% wayback \"http://macports.org\" %}}).\n\n```bash\nsudo port install mp4v2\n```\n\nOnce you’ve installed MacPorts (if you hadn’t already) and the **mp4v2** package, you can install the OS X service by double-clicking it. (It’s an Automator action, so feel free to take a look at what it does before installing it.)\n\nWith everything installed, you can now right-click on one or more video files, choose *Services*, then “Rename video to 1.01 - Title.mp4”.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/workflow.png\"\u003e}}\n\nWithin a few seconds, the Automator workflow will read the contents of the video file for the season number, episode number, and episode title, and rename the file automatically.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/mkv/done.png\"\u003e}}\n\n\n## Streaming from iTunes\n\nI’ve already covered this in my [previous post](/2013/04/08/converting-blu-ray-and-dvd-movies-to-mp4-using-mac-os-x-for-playback-on-ipad-apple-tv-playstation-3-xbox-360-roku-and-other-players/), so I’m not going to go over it again here.\n\nOnce it’s in iTunes, you can sync shows to your smartphone, iPad, or stream them to a variety of devices throughout your home.\n"},
    "links": {
        "prev": {"title": "Converting Blu-ray and DVD movies to MP4, using Mac OS X, for playback on iPad, Apple TV, Playstation 3, Xbox 360, Roku and other players", "permalink": "https://ryanparman.com/posts/2013/converting-blu-ray-and-dvd-movies-to-mp4-using-mac-os-x-for-playback-on-ipad-apple-tv-playstation-3-xbox-360-roku-and-other-players/"},
        "next": {"title": "The Microsoft Ecosystem", "permalink": "https://ryanparman.com/posts/2013/the-microsoft-ecosystem/"},
        "ignore": "me"
    }
}

}
