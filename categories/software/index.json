{
    "data": {
        
        
        "count": 26,
        "items": [
            
            {
    "kind": "page",
    "title": "Using GNU command line tools in macOS instead of FreeBSD tools",
    "description": "",
    "summary": {
        "content": "macOS is a Unix, and not built on Linux. This can bite you when trying to write scripts which support both platforms. I think most of us realize that macOS isn\u0026rsquo;t a Linux OS, but what that also means is that instead of shipping with the GNU flavor of command line tools, it ships with the FreeBSD flavor. As such, writing shell scripts which can work across both platforms can sometimes be challenging. Homebrew Homebrew can be used to install the GNU versions of tools onto your Mac, but they are all prefixed with \u0026ldquo;g\u0026rdquo; by default.",
        "isTruncated": true
    },
    "published": "2019-06-18T14:48:16Z",
    "updated": "2019-06-18T15:34:29-04:00",
    "permalink": "https://ryanparman.com/posts/2019/using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools/",
    "relativePermalink": "/posts/2019/using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools/",
    "aliases": ["/2019/06/18/using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools"],
    "images": ["https://cdn.ryanparman.com/hugo/posts/2019/macos@2x.png"],
    "videos": [],
    "categories": ["Software"],
    "tags": ["gnu", "freebsd", "bsd", "linux", "macos"],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 375,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2019/20190618-using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools.md",
        "logicalName": "20190618-using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools.md",
        "translationBaseName": "20190618-using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools",
        "baseFileName": "20190618-using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2019/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#homebrew\"\u003eHomebrew\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#choosing-gnu-for-consistency\"\u003eChoosing GNU for Consistency\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#provided-binaries\"\u003eProvided Binaries\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#conclusion\"\u003eConclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp itemprop=\"description\" class=\"f5 f4-m f3-l mt0 lh-copy p-summary entry-summary\"\u003e\n\u003cb\u003emacOS\u003c/b\u003e is a \u003cem\u003eUnix\u003c/em\u003e, and not built on \u003cem\u003eLinux\u003c/em\u003e. This can bite you when trying to write scripts which support both platforms.\n\u003c/p\u003e\n\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/hugo/posts/2019/macos@2x.webp\" alt=\"macOS\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/hugo/posts/2019/macos@2x.png\" alt=\"macOS\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eI think most of us realize that macOS isn\u0026rsquo;t a Linux OS, but what that also means is that instead of shipping with the GNU flavor of command line tools, it ships with the FreeBSD flavor. As such, writing shell scripts which can work across both platforms can sometimes be challenging.\u003c/p\u003e\n\u003ch2 id=\"homebrew\"\u003eHomebrew\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://brew.sh\"\u003eHomebrew\u003c/a\u003e can be used to install the GNU versions of tools onto your Mac, but they are all prefixed with \u0026ldquo;g\u0026rdquo; by default.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNOTE:\u003c/strong\u003e All commands have been installed with the prefix \u0026ldquo;g\u0026rdquo;. If you need to use these commands with their normal names, you can add a \u0026ldquo;gnubin\u0026rdquo; directory to your PATH from your bashrc.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"choosing-gnu-for-consistency\"\u003eChoosing GNU for Consistency\u003c/h2\u003e\n\u003cp\u003eYou can install most of the GNU flavored tools with:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ebrew install coreutils ed findutils gawk gnu-sed gnu-tar grep make\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAssuming you have a fairly standard Terminal/shell environment, and assuming that you want to use the GNU versions instead of the BSD versions for everything you\u0026rsquo;ve installed with Homebrew, you can append the following to your \u003ccode\u003e~/.profile\u003c/code\u003e file.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"color:#75715e\"\u003e# Get list of gnubin directories\u003c/span\u003e\nexport GNUBINS\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003efind /usr/local/opt -type d -follow -name gnubin -print\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e;\n\n\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e bindir in \u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eGNUBINS[@]\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003edo\u003c/span\u003e\n  export PATH\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e$bindir:$PATH;\n\u003cspan style=\"color:#66d9ef\"\u003edone\u003c/span\u003e;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"provided-binaries\"\u003eProvided Binaries\u003c/h2\u003e\n\u003ctable class=\"f6 w-100 mw8 center\" cellspacing=\"0\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth class=\"fw6 bb tl pb3 pr3 bg-white\" valign=\"top\"\u003ePackage\u003c/th\u003e\n      \u003cth class=\"fw6 bb tl pb3 pr3 bg-white\" valign=\"top\"\u003eProvides\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003ecoreutils\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003e[\u003c/code\u003e, \u003ccode\u003eb2sum\u003c/code\u003e, \u003ccode\u003ebase32\u003c/code\u003e, \u003ccode\u003ebase64\u003c/code\u003e, \u003ccode\u003ebasename\u003c/code\u003e, \u003ccode\u003ebasenc\u003c/code\u003e, \u003ccode\u003ecat\u003c/code\u003e, \u003ccode\u003echcon\u003c/code\u003e, \u003ccode\u003echgrp\u003c/code\u003e, \u003ccode\u003echmod\u003c/code\u003e, \u003ccode\u003echown\u003c/code\u003e, \u003ccode\u003echroot\u003c/code\u003e, \u003ccode\u003ecksum\u003c/code\u003e, \u003ccode\u003ecomm\u003c/code\u003e, \u003ccode\u003ecp\u003c/code\u003e, \u003ccode\u003ecsplit\u003c/code\u003e, \u003ccode\u003ecut\u003c/code\u003e, \u003ccode\u003edate\u003c/code\u003e, \u003ccode\u003edd\u003c/code\u003e, \u003ccode\u003edf\u003c/code\u003e, \u003ccode\u003edir\u003c/code\u003e, \u003ccode\u003edircolors\u003c/code\u003e, \u003ccode\u003edirname\u003c/code\u003e, \u003ccode\u003edu\u003c/code\u003e, \u003ccode\u003eecho\u003c/code\u003e, \u003ccode\u003eenv\u003c/code\u003e, \u003ccode\u003eexpand\u003c/code\u003e, \u003ccode\u003eexpr\u003c/code\u003e, \u003ccode\u003efactor\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e, \u003ccode\u003efmt\u003c/code\u003e, \u003ccode\u003efold\u003c/code\u003e, \u003ccode\u003egroups\u003c/code\u003e, \u003ccode\u003ehead\u003c/code\u003e, \u003ccode\u003ehostid\u003c/code\u003e, \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003einstall\u003c/code\u003e, \u003ccode\u003ejoin\u003c/code\u003e, \u003ccode\u003ekill\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003eln\u003c/code\u003e, \u003ccode\u003elogname\u003c/code\u003e, \u003ccode\u003els\u003c/code\u003e, \u003ccode\u003emd5sum\u003c/code\u003e, \u003ccode\u003emkdir\u003c/code\u003e, \u003ccode\u003emkfifo\u003c/code\u003e, \u003ccode\u003emknod\u003c/code\u003e, \u003ccode\u003emktemp\u003c/code\u003e, \u003ccode\u003emv\u003c/code\u003e, \u003ccode\u003enice\u003c/code\u003e, \u003ccode\u003enl\u003c/code\u003e, \u003ccode\u003enohup\u003c/code\u003e, \u003ccode\u003enproc\u003c/code\u003e, \u003ccode\u003enumfmt\u003c/code\u003e, \u003ccode\u003eod\u003c/code\u003e, \u003ccode\u003epaste\u003c/code\u003e, \u003ccode\u003epathchk\u003c/code\u003e, \u003ccode\u003epinky\u003c/code\u003e, \u003ccode\u003epr\u003c/code\u003e, \u003ccode\u003eprintenv\u003c/code\u003e, \u003ccode\u003eprintf\u003c/code\u003e, \u003ccode\u003eptx\u003c/code\u003e, \u003ccode\u003epwd\u003c/code\u003e, \u003ccode\u003ereadlink\u003c/code\u003e, \u003ccode\u003erealpath\u003c/code\u003e, \u003ccode\u003erm\u003c/code\u003e, \u003ccode\u003ermdir\u003c/code\u003e, \u003ccode\u003eruncon\u003c/code\u003e, \u003ccode\u003eseq\u003c/code\u003e, \u003ccode\u003esha1sum\u003c/code\u003e, \u003ccode\u003esha224sum\u003c/code\u003e, \u003ccode\u003esha256sum\u003c/code\u003e, \u003ccode\u003esha384sum\u003c/code\u003e, \u003ccode\u003esha512sum\u003c/code\u003e, \u003ccode\u003eshred\u003c/code\u003e, \u003ccode\u003eshuf\u003c/code\u003e, \u003ccode\u003esleep\u003c/code\u003e, \u003ccode\u003esort\u003c/code\u003e, \u003ccode\u003esplit\u003c/code\u003e, \u003ccode\u003estat\u003c/code\u003e, \u003ccode\u003estdbuf\u003c/code\u003e, \u003ccode\u003estty\u003c/code\u003e, \u003ccode\u003esum\u003c/code\u003e, \u003ccode\u003esync\u003c/code\u003e, \u003ccode\u003etac\u003c/code\u003e, \u003ccode\u003etail\u003c/code\u003e, \u003ccode\u003etee\u003c/code\u003e, \u003ccode\u003etest\u003c/code\u003e, \u003ccode\u003etimeout\u003c/code\u003e, \u003ccode\u003etouch\u003c/code\u003e, \u003ccode\u003etr\u003c/code\u003e, \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003etruncate\u003c/code\u003e, \u003ccode\u003etsort\u003c/code\u003e, \u003ccode\u003etty\u003c/code\u003e, \u003ccode\u003euname\u003c/code\u003e, \u003ccode\u003eunexpand\u003c/code\u003e, \u003ccode\u003euniq\u003c/code\u003e, \u003ccode\u003eunlink\u003c/code\u003e, \u003ccode\u003euptime\u003c/code\u003e, \u003ccode\u003eusers\u003c/code\u003e, \u003ccode\u003evdir\u003c/code\u003e, \u003ccode\u003ewc\u003c/code\u003e, \u003ccode\u003ewho\u003c/code\u003e, \u003ccode\u003ewhoami\u003c/code\u003e, \u003ccode\u003eyes\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eed\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eed\u003c/code\u003e, \u003ccode\u003ered\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egawk\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eawk\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egrep\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eegrep\u003c/code\u003e, \u003ccode\u003efgrep\u003c/code\u003e, \u003ccode\u003egrep\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egnu-sed\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003esed\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egnu-tar\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003etar\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003emake\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003emake\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003efindutils\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003efind\u003c/code\u003e, \u003ccode\u003elocate\u003c/code\u003e, \u003ccode\u003eupdatedb\u003c/code\u003e, \u003ccode\u003exargs\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eUsing the GNU flavor of command line tools (instead of the FreeBSD flavor) should simplify the task of writing shell scripts which can work across macOS and GNU/Linux.\u003c/p\u003e\n",
        "plain":"macOS is a Unix, and not built on Linux. This can bite you when trying to write scripts which support both platforms.   I think most of us realize that macOS isn\u0026rsquo;t a Linux OS, but what that also means is that instead of shipping with the GNU flavor of command line tools, it ships with the FreeBSD flavor. As such, writing shell scripts which can work across both platforms can sometimes be challenging.\nHomebrew Homebrew can be used to install the GNU versions of tools onto your Mac, but they are all prefixed with \u0026ldquo;g\u0026rdquo; by default.\n NOTE: All commands have been installed with the prefix \u0026ldquo;g\u0026rdquo;. If you need to use these commands with their normal names, you can add a \u0026ldquo;gnubin\u0026rdquo; directory to your PATH from your bashrc.\n Choosing GNU for Consistency You can install most of the GNU flavored tools with:\nbrew install coreutils ed findutils gawk gnu-sed gnu-tar grep make Assuming you have a fairly standard Terminal/shell environment, and assuming that you want to use the GNU versions instead of the BSD versions for everything you\u0026rsquo;ve installed with Homebrew, you can append the following to your ~/.profile file.\n# Get list of gnubin directories export GNUBINS=\u0026#34;$(find /usr/local/opt -type d -follow -name gnubin -print)\u0026#34;; for bindir in ${GNUBINS[@]}; do export PATH=$bindir:$PATH; done; Provided Binaries   Package Provides     coreutils  [, b2sum, base32, base64, basename, basenc, cat, chcon, chgrp, chmod, chown, chroot, cksum, comm, cp, csplit, cut, date, dd, df, dir, dircolors, dirname, du, echo, env, expand, expr, factor, false, fmt, fold, groups, head, hostid, id, install, join, kill, link, ln, logname, ls, md5sum, mkdir, mkfifo, mknod, mktemp, mv, nice, nl, nohup, nproc, numfmt, od, paste, pathchk, pinky, pr, printenv, printf, ptx, pwd, readlink, realpath, rm, rmdir, runcon, seq, sha1sum, sha224sum, sha256sum, sha384sum, sha512sum, shred, shuf, sleep, sort, split, stat, stdbuf, stty, sum, sync, tac, tail, tee, test, timeout, touch, tr, true, truncate, tsort, tty, uname, unexpand, uniq, unlink, uptime, users, vdir, wc, who, whoami, yes    ed  ed, red    gawk  awk    grep  egrep, fgrep, grep    gnu-sed  sed    gnu-tar  tar    make  make    findutils  find, locate, updatedb, xargs     Conclusion Using the GNU flavor of command line tools (instead of the FreeBSD flavor) should simplify the task of writing shell scripts which can work across macOS and GNU/Linux.\n",
        "source":"\n{{\u003cdescription\u003e}}\n\u003cb\u003emacOS\u003c/b\u003e is a \u003cem\u003eUnix\u003c/em\u003e, and not built on \u003cem\u003eLinux\u003c/em\u003e. This can bite you when trying to write scripts which support both platforms.\n{{\u003c/description\u003e}}\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2019/macos@2x.png\" alt=\"macOS\"\u003e}}\n\nI think most of us realize that macOS isn't a Linux OS, but what that also means is that instead of shipping with the GNU flavor of command line tools, it ships with the FreeBSD flavor. As such, writing shell scripts which can work across both platforms can sometimes be challenging.\n\n## Homebrew\n\n[Homebrew](https://brew.sh) can be used to install the GNU versions of tools onto your Mac, but they are all prefixed with \"g\" by default.\n\n\u003e **NOTE:** All commands have been installed with the prefix \"g\". If you need to use these commands with their normal names, you can add a \"gnubin\" directory to your PATH from your bashrc.\n\n## Choosing GNU for Consistency\n\nYou can install most of the GNU flavored tools with:\n\n```bash\nbrew install coreutils ed findutils gawk gnu-sed gnu-tar grep make\n```\n\nAssuming you have a fairly standard Terminal/shell environment, and assuming that you want to use the GNU versions instead of the BSD versions for everything you've installed with Homebrew, you can append the following to your `~/.profile` file.\n\n```bash\n# Get list of gnubin directories\nexport GNUBINS=\"$(find /usr/local/opt -type d -follow -name gnubin -print)\";\n\nfor bindir in ${GNUBINS[@]}; do\n  export PATH=$bindir:$PATH;\ndone;\n```\n\n## Provided Binaries\n\n\u003ctable class=\"f6 w-100 mw8 center\" cellspacing=\"0\"\u003e\n  \u003cthead\u003e\n    \u003ctr\u003e\n      \u003cth class=\"fw6 bb tl pb3 pr3 bg-white\" valign=\"top\"\u003ePackage\u003c/th\u003e\n      \u003cth class=\"fw6 bb tl pb3 pr3 bg-white\" valign=\"top\"\u003eProvides\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003ecoreutils\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003e[\u003c/code\u003e, \u003ccode\u003eb2sum\u003c/code\u003e, \u003ccode\u003ebase32\u003c/code\u003e, \u003ccode\u003ebase64\u003c/code\u003e, \u003ccode\u003ebasename\u003c/code\u003e, \u003ccode\u003ebasenc\u003c/code\u003e, \u003ccode\u003ecat\u003c/code\u003e, \u003ccode\u003echcon\u003c/code\u003e, \u003ccode\u003echgrp\u003c/code\u003e, \u003ccode\u003echmod\u003c/code\u003e, \u003ccode\u003echown\u003c/code\u003e, \u003ccode\u003echroot\u003c/code\u003e, \u003ccode\u003ecksum\u003c/code\u003e, \u003ccode\u003ecomm\u003c/code\u003e, \u003ccode\u003ecp\u003c/code\u003e, \u003ccode\u003ecsplit\u003c/code\u003e, \u003ccode\u003ecut\u003c/code\u003e, \u003ccode\u003edate\u003c/code\u003e, \u003ccode\u003edd\u003c/code\u003e, \u003ccode\u003edf\u003c/code\u003e, \u003ccode\u003edir\u003c/code\u003e, \u003ccode\u003edircolors\u003c/code\u003e, \u003ccode\u003edirname\u003c/code\u003e, \u003ccode\u003edu\u003c/code\u003e, \u003ccode\u003eecho\u003c/code\u003e, \u003ccode\u003eenv\u003c/code\u003e, \u003ccode\u003eexpand\u003c/code\u003e, \u003ccode\u003eexpr\u003c/code\u003e, \u003ccode\u003efactor\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e, \u003ccode\u003efmt\u003c/code\u003e, \u003ccode\u003efold\u003c/code\u003e, \u003ccode\u003egroups\u003c/code\u003e, \u003ccode\u003ehead\u003c/code\u003e, \u003ccode\u003ehostid\u003c/code\u003e, \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003einstall\u003c/code\u003e, \u003ccode\u003ejoin\u003c/code\u003e, \u003ccode\u003ekill\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003eln\u003c/code\u003e, \u003ccode\u003elogname\u003c/code\u003e, \u003ccode\u003els\u003c/code\u003e, \u003ccode\u003emd5sum\u003c/code\u003e, \u003ccode\u003emkdir\u003c/code\u003e, \u003ccode\u003emkfifo\u003c/code\u003e, \u003ccode\u003emknod\u003c/code\u003e, \u003ccode\u003emktemp\u003c/code\u003e, \u003ccode\u003emv\u003c/code\u003e, \u003ccode\u003enice\u003c/code\u003e, \u003ccode\u003enl\u003c/code\u003e, \u003ccode\u003enohup\u003c/code\u003e, \u003ccode\u003enproc\u003c/code\u003e, \u003ccode\u003enumfmt\u003c/code\u003e, \u003ccode\u003eod\u003c/code\u003e, \u003ccode\u003epaste\u003c/code\u003e, \u003ccode\u003epathchk\u003c/code\u003e, \u003ccode\u003epinky\u003c/code\u003e, \u003ccode\u003epr\u003c/code\u003e, \u003ccode\u003eprintenv\u003c/code\u003e, \u003ccode\u003eprintf\u003c/code\u003e, \u003ccode\u003eptx\u003c/code\u003e, \u003ccode\u003epwd\u003c/code\u003e, \u003ccode\u003ereadlink\u003c/code\u003e, \u003ccode\u003erealpath\u003c/code\u003e, \u003ccode\u003erm\u003c/code\u003e, \u003ccode\u003ermdir\u003c/code\u003e, \u003ccode\u003eruncon\u003c/code\u003e, \u003ccode\u003eseq\u003c/code\u003e, \u003ccode\u003esha1sum\u003c/code\u003e, \u003ccode\u003esha224sum\u003c/code\u003e, \u003ccode\u003esha256sum\u003c/code\u003e, \u003ccode\u003esha384sum\u003c/code\u003e, \u003ccode\u003esha512sum\u003c/code\u003e, \u003ccode\u003eshred\u003c/code\u003e, \u003ccode\u003eshuf\u003c/code\u003e, \u003ccode\u003esleep\u003c/code\u003e, \u003ccode\u003esort\u003c/code\u003e, \u003ccode\u003esplit\u003c/code\u003e, \u003ccode\u003estat\u003c/code\u003e, \u003ccode\u003estdbuf\u003c/code\u003e, \u003ccode\u003estty\u003c/code\u003e, \u003ccode\u003esum\u003c/code\u003e, \u003ccode\u003esync\u003c/code\u003e, \u003ccode\u003etac\u003c/code\u003e, \u003ccode\u003etail\u003c/code\u003e, \u003ccode\u003etee\u003c/code\u003e, \u003ccode\u003etest\u003c/code\u003e, \u003ccode\u003etimeout\u003c/code\u003e, \u003ccode\u003etouch\u003c/code\u003e, \u003ccode\u003etr\u003c/code\u003e, \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003etruncate\u003c/code\u003e, \u003ccode\u003etsort\u003c/code\u003e, \u003ccode\u003etty\u003c/code\u003e, \u003ccode\u003euname\u003c/code\u003e, \u003ccode\u003eunexpand\u003c/code\u003e, \u003ccode\u003euniq\u003c/code\u003e, \u003ccode\u003eunlink\u003c/code\u003e, \u003ccode\u003euptime\u003c/code\u003e, \u003ccode\u003eusers\u003c/code\u003e, \u003ccode\u003evdir\u003c/code\u003e, \u003ccode\u003ewc\u003c/code\u003e, \u003ccode\u003ewho\u003c/code\u003e, \u003ccode\u003ewhoami\u003c/code\u003e, \u003ccode\u003eyes\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eed\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eed\u003c/code\u003e, \u003ccode\u003ered\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egawk\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eawk\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egrep\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003eegrep\u003c/code\u003e, \u003ccode\u003efgrep\u003c/code\u003e, \u003ccode\u003egrep\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egnu-sed\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003esed\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003egnu-tar\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003etar\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003emake\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003emake\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003efindutils\u003c/code\u003e\n      \u003c/td\u003e\n      \u003ctd class=\"pv3 pr3 bb\" valign=\"top\"\u003e\n        \u003ccode\u003efind\u003c/code\u003e, \u003ccode\u003elocate\u003c/code\u003e, \u003ccode\u003eupdatedb\u003c/code\u003e, \u003ccode\u003exargs\u003c/code\u003e\n      \u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n## Conclusion\n\nUsing the GNU flavor of command line tools (instead of the FreeBSD flavor) should simplify the task of writing shell scripts which can work across macOS and GNU/Linux.\n"},
    "links": {
        "prev": {"title": "Running aws-vault in macOS with local Docker containers", "permalink": "https://ryanparman.com/posts/2019/running-aws-vault-with-local-docker-containers/"},
        "next": {"title": "How to create local TLS certificates for development on macOS", "permalink": "https://ryanparman.com/posts/2019/how-to-create-local-tls-certificates-for-development-on-macos/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Running aws-vault in macOS with local Docker containers",
    "description": "",
    "summary": {
        "content": "Overview aws-vault is a tool for storing your AWS credentials in your system keychain instead of as a plain text file on-disk. Credentials and other secrets (including your various system passwords) are stored inside your system keychain. They are encrypted, and cannot easily be stolen by a rogue script or application. By keeping your AWS credentials in your system keychain, they are available to you when you are logged in, unavailable when you are logged out, and provide an important layer of security that the standard plain text storage method does not.",
        "isTruncated": true
    },
    "published": "2019-04-19T01:32:30Z",
    "updated": "2019-12-26T16:46:47-08:00",
    "permalink": "https://ryanparman.com/posts/2019/running-aws-vault-with-local-docker-containers/",
    "relativePermalink": "/posts/2019/running-aws-vault-with-local-docker-containers/",
    "aliases": ["/2019/04/19/running-aws-vault-with-local-docker-containers"],
    "images": ["https://cdn.ryanparman.com/hugo/posts/2019/secure-auth@2x.jpg", "https://cdn.ryanparman.com/hugo/posts/2019/keychain@2x.jpg", "https://cdn.ryanparman.com/hugo/posts/2019/generate-tokens@2x.png", "https://cdn.ryanparman.com/hugo/posts/2018/docker-logo.jpg"],
    "videos": [],
    "categories": ["Software"],
    "tags": ["99designs", "aws", "aws-cli", "aws-vault", "bash", "docker", "ec2", "elastic-beanstalk", "golang", "keychain", "mac", "macos", "parameter-store", "secrets", "session-tokens", "site-reliability-engineering", "sre"],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 896,
        "readingTime": "5 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2019/20190419-running-aws-vault-with-local-docker-containers.md",
        "logicalName": "20190419-running-aws-vault-with-local-docker-containers.md",
        "translationBaseName": "20190419-running-aws-vault-with-local-docker-containers",
        "baseFileName": "20190419-running-aws-vault-with-local-docker-containers",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2019/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#overview\"\u003eOverview\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#leveraging-the-keychain\"\u003eLeveraging the Keychain\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#aws-config-file\"\u003eAWS Config File\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#viewing-credentials\"\u003eViewing Credentials\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#token-types\"\u003eToken Types\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#passing-to-local-docker\"\u003ePassing to (local) Docker\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#conclusion\"\u003eConclusion\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/hugo/posts/2019/secure-auth@2x.webp\" alt=\"Using aws-vault\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/hugo/posts/2019/secure-auth@2x.jpg\" alt=\"Using aws-vault\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca href=\"https://github.com/99designs/aws-vault\"\u003eaws-vault\u003c/a\u003e\u003c/strong\u003e is a tool for storing your AWS credentials in your system keychain instead of as a plain text file on-disk.\u003c/p\u003e\n\u003cp\u003eCredentials and other secrets (including your various system passwords) are stored inside your system keychain. They are encrypted, and cannot easily be stolen by a rogue script or application. By keeping your AWS credentials in your system keychain, they are available to you when you are logged in, unavailable when you are logged out, and provide an important layer of security that the standard plain text storage method does not.\u003c/p\u003e\n\u003cp\u003eIt is designed to work cooperatively with the \u003ca href=\"https://aws.amazon.com/cli/\"\u003eAWS Unified CLI Tools\u003c/a\u003e. It also provides utilities for other AWS best practices such as being able to generate session tokens, or logging into the AWS Console with your IAM credentials using a simple command.\u003c/p\u003e\n\u003cp\u003eYou can learn more about the thinking behind it from the \u003ca href=\"https://99designs.com.au/tech-blog/blog/2015/10/26/aws-vault/\"\u003eoriginal 99 designs blog post\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"leveraging-the-keychain\"\u003eLeveraging the Keychain\u003c/h2\u003e\n\u003cp\u003eBy default, every Mac user has a \u003cem\u003esystem\u003c/em\u003e and a \u003cem\u003elogin\u003c/em\u003e keychain that stores the bulk of your secure information (e.g., certificate authorities which enable SSL/TLS connections, website passwords or credit cards saved in your browser).\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/hugo/posts/2019/keychain@2x.webp\" alt=\"Leveraging the Keychain\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/hugo/posts/2019/keychain@2x.jpg\" alt=\"Leveraging the Keychain\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eOn macOS, credentials are stored in a non-\u003cem\u003elogin\u003c/em\u003e keychain in \u003cem\u003eKeychain Access.app\u003c/em\u003e. Instead, they are stored in a new \u003cem\u003eaws-vault\u003c/em\u003e keychain. In order to manage these credentials with the \u003cem\u003eKeychain Access.app\u003c/em\u003e app, you\u0026rsquo;ll need to import it.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cem\u003eFile → Import Items…\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eChoose \u003ccode\u003eaws-vault.keychain-db\u003c/code\u003e from the default directory.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRight click → \u003cem\u003eChange Settings for Keychain “aws-vault”…\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eChange the value for \u003cem\u003eLock after {NUMBER} minutes of inactivity\u003c/em\u003e to something like 1440 minutes (1 day). Feel free to tune for security/convenience according to your tastes.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"aws-config-file\"\u003eAWS Config File\u003c/h2\u003e\n\u003cp\u003eAfter adding credentials to \u003ccode\u003eaws-vault\u003c/code\u003e (e.g., \u003ccode\u003eaws-vault add default\u003c/code\u003e), you can instruct the \u003ca href=\"https://aws.amazon.com/cli/\"\u003eaws-cli\u003c/a\u003e to use \u003ccode\u003eaws-vault\u003c/code\u003e instead of \u003ccode\u003e~/.aws/credentials\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eHere is an \u003ccode\u003e~/.aws/config\u003c/code\u003e entry for the \u003cem\u003edefault\u003c/em\u003e profile:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"color:#66d9ef\"\u003e[default]\u003c/span\u003e\n\u003cspan style=\"color:#a6e22e\"\u003eregion\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eus-east-1\u003c/span\u003e\n\u003cspan style=\"color:#a6e22e\"\u003ecredential_process\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eaws-vault exec -j default\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAfter all credentials are stored in \u003ccode\u003eaws-vault\u003c/code\u003e, and all \u003ccode\u003e~/.aws/config\u003c/code\u003e entries have been updated with the \u003ccode\u003ecredential_process\u003c/code\u003e line, \u003ccode\u003e~/.aws/credentials\u003c/code\u003e should be \u003cstrong\u003eempty\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"viewing-credentials\"\u003eViewing Credentials\u003c/h2\u003e\n\u003caside class=\"age aside container flex\"\u003e\n  \u003cp\u003emacOS ships with the FreeBSD flavor of command line tools instead of the GNU flavor which ships with most Linuxes. This post references the GNU flavor. Please see “\u003ca href=\"/posts/2019/using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools/\"\u003eUsing GNU command line tools in macOS instead of FreeBSD tools\u003c/a\u003e” for more information.\u003c/p\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eIf you want to view the credentials for a profile, or if you want to expose them as environment variables, you can run:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws-vault exec default -- env | grep --no-color ^AWS | sort\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf you want to \u003cem\u003euse\u003c/em\u003e them, the \u003ca href=\"https://aws.amazon.com/cli/\"\u003eaws-cli\u003c/a\u003e will \u003ca href=\"https://docs.aws.amazon.com/cli/latest/topic/config-vars.html#id1\"\u003epick up environment variables before it looks for a credentials definition\u003c/a\u003e. So, if you want to use \u003ca href=\"https://github.com/99designs/aws-vault\"\u003eaws-vault\u003c/a\u003e with \u003ca href=\"https://aws.amazon.com/cli/\"\u003eaws-cli\u003c/a\u003e without specifying the \u003ccode\u003ecredential_process\u003c/code\u003e setting in your \u003ccode\u003e~/.aws/config\u003c/code\u003e entry, you can do something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws-vault exec default -- aws s3 ls\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"token-types\"\u003eToken Types\u003c/h2\u003e\n\u003cp\u003eThe AWS CLI (and any other tools built on AWS SDKs) will leverage the \u003ccode\u003eAWS_SESSION_TOKEN\u003c/code\u003e and \u003ccode\u003eAWS_SECURITY_TOKEN\u003c/code\u003e values before leveraging the \u003ccode\u003eAWS_ACCESS_KEY_ID\u003c/code\u003e and \u003ccode\u003eAWS_SECRET_ACCESS_KEY\u003c/code\u003e values.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eAWS_SESSION_TOKEN\u003c/code\u003e and \u003ccode\u003eAWS_SECURITY_TOKEN\u003c/code\u003e tokens are more secure because they are ephemeral, and expire after a short (measured in hours) TTL. For this reason, these should generally be used instead of the \u003ccode\u003eAWS_ACCESS_KEY_ID\u003c/code\u003e and \u003ccode\u003eAWS_SECRET_ACCESS_KEY\u003c/code\u003e values.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/hugo/posts/2019/generate-tokens@2x.webp\" alt=\"Generating Secure Tokens\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/hugo/posts/2019/generate-tokens@2x.png\" alt=\"Generating Secure Tokens\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003eBut there is an exception\u003c/strong\u003e — there are certain types of IAM-related tasks which cannot be performed using \u003ccode\u003eAWS_SESSION_TOKEN\u003c/code\u003e and \u003ccode\u003eAWS_SECURITY_TOKEN\u003c/code\u003e tokens, because they are IAM tokens themselves. In these cases, you want to fall back to the long-lived \u003ccode\u003eAWS_ACCESS_KEY_ID\u003c/code\u003e and \u003ccode\u003eAWS_SECRET_ACCESS_KEY\u003c/code\u003e values. You can do this by passing the \u003ccode\u003e--no-session\u003c/code\u003e option to the \u003ccode\u003eaws-vault\u003c/code\u003e command.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eaws-vault exec default --no-session -- env | grep --no-color ^AWS | sort\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHere, you can see that the \u003ccode\u003eAWS_SESSION_TOKEN\u003c/code\u003e and \u003ccode\u003eAWS_SECURITY_TOKEN\u003c/code\u003e tokens are not generated, so the AWS CLI (and any other tools built on AWS SDKs) will leverage the \u003ccode\u003eAWS_ACCESS_KEY_ID\u003c/code\u003e and \u003ccode\u003eAWS_SECRET_ACCESS_KEY\u003c/code\u003e values instead.\u003c/p\u003e\n\u003ch2 id=\"passing-to-local-docker\"\u003ePassing to (local) Docker\u003c/h2\u003e\n\u003cp\u003eIt is becoming more popular to provide Docker containers for running software, especially when that software has a number of (potentially-complex) dependencies. By wrapping everything up into a nice little Docker image, it makes it much simpler to build and distribute software that is meant to run locally.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/hugo/posts/2018/docker-logo.webp\" alt=\"Docker Logo\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/hugo/posts/2018/docker-logo.jpg\" alt=\"Docker Logo\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eWith the traditional \u003ccode\u003e~/.aws\u003c/code\u003e directory, you can mount it as read-only inside a Docker container if you want that Docker container to be able to communicate with AWS on your behalf.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker run -ti -v $HOME/.aws:/root/.aws:ro \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003eimage_name\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e sh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eEasy, right? Wrap it in a \u003ccode\u003eMakefile\u003c/code\u003e or a Bash \u003ccode\u003ealias\u003c/code\u003e, and call it a day.\u003c/p\u003e\n\u003cp\u003eBut using \u003ccode\u003eaws-vault\u003c/code\u003e makes this a little more complicated. \u003ccode\u003eaws-vault\u003c/code\u003e runs on your local machine (not inside your Docker container), and your \u003ccode\u003e~/.aws/credentials\u003c/code\u003e file is empty. How do we pass your credentials into a Docker container?\u003c/p\u003e\n\u003cp\u003eBy exporting the environment variables and passing them to \u003ccode\u003edocker run\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker run -ti \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    --env-file \u0026lt;\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003eaws-vault exec default -- env | grep --no-color ^AWS_\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003eimage_name\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e sh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003caside class=\"age aside container flex\"\u003e\n\u003cp\u003eTested in \u003cb\u003eBash 3.2.57\u003c/b\u003e (latest GPLv2 release; ships by default in macOS) + \u003cb\u003eBash 5.0.3\u003c/b\u003e (GPLv3; installed via Homebrew).\u003c/p\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eWow! What does this do?\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eExports the credentials to the environment.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFilters the environment variables by those that begin with \u003ccode\u003eAWS\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRun Docker, passing the \u003ccode\u003eAWS_*\u003c/code\u003e environment variables into Docker.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThis particular command will start an interactive \u003ccode\u003esh\u003c/code\u003e shell session. You can run other commands using \u003ca href=\"https://docs.docker.com/engine/reference/commandline/run/\"\u003e\u003ccode\u003edocker run\u003c/code\u003e\u003c/a\u003e as appropriate.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/99designs/aws-vault\"\u003eaws-vault\u003c/a\u003e is a great tool for managing your credentials, helping you work with AWS-related tooling, and makes it easy to follow best-practices. If you\u0026rsquo;re interested in learning more, check out the \u003ccode\u003eREADME\u003c/code\u003e.\u003c/p\u003e\n",
        "plain":"  Overview aws-vault is a tool for storing your AWS credentials in your system keychain instead of as a plain text file on-disk.\nCredentials and other secrets (including your various system passwords) are stored inside your system keychain. They are encrypted, and cannot easily be stolen by a rogue script or application. By keeping your AWS credentials in your system keychain, they are available to you when you are logged in, unavailable when you are logged out, and provide an important layer of security that the standard plain text storage method does not.\nIt is designed to work cooperatively with the AWS Unified CLI Tools. It also provides utilities for other AWS best practices such as being able to generate session tokens, or logging into the AWS Console with your IAM credentials using a simple command.\nYou can learn more about the thinking behind it from the original 99 designs blog post.\nLeveraging the Keychain By default, every Mac user has a system and a login keychain that stores the bulk of your secure information (e.g., certificate authorities which enable SSL/TLS connections, website passwords or credit cards saved in your browser).\n  On macOS, credentials are stored in a non-login keychain in Keychain Access.app. Instead, they are stored in a new aws-vault keychain. In order to manage these credentials with the Keychain Access.app app, you\u0026rsquo;ll need to import it.\n  File → Import Items…\n  Choose aws-vault.keychain-db from the default directory.\n  Right click → Change Settings for Keychain “aws-vault”…\n  Change the value for Lock after {NUMBER} minutes of inactivity to something like 1440 minutes (1 day). Feel free to tune for security/convenience according to your tastes.\n  AWS Config File After adding credentials to aws-vault (e.g., aws-vault add default), you can instruct the aws-cli to use aws-vault instead of ~/.aws/credentials.\nHere is an ~/.aws/config entry for the default profile:\n[default] region=us-east-1 credential_process=aws-vault exec -j default After all credentials are stored in aws-vault, and all ~/.aws/config entries have been updated with the credential_process line, ~/.aws/credentials should be empty.\nViewing Credentials macOS ships with the FreeBSD flavor of command line tools instead of the GNU flavor which ships with most Linuxes. This post references the GNU flavor. Please see “Using GNU command line tools in macOS instead of FreeBSD tools” for more information.\n If you want to view the credentials for a profile, or if you want to expose them as environment variables, you can run:\naws-vault exec default -- env | grep --no-color ^AWS | sort If you want to use them, the aws-cli will pick up environment variables before it looks for a credentials definition. So, if you want to use aws-vault with aws-cli without specifying the credential_process setting in your ~/.aws/config entry, you can do something like this:\naws-vault exec default -- aws s3 ls Token Types The AWS CLI (and any other tools built on AWS SDKs) will leverage the AWS_SESSION_TOKEN and AWS_SECURITY_TOKEN values before leveraging the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY values.\nAWS_SESSION_TOKEN and AWS_SECURITY_TOKEN tokens are more secure because they are ephemeral, and expire after a short (measured in hours) TTL. For this reason, these should generally be used instead of the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY values.\n  But there is an exception — there are certain types of IAM-related tasks which cannot be performed using AWS_SESSION_TOKEN and AWS_SECURITY_TOKEN tokens, because they are IAM tokens themselves. In these cases, you want to fall back to the long-lived AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY values. You can do this by passing the --no-session option to the aws-vault command.\naws-vault exec default --no-session -- env | grep --no-color ^AWS | sort Here, you can see that the AWS_SESSION_TOKEN and AWS_SECURITY_TOKEN tokens are not generated, so the AWS CLI (and any other tools built on AWS SDKs) will leverage the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY values instead.\nPassing to (local) Docker It is becoming more popular to provide Docker containers for running software, especially when that software has a number of (potentially-complex) dependencies. By wrapping everything up into a nice little Docker image, it makes it much simpler to build and distribute software that is meant to run locally.\n  With the traditional ~/.aws directory, you can mount it as read-only inside a Docker container if you want that Docker container to be able to communicate with AWS on your behalf.\ndocker run -ti -v $HOME/.aws:/root/.aws:ro {image_name} sh Easy, right? Wrap it in a Makefile or a Bash alias, and call it a day.\nBut using aws-vault makes this a little more complicated. aws-vault runs on your local machine (not inside your Docker container), and your ~/.aws/credentials file is empty. How do we pass your credentials into a Docker container?\nBy exporting the environment variables and passing them to docker run.\ndocker run -ti \\  --env-file \u0026lt;(aws-vault exec default -- env | grep --no-color ^AWS_) \\  {image_name} sh  Tested in Bash 3.2.57 (latest GPLv2 release; ships by default in macOS) + Bash 5.0.3 (GPLv3; installed via Homebrew).\n Wow! What does this do?\n  Exports the credentials to the environment.\n  Filters the environment variables by those that begin with AWS.\n  Run Docker, passing the AWS_* environment variables into Docker.\n  This particular command will start an interactive sh shell session. You can run other commands using docker run as appropriate.\n  Conclusion aws-vault is a great tool for managing your credentials, helping you work with AWS-related tooling, and makes it easy to follow best-practices. If you\u0026rsquo;re interested in learning more, check out the README.\n",
        "source":"\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2019/secure-auth@2x.jpg\" alt=\"Using aws-vault\" width=\"2000\" height=\"873\" \u003e}}\n\n## Overview\n\n**[aws-vault]** is a tool for storing your AWS credentials in your system keychain instead of as a plain text file on-disk.\n\nCredentials and other secrets (including your various system passwords) are stored inside your system keychain. They are encrypted, and cannot easily be stolen by a rogue script or application. By keeping your AWS credentials in your system keychain, they are available to you when you are logged in, unavailable when you are logged out, and provide an important layer of security that the standard plain text storage method does not.\n\nIt is designed to work cooperatively with the [AWS Unified CLI Tools][aws-cli]. It also provides utilities for other AWS best practices such as being able to generate session tokens, or logging into the AWS Console with your IAM credentials using a simple command.\n\nYou can learn more about the thinking behind it from the [original 99 designs blog post]({{\u003c wayback \"https://99designs.com.au/tech-blog/blog/2015/10/26/aws-vault/\" \u003e}}).\n\n## Leveraging the Keychain\n\nBy default, every Mac user has a _system_ and a _login_ keychain that stores the bulk of your secure information (e.g., certificate authorities which enable SSL/TLS connections, website passwords or credit cards saved in your browser).\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2019/keychain@2x.jpg\" alt=\"Leveraging the Keychain\" width=\"1920\" height=\"1080\" \u003e}}\n\nOn macOS, credentials are stored in a non-_login_ keychain in _Keychain Access.app_. Instead, they are stored in a new _aws-vault_ keychain. In order to manage these credentials with the _Keychain Access.app_ app, you'll need to import it.\n\n1. _File → Import Items…_\n\n1. Choose `aws-vault.keychain-db` from the default directory.\n\n1. Right click → _Change Settings for Keychain “aws-vault”…_\n\n1. Change the value for _Lock after {NUMBER} minutes of inactivity_ to something like 1440 minutes (1 day). Feel free to tune for security/convenience according to your tastes.\n\n## AWS Config File\n\nAfter adding credentials to `aws-vault` (e.g., `aws-vault add default`), you can instruct the [aws-cli] to use `aws-vault` instead of `~/.aws/credentials`.\n\nHere is an `~/.aws/config` entry for the _default_ profile:\n\n```ini\n[default]\nregion=us-east-1\ncredential_process=aws-vault exec -j default\n```\n\nAfter all credentials are stored in `aws-vault`, and all `~/.aws/config` entries have been updated with the `credential_process` line, `~/.aws/credentials` should be **empty**.\n\n## Viewing Credentials\n\n{{\u003cmac-gnu\u003e}}\n\nIf you want to view the credentials for a profile, or if you want to expose them as environment variables, you can run:\n\n```bash\naws-vault exec default -- env | grep --no-color ^AWS | sort\n```\n\nIf you want to _use_ them, the [aws-cli] will [pick up environment variables before it looks for a credentials definition](https://docs.aws.amazon.com/cli/latest/topic/config-vars.html#id1). So, if you want to use [aws-vault] with [aws-cli] without specifying the `credential_process` setting in your `~/.aws/config` entry, you can do something like this:\n\n```bash\naws-vault exec default -- aws s3 ls\n```\n\n## Token Types\n\nThe AWS CLI (and any other tools built on AWS SDKs) will leverage the `AWS_SESSION_TOKEN` and `AWS_SECURITY_TOKEN` values before leveraging the `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` values.\n\n`AWS_SESSION_TOKEN` and `AWS_SECURITY_TOKEN` tokens are more secure because they are ephemeral, and expire after a short (measured in hours) TTL. For this reason, these should generally be used instead of the `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` values.\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2019/generate-tokens@2x.png\" alt=\"Generating Secure Tokens\" width=\"2000\" height=\"874\" \u003e}}\n\n**But there is an exception** — there are certain types of IAM-related tasks which cannot be performed using `AWS_SESSION_TOKEN` and `AWS_SECURITY_TOKEN` tokens, because they are IAM tokens themselves. In these cases, you want to fall back to the long-lived `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` values. You can do this by passing the `--no-session` option to the `aws-vault` command.\n\n```bash\naws-vault exec default --no-session -- env | grep --no-color ^AWS | sort\n```\n\nHere, you can see that the `AWS_SESSION_TOKEN` and `AWS_SECURITY_TOKEN` tokens are not generated, so the AWS CLI (and any other tools built on AWS SDKs) will leverage the `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` values instead.\n\n## Passing to (local) Docker\n\nIt is becoming more popular to provide Docker containers for running software, especially when that software has a number of (potentially-complex) dependencies. By wrapping everything up into a nice little Docker image, it makes it much simpler to build and distribute software that is meant to run locally.\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/hugo/posts/2018/docker-logo.jpg\" alt=\"Docker Logo\" width=\"2400\" height=\"1048\" \u003e}}\n\nWith the traditional `~/.aws` directory, you can mount it as read-only inside a Docker container if you want that Docker container to be able to communicate with AWS on your behalf.\n\n```bash\ndocker run -ti -v $HOME/.aws:/root/.aws:ro {image_name} sh\n```\n\nEasy, right? Wrap it in a `Makefile` or a Bash `alias`, and call it a day.\n\nBut using `aws-vault` makes this a little more complicated. `aws-vault` runs on your local machine (not inside your Docker container), and your `~/.aws/credentials` file is empty. How do we pass your credentials into a Docker container?\n\nBy exporting the environment variables and passing them to `docker run`.\n\n```bash\ndocker run -ti \\\n    --env-file \u003c(aws-vault exec default -- env | grep --no-color ^AWS_) \\\n    {image_name} sh\n```\n\n{{\u003caside\u003e}}\n\u003cp\u003eTested in \u003cb\u003eBash 3.2.57\u003c/b\u003e (latest GPLv2 release; ships by default in macOS) + \u003cb\u003eBash 5.0.3\u003c/b\u003e (GPLv3; installed via Homebrew).\u003c/p\u003e\n{{\u003c/aside\u003e}}\n\nWow! What does this do?\n\n1. Exports the credentials to the environment.\n\n1. Filters the environment variables by those that begin with `AWS`.\n\n1. Run Docker, passing the `AWS_*` environment variables into Docker.\n\n1. This particular command will start an interactive `sh` shell session. You can run other commands using [`docker run`](https://docs.docker.com/engine/reference/commandline/run/) as appropriate.\n\n## Conclusion\n\n[aws-vault] is a great tool for managing your credentials, helping you work with AWS-related tooling, and makes it easy to follow best-practices. If you're interested in learning more, check out the `README`.\n\n  [aws-cli]: https://aws.amazon.com/cli/\n  [aws-vault]: https://github.com/99designs/aws-vault\n"},
    "links": {
        "prev": {"title": "Converting iMessage Stickers, Animoji, and Memoji to Slackmoji (Slack Emoji)", "permalink": "https://ryanparman.com/posts/2019/converting-imessage-stickers-animoji-and-memoji-to-slackmoji-slack-emoji/"},
        "next": {"title": "Using GNU command line tools in macOS instead of FreeBSD tools", "permalink": "https://ryanparman.com/posts/2019/using-gnu-command-line-tools-in-macos-instead-of-freebsd-tools/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "My favorite Mac apps: Music and Video Apps",
    "description": "",
    "summary": {
        "content": "As we lead-up to Christmas (and other holidays that I don’t personally celebrate), I thought I’d put together a list of a few of my favorite things — Mac apps top be specific. These are some of my favorite music and video apps. iTunes, iTunes Match, Last.fm, Spotify \u0026amp; Tracks I’ve been using iTunes to manage my music since iTunes 4.1 came out for Windows in 2003. Prior to that, I had a folder of music organized alphabetically and used Winamp for playback.",
        "isTruncated": true
    },
    "published": "2012-12-14T23:30:41Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2012/my-favorite-mac-apps-music-and-video-apps/",
    "relativePermalink": "/posts/2012/my-favorite-mac-apps-music-and-video-apps/",
    "aliases": ["/2012/12/14/my-favorite-mac-apps-music-and-video-apps/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": ["Favorite Apps"],
    "keywords": [],
    "meta": {
        "wordCount": 668,
        "readingTime": "4 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2012/20121214-my-favorite-mac-apps-music-and-video-apps.md",
        "logicalName": "20121214-my-favorite-mac-apps-music-and-video-apps.md",
        "translationBaseName": "20121214-my-favorite-mac-apps-music-and-video-apps",
        "baseFileName": "20121214-my-favorite-mac-apps-music-and-video-apps",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2012/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#ituneshttpswebarchiveorgweb20121214233041httpitunescom-itunes-matchhttpswebarchiveorgweb20121214233041httpwwwapplecomitunesitunes-match-lastfmhttpswebarchiveorgweb20121214233041httpwwwlastfmdownload-spotifyhttpswebarchiveorgweb20121214233041httpwwwspotifycom--trackshttpswebarchiveorgweb20121214233041httpconceitedsoftwarecomproductstracks\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://itunes.com\"\u003eiTunes\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121214233041/http://www.apple.com/itunes/itunes-match/\"\u003eiTunes Match\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121214233041/http://www.last.fm/download\"\u003eLast.fm\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121214233041/http://www.spotify.com\"\u003eSpotify\u003c/a\u003e \u0026amp; \u003ca href=\"https://web.archive.org/web/20121214233041/http://conceitedsoftware.com/products/tracks\"\u003eTracks\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#makemkvhttpswebarchiveorgweb20121214233041httpmakemkvcom-ripithttpswebarchiveorgweb20121214233041httpthelittleappfactorycomripit-handbrakehttpswebarchiveorgweb20121214233041httphandbrakefr-sublerhttpswebarchiveorgweb20121214233041httpcodegooglecompsubler-and-mp4-toolshttpswebarchiveorgweb20121214233041httpwwwemmgunncommp4toolsmp4toolshomehtml\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://makemkv.com\"\u003eMakeMKV\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121214233041/http://thelittleappfactory.com/ripit/\"\u003eRipIt\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121214233041/http://handbrake.fr\"\u003eHandbrake\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121214233041/http://code.google.com/p/subler/\"\u003eSubler\u003c/a\u003e and \u003ca href=\"https://web.archive.org/web/20121214233041/http://www.emmgunn.com/mp4tools/mp4toolshome.html\"\u003eMP4 Tools\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#vuzehttpswebarchiveorgweb20121214233041httpwwwvuzecom\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://www.vuze.com\"\u003eVuze\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#maxhttpswebarchiveorgweb20121214233041httpsboothorgmax\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://sbooth.org/Max/\"\u003eMax\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#miro-video-converterhttpswebarchiveorgweb20121214233041httpwwwmirovideoconvertercom\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://www.mirovideoconverter.com\"\u003eMiro Video Converter\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#musicbrainz-picardhttpswebarchiveorgweb20121214233041httpmusicbrainzorgdocmusicbrainz_picard\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://musicbrainz.org/doc/MusicBrainz_Picard\"\u003eMusicBrainz Picard\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#ringtoneshttpswebarchiveorgweb20121214233041httpthelittleappfactorycomringtones\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://thelittleappfactory.com/ringtones/\"\u003eRingtones\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#vlchttpswebarchiveorgweb20121214233041httpwwwvideolanorg\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://www.videolan.org\"\u003eVLC\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eAs we lead-up to Christmas (and other holidays that I don’t personally celebrate), I thought I’d put together a list of a few of my favorite things — Mac apps top be specific. These are some of my favorite \u003cem\u003emusic and video apps\u003c/em\u003e.\u003c/p\u003e\n\u003ch2 id=\"ituneshttpswebarchiveorgweb20121214233041httpitunescom-itunes-matchhttpswebarchiveorgweb20121214233041httpwwwapplecomitunesitunes-match-lastfmhttpswebarchiveorgweb20121214233041httpwwwlastfmdownload-spotifyhttpswebarchiveorgweb20121214233041httpwwwspotifycom--trackshttpswebarchiveorgweb20121214233041httpconceitedsoftwarecomproductstracks\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://itunes.com\"\u003eiTunes\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121214233041/http://www.apple.com/itunes/itunes-match/\"\u003eiTunes Match\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121214233041/http://www.last.fm/download\"\u003eLast.fm\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121214233041/http://www.spotify.com\"\u003eSpotify\u003c/a\u003e \u0026amp; \u003ca href=\"https://web.archive.org/web/20121214233041/http://conceitedsoftware.com/products/tracks\"\u003eTracks\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eI’ve been using iTunes to manage my music since iTunes 4.1 came out for Windows in 2003. Prior to that, I had a folder of music organized alphabetically and used \u003ca href=\"https://web.archive.org/web/20121214233041/http://www.winamp.com\"\u003eWinamp\u003c/a\u003e for playback. (If you’re still doing that in 2012, I’m judging you.)\u003c/p\u003e\n\u003cp\u003eI use iTunes to hold all of my music, movies, TV shows and digital books. With iTunes running on my home computer, I can stream all of my media to my Apple TV, iPads and iPhones, into every room of the house.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/itunes-match.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/itunes-match.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eiTunes Match is awesome! If I’m walking through downtown Seattle and have my iPhone with me, I can listen to any song in my library. If I’m riding the bus to work, I can pull out my iPad, do some reading, and listen to any song in my library. If I get to work and open up iTunes, I can listen to any song in my library. It’s super-awesome!\u003c/p\u003e\n\u003cp\u003eI use Last.fm to take my listening habits and make recommendations for new music that I might like.\u003c/p\u003e\n\u003cp\u003eI’ve spent time with both \u003ca href=\"https://web.archive.org/web/20121214233041/http://rdio.com\"\u003eRdio\u003c/a\u003e and Spotify, and I ended up settling on Spotify as a way to supplement iTunes. I can check out entire albums before I decide to get them and put them into iTunes. It’s also good for music that I don’t want to clutter up my iTunes library with, such as tracks my Miley Cyrus that my daughter likes.\u003c/p\u003e\n\u003cp\u003eTracks is a small utility that scrobbles the music I listen to into Last.fm, and adds keyboard commands for previous/next/pause/play controls.\u003c/p\u003e\n\u003ch2 id=\"makemkvhttpswebarchiveorgweb20121214233041httpmakemkvcom-ripithttpswebarchiveorgweb20121214233041httpthelittleappfactorycomripit-handbrakehttpswebarchiveorgweb20121214233041httphandbrakefr-sublerhttpswebarchiveorgweb20121214233041httpcodegooglecompsubler-and-mp4-toolshttpswebarchiveorgweb20121214233041httpwwwemmgunncommp4toolsmp4toolshomehtml\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://makemkv.com\"\u003eMakeMKV\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121214233041/http://thelittleappfactory.com/ripit/\"\u003eRipIt\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121214233041/http://handbrake.fr\"\u003eHandbrake\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121214233041/http://code.google.com/p/subler/\"\u003eSubler\u003c/a\u003e and \u003ca href=\"https://web.archive.org/web/20121214233041/http://www.emmgunn.com/mp4tools/mp4toolshome.html\"\u003eMP4 Tools\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eI prefer for all of my video content to be in industry standard MP4/H.264/AAC formats. It’s also convenient that Apple TV, Playstation 3, Xbox 360, iPad, iPhone and my HP TouchPad running Android 4 can all play this format.\u003c/p\u003e\n\u003cp\u003eI use MakeMKV or RipIt to make personal backups of Blu-rays or DVDs (respectively) that I own. I use Handbrake to compress the source files from the disc into MP4/H.264/AAC files. I use Subler to lookup and write the correct metadata into the files (artwork, title, chapters, etc.). Subler is \u003cem\u003efar\u003c/em\u003e superior to older apps such as AtomicParsley, Meta X or Meta Z.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/handbrake.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/handbrake.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eIf a movie spans multiple discs, or if I’ve managed to end up with a file in an MKV container or uses AC3 audio instead of AAC, I can use MP4 Tools to fix and/or merge them.\u003c/p\u003e\n\u003cp\u003eOnce I load the resulting movie into iTunes, I can sync it to any of my devices to watch on-the-go, or stream it to any TV in the house with Apple TV.\u003c/p\u003e\n\u003ch2 id=\"vuzehttpswebarchiveorgweb20121214233041httpwwwvuzecom\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://www.vuze.com\"\u003eVuze\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eVuze is a powerful BitTorrent client. I have nothing else to say on this matter.\u003c/p\u003e\n\u003ch2 id=\"maxhttpswebarchiveorgweb20121214233041httpsboothorgmax\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://sbooth.org/Max/\"\u003eMax\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eMax is a really great audio encoder. I often use it when a friend of mine gives me some \u003ca href=\"https://web.archive.org/web/20121214233041/https://en.wikipedia.org/wiki/FLAC\"\u003eFLAC\u003c/a\u003e files or \u003ca href=\"https://web.archive.org/web/20121214233041/https://en.wikipedia.org/wiki/Wav\"\u003eWAVs\u003c/a\u003e and I want to turn them into \u003ca href=\"https://web.archive.org/web/20121214233041/https://en.wikipedia.org/wiki/MP3\"\u003eMP3s\u003c/a\u003e at 320kbps.\u003c/p\u003e\n\u003ch2 id=\"miro-video-converterhttpswebarchiveorgweb20121214233041httpwwwmirovideoconvertercom\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://www.mirovideoconverter.com\"\u003eMiro Video Converter\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eI typically use this tool when I’m putting video on my blog, and want to provide \u003ca href=\"https://web.archive.org/web/20121214233041/http://diveintohtml5.info/video.html#what-works\"\u003ebrowser-native HTML5 formats\u003c/a\u003e. It’s also great for creating mobile-friendly versions of video files for the wide array of devices out there.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/miro.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/miro.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"musicbrainz-picardhttpswebarchiveorgweb20121214233041httpmusicbrainzorgdocmusicbrainz_picard\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://musicbrainz.org/doc/MusicBrainz_Picard\"\u003eMusicBrainz Picard\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003ePicard is a great tool for looking up the metadata for my music from the \u003ca href=\"https://web.archive.org/web/20121214233041/http://musicbrainz.org\"\u003eMusicBrainz\u003c/a\u003e service. It’s usually pretty good, and if it makes a mistake, you can easily correct it, save the changes, and load them into iTunes.\u003c/p\u003e\n\u003ch2 id=\"ringtoneshttpswebarchiveorgweb20121214233041httpthelittleappfactorycomringtones\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://thelittleappfactory.com/ringtones/\"\u003eRingtones\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eI use this for making iPhone ringtones out of tracks I have in iTunes.\u003c/p\u003e\n\u003ch2 id=\"vlchttpswebarchiveorgweb20121214233041httpwwwvideolanorg\"\u003e\u003ca href=\"https://web.archive.org/web/20121214233041/http://www.videolan.org\"\u003eVLC\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eVLC can play pretty much any video format. If I’m given an MKV file, a WMV file, and MPG file or something else, I can throw it into VLC and start watching it right away.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/vlc.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/vlc.jpg\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n",
        "plain":"As we lead-up to Christmas (and other holidays that I don’t personally celebrate), I thought I’d put together a list of a few of my favorite things — Mac apps top be specific. These are some of my favorite music and video apps.\niTunes, iTunes Match, Last.fm, Spotify \u0026amp; Tracks I’ve been using iTunes to manage my music since iTunes 4.1 came out for Windows in 2003. Prior to that, I had a folder of music organized alphabetically and used Winamp for playback. (If you’re still doing that in 2012, I’m judging you.)\nI use iTunes to hold all of my music, movies, TV shows and digital books. With iTunes running on my home computer, I can stream all of my media to my Apple TV, iPads and iPhones, into every room of the house.\n  iTunes Match is awesome! If I’m walking through downtown Seattle and have my iPhone with me, I can listen to any song in my library. If I’m riding the bus to work, I can pull out my iPad, do some reading, and listen to any song in my library. If I get to work and open up iTunes, I can listen to any song in my library. It’s super-awesome!\nI use Last.fm to take my listening habits and make recommendations for new music that I might like.\nI’ve spent time with both Rdio and Spotify, and I ended up settling on Spotify as a way to supplement iTunes. I can check out entire albums before I decide to get them and put them into iTunes. It’s also good for music that I don’t want to clutter up my iTunes library with, such as tracks my Miley Cyrus that my daughter likes.\nTracks is a small utility that scrobbles the music I listen to into Last.fm, and adds keyboard commands for previous/next/pause/play controls.\nMakeMKV, RipIt, Handbrake, Subler and MP4 Tools I prefer for all of my video content to be in industry standard MP4/H.264/AAC formats. It’s also convenient that Apple TV, Playstation 3, Xbox 360, iPad, iPhone and my HP TouchPad running Android 4 can all play this format.\nI use MakeMKV or RipIt to make personal backups of Blu-rays or DVDs (respectively) that I own. I use Handbrake to compress the source files from the disc into MP4/H.264/AAC files. I use Subler to lookup and write the correct metadata into the files (artwork, title, chapters, etc.). Subler is far superior to older apps such as AtomicParsley, Meta X or Meta Z.\n  If a movie spans multiple discs, or if I’ve managed to end up with a file in an MKV container or uses AC3 audio instead of AAC, I can use MP4 Tools to fix and/or merge them.\nOnce I load the resulting movie into iTunes, I can sync it to any of my devices to watch on-the-go, or stream it to any TV in the house with Apple TV.\nVuze Vuze is a powerful BitTorrent client. I have nothing else to say on this matter.\nMax Max is a really great audio encoder. I often use it when a friend of mine gives me some FLAC files or WAVs and I want to turn them into MP3s at 320kbps.\nMiro Video Converter I typically use this tool when I’m putting video on my blog, and want to provide browser-native HTML5 formats. It’s also great for creating mobile-friendly versions of video files for the wide array of devices out there.\n  MusicBrainz Picard Picard is a great tool for looking up the metadata for my music from the MusicBrainz service. It’s usually pretty good, and if it makes a mistake, you can easily correct it, save the changes, and load them into iTunes.\nRingtones I use this for making iPhone ringtones out of tracks I have in iTunes.\nVLC VLC can play pretty much any video format. If I’m given an MKV file, a WMV file, and MPG file or something else, I can throw it into VLC and start watching it right away.\n  ",
        "source":"\nAs we lead-up to Christmas (and other holidays that I don’t personally celebrate), I thought I’d put together a list of a few of my favorite things — Mac apps top be specific. These are some of my favorite *music and video apps*.\n\n## [iTunes]({{% wayback \"http://itunes.com\" %}}), [iTunes Match]({{% wayback \"http://www.apple.com/itunes/itunes-match/\" %}}), [Last.fm]({{% wayback \"http://www.last.fm/download\" %}}), [Spotify]({{% wayback \"http://www.spotify.com\" %}}) \u0026 [Tracks]({{% wayback \"http://conceitedsoftware.com/products/tracks\" %}})\n\nI’ve been using iTunes to manage my music since iTunes 4.1 came out for Windows in 2003. Prior to that, I had a folder of music organized alphabetically and used [Winamp]({{% wayback \"http://www.winamp.com\" %}}) for playback. (If you’re still doing that in 2012, I’m judging you.)\n\nI use iTunes to hold all of my music, movies, TV shows and digital books. With iTunes running on my home computer, I can stream all of my media to my Apple TV, iPads and iPhones, into every room of the house.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/itunes-match.png\"\u003e}}\n\niTunes Match is awesome! If I’m walking through downtown Seattle and have my iPhone with me, I can listen to any song in my library. If I’m riding the bus to work, I can pull out my iPad, do some reading, and listen to any song in my library. If I get to work and open up iTunes, I can listen to any song in my library. It’s super-awesome!\n\nI use Last.fm to take my listening habits and make recommendations for new music that I might like.\n\nI’ve spent time with both [Rdio]({{% wayback \"http://rdio.com\" %}}) and Spotify, and I ended up settling on Spotify as a way to supplement iTunes. I can check out entire albums before I decide to get them and put them into iTunes. It’s also good for music that I don’t want to clutter up my iTunes library with, such as tracks my Miley Cyrus that my daughter likes.\n\nTracks is a small utility that scrobbles the music I listen to into Last.fm, and adds keyboard commands for previous/next/pause/play controls.\n\n## [MakeMKV]({{% wayback \"http://makemkv.com\" %}}), [RipIt]({{% wayback \"http://thelittleappfactory.com/ripit/\" %}}), [Handbrake]({{% wayback \"http://handbrake.fr\" %}}), [Subler]({{% wayback \"http://code.google.com/p/subler/\" %}}) and [MP4 Tools]({{% wayback \"http://www.emmgunn.com/mp4tools/mp4toolshome.html\" %}})\n\nI prefer for all of my video content to be in industry standard MP4/H.264/AAC formats. It’s also convenient that Apple TV, Playstation 3, Xbox 360, iPad, iPhone and my HP TouchPad running Android 4 can all play this format.\n\nI use MakeMKV or RipIt to make personal backups of Blu-rays or DVDs (respectively) that I own. I use Handbrake to compress the source files from the disc into MP4/H.264/AAC files. I use Subler to lookup and write the correct metadata into the files (artwork, title, chapters, etc.). Subler is *far* superior to older apps such as AtomicParsley, Meta X or Meta Z.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/handbrake.png\"\u003e}}\n\nIf a movie spans multiple discs, or if I’ve managed to end up with a file in an MKV container or uses AC3 audio instead of AAC, I can use MP4 Tools to fix and/or merge them.\n\nOnce I load the resulting movie into iTunes, I can sync it to any of my devices to watch on-the-go, or stream it to any TV in the house with Apple TV.\n\n## [Vuze]({{% wayback \"http://www.vuze.com\" %}})\n\nVuze is a powerful BitTorrent client. I have nothing else to say on this matter.\n\n## [Max]({{% wayback \"http://sbooth.org/Max/\" %}})\n\nMax is a really great audio encoder. I often use it when a friend of mine gives me some [FLAC]({{% wayback \"https://en.wikipedia.org/wiki/FLAC\" %}}) files or [WAVs]({{% wayback \"https://en.wikipedia.org/wiki/Wav\" %}}) and I want to turn them into [MP3s]({{% wayback \"https://en.wikipedia.org/wiki/MP3\" %}}) at 320kbps.\n\n## [Miro Video Converter]({{% wayback \"http://www.mirovideoconverter.com\" %}})\n\nI typically use this tool when I’m putting video on my blog, and want to provide [browser-native HTML5 formats]({{% wayback \"http://diveintohtml5.info/video.html#what-works\" %}}). It’s also great for creating mobile-friendly versions of video files for the wide array of devices out there.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/miro.png\"\u003e}}\n\n## [MusicBrainz Picard]({{% wayback \"http://musicbrainz.org/doc/MusicBrainz_Picard\" %}})\n\nPicard is a great tool for looking up the metadata for my music from the [MusicBrainz]({{% wayback \"http://musicbrainz.org\" %}}) service. It’s usually pretty good, and if it makes a mistake, you can easily correct it, save the changes, and load them into iTunes.\n\n## [Ringtones]({{% wayback \"http://thelittleappfactory.com/ringtones/\" %}})\n\nI use this for making iPhone ringtones out of tracks I have in iTunes.\n\n## [VLC]({{% wayback \"http://www.videolan.org\" %}})\n\nVLC can play pretty much any video format. If I’m given an MKV file, a WMV file, and MPG file or something else, I can throw it into VLC and start watching it right away.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/vlc.jpg\"\u003e}}\n"},
    "links": {
        "prev": {"title": "My favorite Mac apps: Day-to-day Apps", "permalink": "https://ryanparman.com/posts/2012/my-favorite-mac-apps-day-to-day-apps/"},
        "next": {"title": "Aaron Swartz", "permalink": "https://ryanparman.com/posts/2013/aaron-swartz/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "My favorite Mac apps: Day-to-day Apps",
    "description": "",
    "summary": {
        "content": "As we lead-up to Christmas (and other holidays that I don’t personally celebrate), I thought I’d put together a list of a few of my favorite things — Mac apps top be specific. These are some of my favorite day-to-day apps. Safari My favorite web browser on the Mac platform. It’s fast, has minimal UI chrome, and has precisely the extensions I need. I used to bounce around between Firefox, Chrome and Safari, but over the past year, I haven’t felt the pain of anything missing from my browser experience.",
        "isTruncated": true
    },
    "published": "2012-12-13T23:20:26Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2012/my-favorite-mac-apps-day-to-day-apps/",
    "relativePermalink": "/posts/2012/my-favorite-mac-apps-day-to-day-apps/",
    "aliases": ["/2012/12/13/my-favorite-mac-apps-day-to-day-apps/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": ["Favorite Apps"],
    "keywords": [],
    "meta": {
        "wordCount": 368,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2012/20121213-my-favorite-mac-apps-day-to-day-apps.md",
        "logicalName": "20121213-my-favorite-mac-apps-day-to-day-apps.md",
        "translationBaseName": "20121213-my-favorite-mac-apps-day-to-day-apps",
        "baseFileName": "20121213-my-favorite-mac-apps-day-to-day-apps",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2012/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#safarihttpswebarchiveorgweb20121213232026httpapplecomsafari\"\u003e\u003ca href=\"https://web.archive.org/web/20121213232026/http://apple.com/safari/\"\u003eSafari\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#thingshttpswebarchiveorgweb20121213232026httpculturedcodecomthings\"\u003e\u003ca href=\"https://web.archive.org/web/20121213232026/http://culturedcode.com/things/\"\u003eThings\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#mailhttpswebarchiveorgweb20121213232026httpwwwapplecomosxwhats-newfeatureshtmlmail-calendarhttpswebarchiveorgweb20121213232026httpwwwapplecomosxwhats-newfeatureshtmlcalendar-and-messageshttpswebarchiveorgweb20121213232026httpwwwapplecomosxwhats-newfeatureshtmlmessages\"\u003e\u003ca href=\"https://web.archive.org/web/20121213232026/http://www.apple.com/osx/whats-new/features.html#mail\"\u003eMail\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121213232026/http://www.apple.com/osx/whats-new/features.html#calendar\"\u003eCalendar\u003c/a\u003e and \u003ca href=\"https://web.archive.org/web/20121213232026/http://www.apple.com/osx/whats-new/features.html#messages\"\u003eMessages\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#fantasticalhttpswebarchiveorgweb20121213232026httpflexibitscomfantastical\"\u003e\u003ca href=\"https://web.archive.org/web/20121213232026/http://flexibits.com/fantastical\"\u003eFantastical\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#1passwordhttpswebarchiveorgweb20121213232026httpsagilebitscomonepassword\"\u003e\u003ca href=\"https://web.archive.org/web/20121213232026/https://agilebits.com/onepassword\"\u003e1Password\u003c/a\u003e\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eAs we lead-up to Christmas (and other holidays that I don’t personally celebrate), I thought I’d put together a list of a few of my favorite things — Mac apps top be specific. These are some of my favorite \u003cem\u003eday-to-day apps\u003c/em\u003e.\u003c/p\u003e\n\u003ch2 id=\"safarihttpswebarchiveorgweb20121213232026httpapplecomsafari\"\u003e\u003ca href=\"https://web.archive.org/web/20121213232026/http://apple.com/safari/\"\u003eSafari\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eMy favorite web browser on the Mac platform. It’s fast, has minimal UI chrome, and has precisely the extensions I need.\u003c/p\u003e\n\u003cp\u003eI used to bounce around between \u003ca href=\"https://web.archive.org/web/20121213232026/http://firefox.com\"\u003eFirefox\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121213232026/http://chrome.google.com\"\u003eChrome\u003c/a\u003e and Safari, but over the past year, I haven’t felt the pain of anything missing from my browser experience.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/safari.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/safari.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"thingshttpswebarchiveorgweb20121213232026httpculturedcodecomthings\"\u003e\u003ca href=\"https://web.archive.org/web/20121213232026/http://culturedcode.com/things/\"\u003eThings\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThings is a to-do list that helps me get things done. It’s not complex, or even all that fancy, but now that it has cloud syncing across Mac/iPhone/iPad, and the ability to sync from the iOS 6 Reminders app, it helps me keep my to-dos organized.\u003c/p\u003e\n\u003ch2 id=\"mailhttpswebarchiveorgweb20121213232026httpwwwapplecomosxwhats-newfeatureshtmlmail-calendarhttpswebarchiveorgweb20121213232026httpwwwapplecomosxwhats-newfeatureshtmlcalendar-and-messageshttpswebarchiveorgweb20121213232026httpwwwapplecomosxwhats-newfeatureshtmlmessages\"\u003e\u003ca href=\"https://web.archive.org/web/20121213232026/http://www.apple.com/osx/whats-new/features.html#mail\"\u003eMail\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121213232026/http://www.apple.com/osx/whats-new/features.html#calendar\"\u003eCalendar\u003c/a\u003e and \u003ca href=\"https://web.archive.org/web/20121213232026/http://www.apple.com/osx/whats-new/features.html#messages\"\u003eMessages\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThese are my trusty, reliable apps for managing my day. Mail and Calendar do a better job together than I’ve experienced with \u003ca href=\"https://web.archive.org/web/20121213232026/https://www.microsoft.com/mac/outlook\"\u003eOutlook\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121213232026/https://www.mozilla.org/en-US/thunderbird/\"\u003eThunderbird/Sunbird/Lightning\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20121213232026/http://www.postbox-inc.com\"\u003ePostbox\u003c/a\u003e, or even \u003ca href=\"https://web.archive.org/web/20121213232026/http://www.sparrowmailapp.com\"\u003eSparrow\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI used to be a big fan of \u003ca href=\"https://web.archive.org/web/20121213232026/http://adium.im\"\u003eAdium\u003c/a\u003e, but as my needs have changed, Adium hasn’t kept up. I spend more time texting over iMessage than I do IM-ing, and Adium still doesn’t have support for audio/video conversations.\u003c/p\u003e\n\u003cp\u003eAlso, Messages now supports AIM, Yahoo! and Jabber (Google Talk, Facebook Messenger) protocols, so I really have no reason to use anything else.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/messages.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/messages.jpg\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch2 id=\"fantasticalhttpswebarchiveorgweb20121213232026httpflexibitscomfantastical\"\u003e\u003ca href=\"https://web.archive.org/web/20121213232026/http://flexibits.com/fantastical\"\u003eFantastical\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eFantastical is a handy utility for getting a quick view of my calendar from my menubar, and — combined with the \u003ca href=\"https://web.archive.org/web/20121213232026/http://www.apple.com/osx/whats-new/features.html#dictation\"\u003eDictation\u003c/a\u003e support in Mountain Lion — I can easily open up Fantastical with a key command, tell it about an upcoming event, and I’m done. Calendar events sync across my devices over iCloud, so I just create the event and I’m done.\u003c/p\u003e\n\u003ch2 id=\"1passwordhttpswebarchiveorgweb20121213232026httpsagilebitscomonepassword\"\u003e\u003ca href=\"https://web.archive.org/web/20121213232026/https://agilebits.com/onepassword\"\u003e1Password\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eI can’t remember how much harder my life was before the days of 1Password. I use it to store my browser passwords, my software serial numbers, my bank account information (for use with online order forms), store secure notes (the wi-fi password at work, the backup passwords for the secondary-authentication support enabled on my Google and Facebook accounts), social security numbers, etc. My life would be a whole lot worse without 1Password.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/1password.webp\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/1password.png\" alt=\"\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n",
        "plain":"As we lead-up to Christmas (and other holidays that I don’t personally celebrate), I thought I’d put together a list of a few of my favorite things — Mac apps top be specific. These are some of my favorite day-to-day apps.\nSafari My favorite web browser on the Mac platform. It’s fast, has minimal UI chrome, and has precisely the extensions I need.\nI used to bounce around between Firefox, Chrome and Safari, but over the past year, I haven’t felt the pain of anything missing from my browser experience.\n  Things Things is a to-do list that helps me get things done. It’s not complex, or even all that fancy, but now that it has cloud syncing across Mac/iPhone/iPad, and the ability to sync from the iOS 6 Reminders app, it helps me keep my to-dos organized.\nMail, Calendar and Messages These are my trusty, reliable apps for managing my day. Mail and Calendar do a better job together than I’ve experienced with Outlook, Thunderbird/Sunbird/Lightning, Postbox, or even Sparrow.\nI used to be a big fan of Adium, but as my needs have changed, Adium hasn’t kept up. I spend more time texting over iMessage than I do IM-ing, and Adium still doesn’t have support for audio/video conversations.\nAlso, Messages now supports AIM, Yahoo! and Jabber (Google Talk, Facebook Messenger) protocols, so I really have no reason to use anything else.\n  Fantastical Fantastical is a handy utility for getting a quick view of my calendar from my menubar, and — combined with the Dictation support in Mountain Lion — I can easily open up Fantastical with a key command, tell it about an upcoming event, and I’m done. Calendar events sync across my devices over iCloud, so I just create the event and I’m done.\n1Password I can’t remember how much harder my life was before the days of 1Password. I use it to store my browser passwords, my software serial numbers, my bank account information (for use with online order forms), store secure notes (the wi-fi password at work, the backup passwords for the secondary-authentication support enabled on my Google and Facebook accounts), social security numbers, etc. My life would be a whole lot worse without 1Password.\n  ",
        "source":"\nAs we lead-up to Christmas (and other holidays that I don’t personally celebrate), I thought I’d put together a list of a few of my favorite things — Mac apps top be specific. These are some of my favorite *day-to-day apps*.\n\n## [Safari]({{% wayback \"http://apple.com/safari/\" %}})\n\nMy favorite web browser on the Mac platform. It’s fast, has minimal UI chrome, and has precisely the extensions I need.\n\nI used to bounce around between [Firefox]({{% wayback \"http://firefox.com\" %}}), [Chrome]({{% wayback \"http://chrome.google.com\" %}}) and Safari, but over the past year, I haven’t felt the pain of anything missing from my browser experience.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/safari.png\"\u003e}}\n\n## [Things]({{% wayback \"http://culturedcode.com/things/\" %}})\n\nThings is a to-do list that helps me get things done. It’s not complex, or even all that fancy, but now that it has cloud syncing across Mac/iPhone/iPad, and the ability to sync from the iOS 6 Reminders app, it helps me keep my to-dos organized.\n\n## [Mail]({{% wayback \"http://www.apple.com/osx/whats-new/features.html#mail\" %}}), [Calendar]({{% wayback \"http://www.apple.com/osx/whats-new/features.html#calendar\" %}}) and [Messages]({{% wayback \"http://www.apple.com/osx/whats-new/features.html#messages\" %}})\n\nThese are my trusty, reliable apps for managing my day. Mail and Calendar do a better job together than I’ve experienced with [Outlook]({{% wayback \"https://www.microsoft.com/mac/outlook\" %}}), [Thunderbird/Sunbird/Lightning]({{% wayback \"https://www.mozilla.org/en-US/thunderbird/\" %}}), [Postbox]({{% wayback \"http://www.postbox-inc.com\" %}}), or even [Sparrow]({{% wayback \"http://www.sparrowmailapp.com\" %}}).\n\nI used to be a big fan of [Adium]({{% wayback \"http://adium.im\" %}}), but as my needs have changed, Adium hasn’t kept up. I spend more time texting over iMessage than I do IM-ing, and Adium still doesn’t have support for audio/video conversations.\n\nAlso, Messages now supports AIM, Yahoo! and Jabber (Google Talk, Facebook Messenger) protocols, so I really have no reason to use anything else.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/messages.jpg\"\u003e}}\n\n## [Fantastical]({{% wayback \"http://flexibits.com/fantastical\" %}})\n\nFantastical is a handy utility for getting a quick view of my calendar from my menubar, and — combined with the [Dictation]({{% wayback \"http://www.apple.com/osx/whats-new/features.html#dictation\" %}}) support in Mountain Lion — I can easily open up Fantastical with a key command, tell it about an upcoming event, and I’m done. Calendar events sync across my devices over iCloud, so I just create the event and I’m done.\n\n## [1Password]({{% wayback \"https://agilebits.com/onepassword\" %}})\n\nI can’t remember how much harder my life was before the days of 1Password. I use it to store my browser passwords, my software serial numbers, my bank account information (for use with online order forms), store secure notes (the wi-fi password at work, the backup passwords for the secondary-authentication support enabled on my Google and Facebook accounts), social security numbers, etc. My life would be a whole lot worse without 1Password.\n\n{{\u003cfullimage src=\"https://s3.amazonaws.com/s3.ryanparman.com/images/favorite-apps/1password.png\"\u003e}}\n"},
    "links": {
        "prev": {"title": "In response to ”DEAR APPLE: I'm Leaving You”", "permalink": "https://ryanparman.com/posts/2012/in-response-to-dear-apple-im-leaving-you/"},
        "next": {"title": "My favorite Mac apps: Music and Video Apps", "permalink": "https://ryanparman.com/posts/2012/my-favorite-mac-apps-music-and-video-apps/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Import Delicious/Pinboard Bookmarks Into Spotlight for Mac OS X",
    "description": "",
    "summary": {
        "content": "I’ve been heavily invested in Delicious as a bookmarking service for many years. However, after learning about Delicious’ sunsetting, I’ve decided to join the ranks of the Great Delicious Exodus and sign up for an account with Pinboard. One tool that has been an important part of my workflow is a tool called delimport, which automatically indexes my Delicious bookmarks and makes them available via Spotlight and Spotlight-powered tools (e.g., Alfred on Mac OS X). While delimport hasn’t been updated since 2007, it has continued to work remarkably well.",
        "isTruncated": true
    },
    "published": "2011-01-02T02:09:17Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2011/import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x/",
    "relativePermalink": "/posts/2011/import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x/",
    "aliases": ["/2011/01/01/import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 820,
        "readingTime": "4 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2011/20110102-import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x.md",
        "logicalName": "20110102-import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x.md",
        "translationBaseName": "20110102-import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x",
        "baseFileName": "20110102-import-deliciouspinboard-bookmarks-into-spotlight-for-mac-os-x",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2011/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#getting-started\"\u003eGetting Started\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#editing-and-compiling\"\u003eEditing and Compiling\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#cleaning-up\"\u003eCleaning Up\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installation\"\u003eInstallation\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#post-mortem\"\u003ePost-mortem\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eI’ve been heavily invested in \u003ca href=\"https://web.archive.org/web/20110102020917/http://delicious.com\"\u003eDelicious\u003c/a\u003e as a bookmarking service for many years. However, after learning about Delicious’ \u003ca href=\"https://web.archive.org/web/20110102020917/https://twitter.com/waxpancake/status/15483488237002752\"\u003esunsetting\u003c/a\u003e, I’ve decided to join the ranks of the \u003ca href=\"https://web.archive.org/web/20110102020917/https://twitter.com/PinboardIN/status/20323781167816704\"\u003eGreat Delicious Exodus\u003c/a\u003e and sign up for an account with \u003ca href=\"https://web.archive.org/web/20110102020917/http://pinboard.in\"\u003ePinboard\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eOne tool that has been an important part of my workflow is a tool called \u003ca href=\"https://web.archive.org/web/20110102020917/http://ianhenderson.org/delimport.html\"\u003edelimport\u003c/a\u003e, which automatically indexes my Delicious bookmarks and makes them available via \u003ca href=\"https://web.archive.org/web/20110102020917/http://www.apple.com/macosx/what-is-macosx/spotlight.html\"\u003eSpotlight\u003c/a\u003e and Spotlight-powered tools (e.g., \u003ca href=\"https://web.archive.org/web/20110102020917/http://alfredapp.com\"\u003eAlfred\u003c/a\u003e on Mac OS X).\u003c/p\u003e\n\u003cp\u003eWhile delimport hasn’t been updated since 2007, it has continued to work remarkably well. The upside is that the project has an open-source repository available, but I still ran into a few issues. Here’s how I added Pinboard support to delimport.\u003c/p\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003cp\u003eThe first thing to note is that I’m running \u003cem\u003eMac OS X 10.6.5\u003c/em\u003e and \u003cem\u003eXcode 3.2.5\u003c/em\u003e. This is notable because it’s what caused several of my problems while trying to solve this puzzle. We’ll get to that in a minute.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eI needed to pull down the delimport source code. This required additional steps.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eInstall \u003ca href=\"https://web.archive.org/web/20110102020917/http://macports.org\"\u003eMacPorts\u003c/a\u003e if you haven’t already.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUpdate MacPorts and its files to the latest version.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo port -d selfupdate\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eInstall \u003ca href=\"https://web.archive.org/web/20110102020917/http://darcs.net\"\u003eDarcs\u003c/a\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo port install darcs\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePull down the source code.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edarcs get http://ianhenderson.org/repos/delimport\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eI’ll save you the time and tell you that \u003cem\u003edelimport will not compile in Xcode 3.2\u003c/em\u003e. You’ll need to revert to an older version of Xcode, 3.1.4.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eGo to \u003ca href=\"https://web.archive.org/web/20110102020917/http://connect.apple.com\"\u003econnect.apple.com\u003c/a\u003e and login.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the sidebar, choose \u003cem\u003eDeveloper Tools\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eScroll down and find the section labelled \u003cem\u003eXcode 3.1.4 Developer Tools\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eChoose the \u003cem\u003eXcode 3.1.4 Developer DVD (Disk Image)\u003c/em\u003e which clocks in at 993 MB.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWhile waiting for that, you’ll need to uninstall your current version of Xcode.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esudo /Developer/Library/uninstall-devtools –mode\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eall\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOnce the Xcode 3.1.4 disk image is downloaded, install it.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eMake sure you include the \u003cem\u003eMac OS X 10.4 SDK\u003c/em\u003e as well.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAfter the install has completed, restart your computer. No seriously.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"editing-and-compiling\"\u003eEditing and Compiling\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e A couple of people have asked why I don’t just redistribute a modified version of the app. The reason is licensing. As far as I can tell, the source code is 100% copyrighted with no license for redistributing modifications to the source or the app. As such, I’m providing instructions for modifying the app but you’ll need to compile it yourself.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eOnce your system is back up, locate the \u003ccode\u003edelimport.xcodeproj\u003c/code\u003e file and open it in Xcode 3.1.4.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eChange the \u003cem\u003eBase SDK\u003c/em\u003e pulldown to \u003cem\u003eDeployment\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_base_sdk.webp\" alt=\"Base SDK\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_base_sdk.png\" alt=\"Base SDK\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the sidebar, choose the \u003ccode\u003edelimport\u003c/code\u003e project, right-click (or control-click), and choose \u003cem\u003eGet Info\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_get_info.webp\" alt=\"Get Info\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_get_info.png\" alt=\"Get Info\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFrom the resulting dialog box, change the value of the \u003cem\u003eArchitectures\u003c/em\u003e setting to \u003cem\u003e32/64-bit Universal\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_architecture.webp\" alt=\"Architectures\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_architecture.png\" alt=\"Architectures\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick the checkbox for \u003cem\u003eBuild Active Architecture Only\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFor the \u003cem\u003eValid Architectures\u003c/em\u003e setting, there are more architectures than we need. Remove all architectures except for \u003ccode\u003ei386\u003c/code\u003e and \u003ccode\u003ex86_64\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_valid_architecture.webp\" alt=\"Valid Architectures\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_valid_architecture.png\" alt=\"Valid Architectures\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWhile \u003ccode\u003edelimport\u003c/code\u003e is still selected in the sidebar, choose \u003cem\u003eProject \u0026gt; Edit Active Target “delimport”\u003c/em\u003e from the menubar. Choose the \u003cem\u003eProperties\u003c/em\u003e tab from the resulting dialog box. Change the version number to \u003ccode\u003e0.3.1u\u003c/code\u003e which says that you’re using an unofficial modification (just in case the developer releases an official 0.3.1 version).\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_properties.webp\" alt=\"Properties\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_properties.png\" alt=\"Properties\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOpen the \u003ccode\u003eClasses\u003c/code\u003e folder in the sidebar and find the \u003ccode\u003eDIBookmarksController.m\u003c/code\u003e file. Make the following changes to the file.\u003c/p\u003e\n\u003cscript type=\"application/javascript\" src=\"https://gist.github.com/skyzyx/762179.js\"\u003e\u003c/script\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the menubar, choose \u003cem\u003eBuild \u0026gt; Build\u003c/em\u003e. If all is well, the source should compile with no errors.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"cleaning-up\"\u003eCleaning Up\u003c/h2\u003e\n\u003cp\u003eFirst, let’s clean up after the old version of delimport.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eShutdown any running copies of delimport by launching \u003cem\u003eActivity Monitor\u003c/em\u003e, searching for \u003cem\u003edelimport\u003c/em\u003e, clicking the \u003cem\u003eQuit Process\u003c/em\u003e button in the toolbar, and choosing either \u003cem\u003eQuit\u003c/em\u003e or \u003cem\u003eForce Quit\u003c/em\u003e from the resulting dialog.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_activity_monitor.webp\" alt=\"Activity Monitor\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_activity_monitor.png\" alt=\"Activity Monitor\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOpen up your \u003cem\u003eAccounts\u003c/em\u003e preference pane, click on the \u003cem\u003eLogin Items\u003c/em\u003e tab, and delete any entries that contain \u003cem\u003edelimport\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_accounts.webp\" alt=\"Accounts preference pane\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_accounts.png\" alt=\"Accounts preference pane\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOpen your Terminal and run the following commands.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003erm -Rf ~/Library/Caches/org.ianhenderson.delimport \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\nrm -Rf ~/Library/Caches/Metadata/delimport/ \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\nrm -f ~/Library/Preferences/org.ianhenderson.delimport.plist\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"installation\"\u003eInstallation\u003c/h2\u003e\n\u003cp\u003eOnce we’ve removed the old cruft, let’s install our new app.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eFrom your \u003ccode\u003edelimport\u003c/code\u003e source code directory, open \u003ccode\u003ebuild/Deployment\u003c/code\u003e to find \u003ccode\u003edelimport.app\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_app.webp\" alt=\"delimport.app\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_app.png\" alt=\"delimport.app\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDrag the app into your \u003ccode\u003e/Applications\u003c/code\u003e or \u003ccode\u003e/Applications/Utilities\u003c/code\u003e directory.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLaunch the app.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSince we deleted all of the previous settings, your computer will think that this is the first time that we’ve launched the app. It will ask you if you want to launch it on login. Choose \u003cem\u003eAdd\u003c/em\u003e.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_launch.webp\" alt=\"Activity Monitor\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_launch.png\" alt=\"Activity Monitor\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you already have your credentials for \u003ca href=\"https://web.archive.org/web/20110102020917/http://pinboard.in\"\u003ePinboard\u003c/a\u003e stored in your Keychain, it will ask if you want to give delimport access to your Pinboard credentials. Choose \u003cem\u003eAlways Allow\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you don’t have your credentials saved, delimport will ask for your Pinboard credentials. Go ahead and enter them.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWithin a few moments, you’ll be able to use Spotlight to access your Pinboard bookmarks.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"post-mortem\"\u003ePost-mortem\u003c/h2\u003e\n\u003cp\u003eOnce everything is installed and working, you’ll probably want to remove Xcode 3.1.4 and reinstall the latest version. Simply follow the aforementioned uninstallation instructions to remove the old Xcode, then install the latest Xcode.\u003c/p\u003e\n\u003cp\u003eIf you don’t have the installer on-hand, you can always download the latest version from the logged-in version of \u003ca href=\"https://web.archive.org/web/20110102020917/https://developer.apple.com/mac\"\u003edeveloper.apple.com/mac\u003c/a\u003e.\u003c/p\u003e\n",
        "plain":"I’ve been heavily invested in Delicious as a bookmarking service for many years. However, after learning about Delicious’ sunsetting, I’ve decided to join the ranks of the Great Delicious Exodus and sign up for an account with Pinboard.\nOne tool that has been an important part of my workflow is a tool called delimport, which automatically indexes my Delicious bookmarks and makes them available via Spotlight and Spotlight-powered tools (e.g., Alfred on Mac OS X).\nWhile delimport hasn’t been updated since 2007, it has continued to work remarkably well. The upside is that the project has an open-source repository available, but I still ran into a few issues. Here’s how I added Pinboard support to delimport.\nGetting Started The first thing to note is that I’m running Mac OS X 10.6.5 and Xcode 3.2.5. This is notable because it’s what caused several of my problems while trying to solve this puzzle. We’ll get to that in a minute.\n  I needed to pull down the delimport source code. This required additional steps.\n  Install MacPorts if you haven’t already.\n  Update MacPorts and its files to the latest version.\nsudo port -d selfupdate   Install Darcs.\nsudo port install darcs   Pull down the source code.\ndarcs get http://ianhenderson.org/repos/delimport     I’ll save you the time and tell you that delimport will not compile in Xcode 3.2. You’ll need to revert to an older version of Xcode, 3.1.4.\n  Go to connect.apple.com and login.\n  In the sidebar, choose Developer Tools.\n  Scroll down and find the section labelled Xcode 3.1.4 Developer Tools.\n  Choose the Xcode 3.1.4 Developer DVD (Disk Image) which clocks in at 993 MB.\n  While waiting for that, you’ll need to uninstall your current version of Xcode.\nsudo /Developer/Library/uninstall-devtools –mode=all     Once the Xcode 3.1.4 disk image is downloaded, install it.\n  Make sure you include the Mac OS X 10.4 SDK as well.\n  After the install has completed, restart your computer. No seriously.\n    Editing and Compiling Note: A couple of people have asked why I don’t just redistribute a modified version of the app. The reason is licensing. As far as I can tell, the source code is 100% copyrighted with no license for redistributing modifications to the source or the app. As such, I’m providing instructions for modifying the app but you’ll need to compile it yourself.\n  Once your system is back up, locate the delimport.xcodeproj file and open it in Xcode 3.1.4.\n  Change the Base SDK pulldown to Deployment.\n    In the sidebar, choose the delimport project, right-click (or control-click), and choose Get Info.\n    From the resulting dialog box, change the value of the Architectures setting to 32/64-bit Universal.\n    Click the checkbox for Build Active Architecture Only.\n  For the Valid Architectures setting, there are more architectures than we need. Remove all architectures except for i386 and x86_64.\n    While delimport is still selected in the sidebar, choose Project \u0026gt; Edit Active Target “delimport” from the menubar. Choose the Properties tab from the resulting dialog box. Change the version number to 0.3.1u which says that you’re using an unofficial modification (just in case the developer releases an official 0.3.1 version).\n    Open the Classes folder in the sidebar and find the DIBookmarksController.m file. Make the following changes to the file.\n   In the menubar, choose Build \u0026gt; Build. If all is well, the source should compile with no errors.\n  Cleaning Up First, let’s clean up after the old version of delimport.\n  Shutdown any running copies of delimport by launching Activity Monitor, searching for delimport, clicking the Quit Process button in the toolbar, and choosing either Quit or Force Quit from the resulting dialog.\n    Open up your Accounts preference pane, click on the Login Items tab, and delete any entries that contain delimport.\n    Open your Terminal and run the following commands.\nrm -Rf ~/Library/Caches/org.ianhenderson.delimport \u0026amp;\u0026amp; rm -Rf ~/Library/Caches/Metadata/delimport/ \u0026amp;\u0026amp; rm -f ~/Library/Preferences/org.ianhenderson.delimport.plist   Installation Once we’ve removed the old cruft, let’s install our new app.\n  From your delimport source code directory, open build/Deployment to find delimport.app.\n    Drag the app into your /Applications or /Applications/Utilities directory.\n  Launch the app.\n  Since we deleted all of the previous settings, your computer will think that this is the first time that we’ve launched the app. It will ask you if you want to launch it on login. Choose Add.\n    If you already have your credentials for Pinboard stored in your Keychain, it will ask if you want to give delimport access to your Pinboard credentials. Choose Always Allow.\n  If you don’t have your credentials saved, delimport will ask for your Pinboard credentials. Go ahead and enter them.\n  Within a few moments, you’ll be able to use Spotlight to access your Pinboard bookmarks.\n  Post-mortem Once everything is installed and working, you’ll probably want to remove Xcode 3.1.4 and reinstall the latest version. Simply follow the aforementioned uninstallation instructions to remove the old Xcode, then install the latest Xcode.\nIf you don’t have the installer on-hand, you can always download the latest version from the logged-in version of developer.apple.com/mac.\n",
        "source":"\nI’ve been heavily invested in [Delicious]({{% wayback \"http://delicious.com\" %}}) as a bookmarking service for many years. However, after learning about Delicious’ [sunsetting]({{% wayback \"https://twitter.com/waxpancake/status/15483488237002752\" %}}), I’ve decided to join the ranks of the [Great Delicious Exodus]({{% wayback \"https://twitter.com/PinboardIN/status/20323781167816704\" %}}) and sign up for an account with [Pinboard]({{% wayback \"http://pinboard.in\" %}}).\n\nOne tool that has been an important part of my workflow is a tool called [delimport]({{% wayback \"http://ianhenderson.org/delimport.html\" %}}), which automatically indexes my Delicious bookmarks and makes them available via [Spotlight]({{% wayback \"http://www.apple.com/macosx/what-is-macosx/spotlight.html\" %}}) and Spotlight-powered tools (e.g., [Alfred]({{% wayback \"http://alfredapp.com\" %}}) on Mac OS X).\n\nWhile delimport hasn’t been updated since 2007, it has continued to work remarkably well. The upside is that the project has an open-source repository available, but I still ran into a few issues. Here’s how I added Pinboard support to delimport.\n\n## Getting Started\n\nThe first thing to note is that I’m running *Mac OS X 10.6.5* and *Xcode 3.2.5*. This is notable because it’s what caused several of my problems while trying to solve this puzzle. We’ll get to that in a minute.\n\n1. I needed to pull down the delimport source code. This required additional steps.\n\n    1. Install [MacPorts]({{% wayback \"http://macports.org\" %}}) if you haven’t already.\n\n    2. Update MacPorts and its files to the latest version.\n\n        ```bash\n        sudo port -d selfupdate\n        ```\n\n    3. Install [Darcs]({{% wayback \"http://darcs.net\" %}}).\n\n        ```bash\n        sudo port install darcs\n        ```\n\n    4. Pull down the source code.\n\n        ```bash\n        darcs get http://ianhenderson.org/repos/delimport\n        ```\n\n2. I’ll save you the time and tell you that *delimport will not compile in Xcode 3.2*. You’ll need to revert to an older version of Xcode, 3.1.4.\n\n    1. Go to [connect.apple.com]({{% wayback \"http://connect.apple.com\" %}}) and login.\n\n    2. In the sidebar, choose *Developer Tools*.\n\n    3. Scroll down and find the section labelled *Xcode 3.1.4 Developer Tools*.\n\n    4. Choose the *Xcode 3.1.4 Developer DVD (Disk Image)* which clocks in at 993 MB.\n\n    5. While waiting for that, you’ll need to uninstall your current version of Xcode.\n\n        ```bash\n        sudo /Developer/Library/uninstall-devtools –mode=all\n        ```\n\n3. Once the Xcode 3.1.4 disk image is downloaded, install it.\n\n    1. Make sure you include the *Mac OS X 10.4 SDK* as well.\n\n    2. After the install has completed, restart your computer. No seriously.\n\n## Editing and Compiling\n\n**Note:** A couple of people have asked why I don’t just redistribute a modified version of the app. The reason is licensing. As far as I can tell, the source code is 100% copyrighted with no license for redistributing modifications to the source or the app. As such, I’m providing instructions for modifying the app but you’ll need to compile it yourself.\n\n1. Once your system is back up, locate the `delimport.xcodeproj` file and open it in Xcode 3.1.4.\n\n2. Change the *Base SDK* pulldown to *Deployment*.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_base_sdk.png\" alt=\"Base SDK\"\u003e}}\n\n3. In the sidebar, choose the `delimport` project, right-click (or control-click), and choose *Get Info*.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_get_info.png\" alt=\"Get Info\"\u003e}}\n\n4. From the resulting dialog box, change the value of the *Architectures* setting to *32/64-bit Universal*.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_architecture.png\" alt=\"Architectures\"\u003e}}\n\n5. Click the checkbox for *Build Active Architecture Only*.\n\n6. For the *Valid Architectures* setting, there are more architectures than we need. Remove all architectures except for `i386` and `x86_64`.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_valid_architecture.png\" alt=\"Valid Architectures\"\u003e}}\n\n7. While `delimport` is still selected in the sidebar, choose *Project \u0026gt; Edit Active Target “delimport”* from the menubar. Choose the *Properties* tab from the resulting dialog box. Change the version number to `0.3.1u` which says that you’re using an unofficial modification (just in case the developer releases an official 0.3.1 version).\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_properties.png\" alt=\"Properties\"\u003e}}\n\n8. Open the `Classes` folder in the sidebar and find the `DIBookmarksController.m` file. Make the following changes to the file.\n\n    {{\u003c gist skyzyx 762179 \u003e}}\n\n9. In the menubar, choose *Build \u0026gt; Build*. If all is well, the source should compile with no errors.\n\n## Cleaning Up\n\nFirst, let’s clean up after the old version of delimport.\n\n1. Shutdown any running copies of delimport by launching *Activity Monitor*, searching for *delimport*, clicking the *Quit Process* button in the toolbar, and choosing either *Quit* or *Force Quit* from the resulting dialog.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_activity_monitor.png\" alt=\"Activity Monitor\"\u003e}}\n\n2. Open up your *Accounts* preference pane, click on the *Login Items* tab, and delete any entries that contain *delimport*.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_accounts.png\" alt=\"Accounts preference pane\"\u003e}}\n\n3. Open your Terminal and run the following commands.\n\n    ```bash\n    rm -Rf ~/Library/Caches/org.ianhenderson.delimport \u0026\u0026\n    rm -Rf ~/Library/Caches/Metadata/delimport/ \u0026\u0026\n    rm -f ~/Library/Preferences/org.ianhenderson.delimport.plist\n    ```\n\n## Installation\n\nOnce we’ve removed the old cruft, let’s install our new app.\n\n1. From your `delimport` source code directory, open `build/Deployment` to find `delimport.app`.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_app.png\" alt=\"delimport.app\"\u003e}}\n\n2. Drag the app into your `/Applications` or `/Applications/Utilities` directory.\n\n3. Launch the app.\n\n4. Since we deleted all of the previous settings, your computer will think that this is the first time that we’ve launched the app. It will ask you if you want to launch it on login. Choose *Add*.\n\n    {{\u003cfullimage src=\"https://cdn.ryanparman.com/wp-content/uploads/2011/01/delimport_launch.png\" alt=\"Activity Monitor\"\u003e}}\n\n5. If you already have your credentials for [Pinboard]({{% wayback \"http://pinboard.in\" %}}) stored in your Keychain, it will ask if you want to give delimport access to your Pinboard credentials. Choose *Always Allow*.\n\n6. If you don’t have your credentials saved, delimport will ask for your Pinboard credentials. Go ahead and enter them.\n\n7. Within a few moments, you’ll be able to use Spotlight to access your Pinboard bookmarks.\n\n## Post-mortem\n\nOnce everything is installed and working, you’ll probably want to remove Xcode 3.1.4 and reinstall the latest version. Simply follow the aforementioned uninstallation instructions to remove the old Xcode, then install the latest Xcode.\n\nIf you don’t have the installer on-hand, you can always download the latest version from the logged-in version of [developer.apple.com/mac]({{% wayback \"https://developer.apple.com/mac\" %}}).\n"},
    "links": {
        "prev": {"title": "2011 Resolutions", "permalink": "https://ryanparman.com/posts/2011/2011-resolutions/"},
        "next": {"title": "Nothing Lasts Forever", "permalink": "https://ryanparman.com/posts/2011/nothing-lasts-forever/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Run Internet Explorer 6 (or IE7, or IE8) images in VirtualBox on Mac OS X",
    "description": "",
    "summary": {
        "content": "These days I’m looking to save money anywhere I can. How about you? Whereas VMWare Fusion (as awesome as it is) runs around $80 USD per copy, Sun’s VirtualBox is a free, open-source product for virtualization that runs on Mac OS X, Linux, and Windows. Update: Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at MSDN. If you’ve not yet read the related post, \u0026ldquo;Run Internet Explorer 6 (or IE7, or IE8) images in VMWare Fusion on Mac OS X, you should.",
        "isTruncated": true
    },
    "published": "2009-07-01T04:33:14Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2009/run-ie6-ie7-ie8-images-virtualbox-macosx/",
    "relativePermalink": "/posts/2009/run-ie6-ie7-ie8-images-virtualbox-macosx/",
    "aliases": ["/2009/06/30/run-ie6-ie7-ie8-images-virtualbox-macosx/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 962,
        "readingTime": "5 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2009/20090701-run-ie6-ie7-ie8-images-virtualbox-macosx.md",
        "logicalName": "20090701-run-ie6-ie7-ie8-images-virtualbox-macosx.md",
        "translationBaseName": "20090701-run-ie6-ie7-ie8-images-virtualbox-macosx",
        "baseFileName": "20090701-run-ie6-ie7-ie8-images-virtualbox-macosx",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2009/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#prerequisites\"\u003ePrerequisites\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#downloading-and-preparing-stuff\"\u003eDownloading and Preparing stuff\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#extracting-the-disk-image\"\u003eExtracting the disk image\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#converting-the-vmware-image-to-a-virtualbox-image-optional\"\u003eConverting the VMWare image to a VirtualBox image (Optional)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#configuring-the-vm\"\u003eConfiguring the VM\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installing-the-drivers-and-guest-additions\"\u003eInstalling the drivers and Guest Additions\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#done\"\u003eDone!\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eThese days I’m looking to save money anywhere I can. How about you? Whereas VMWare Fusion (as awesome as it is) runs around $80 USD per copy, Sun’s VirtualBox is a free, open-source product for virtualization that runs on Mac OS X, Linux, and Windows.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUpdate:\u003c/strong\u003e Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at \u003ca href=\"https://web.archive.org/web/20090701043314/http://blogs.msdn.com/petel/archive/2009/09/09/running-the-ie-vpc-s-on-other-vpc-hosts.aspx\"\u003eMSDN\u003c/a\u003e. If you’ve not yet read the related post, \u0026ldquo;\u003ca href=\"/2009/01/07/run-ie6-ie7-ie8-images-vmware-fusion-macosx/\"\u003eRun Internet Explorer 6 (or IE7, or IE8) images in VMWare Fusion on Mac OS X\u003c/a\u003e, you should. This is a follow up on how to take those virtual machines (which we’ve already done a lot of work on), and convert them for use VirtualBox.\u003c/p\u003e\n\u003ch2 id=\"prerequisites\"\u003ePrerequisites\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eYou need to have access to a Mac OS X machine.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA broadband connection would be quite helpful.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA USB flash drive (or some other way to copy files to the VM before you have network access enabled).\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eVMWare Fusion uses the \u003ccode\u003e.vmdk\u003c/code\u003e disk format for its virtual drives. VirtualBox uses the \u003ccode\u003e.vdi\u003c/code\u003e format. Although VirtualBox can use the existing \u003ccode\u003e.vmdk\u003c/code\u003e images, you get better performance if you convert them to \u003ccode\u003e.vdi\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"downloading-and-preparing-stuff\"\u003eDownloading and Preparing stuff\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eDownload and install \u003ca href=\"https://web.archive.org/web/20090701043314/http://www.virtualbox.org/wiki/Downloads\"\u003eVirtualBox\u003c/a\u003e. It should live in the \u003ccode\u003e/Applications\u003c/code\u003e directory.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDownload and install \u003ca href=\"https://web.archive.org/web/20090701043314/http://www.kju-app.org\"\u003eQ\u003c/a\u003e (a Mac version of \u003ca href=\"https://web.archive.org/web/20090701043314/http://qemu.org\"\u003eQemu\u003c/a\u003e). It should live in the \u003ccode\u003e/Applications\u003c/code\u003e directory.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDownload and decompress an \u003ca href=\"https://web.archive.org/web/20090701043314/http://cdn.ryanparman.com/ie6-xpsp3.tar.gz\"\u003eIE6\u003c/a\u003e, \u003ca href=\"https://web.archive.org/web/20090701043314/http://cdn.ryanparman.com/ie7-xpsp3.tar.gz\"\u003eIE7\u003c/a\u003e, or \u003ca href=\"https://web.archive.org/web/20090701043314/http://cdn.ryanparman.com/ie8-xpsp3.tar.gz\"\u003eIE8\u003c/a\u003e VMWare Fusion image that I’ve posted previously. If you need ALL of them, you can save yourself the bandwidth by downloading the IE6 image, making a copy of the file, and upgrading that copy to IE7 or IE8.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"extracting-the-disk-image\"\u003eExtracting the disk image\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eWhen you decompress the VMWare Fusion image, you should end up with a folder containing 3 files: Two text files, and a \u003ccode\u003e.vmware\u003c/code\u003e file.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRight-click (or command-click) the \u003ccode\u003e.vmware\u003c/code\u003e file and choose “Show package contents.” This will open up a new window.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFind the \u003ccode\u003e.vmdk\u003c/code\u003e file and drag it some place that’s easy to find. In this tutorial, we’ll use the desktop.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"converting-the-vmware-image-to-a-virtualbox-image-optional\"\u003eConverting the VMWare image to a VirtualBox image (Optional)\u003c/h2\u003e\n\u003cp\u003eThis step is optional. VirtualBox can read the VMWare Fusion disk image format if you’re short on time. However, you get better performance if you convert to the native VirtualBox format.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eFire up \u003ccode\u003eTerminal.app\u003c/code\u003e. It lives inside your \u003ccode\u003e/Applications/Utilities\u003c/code\u003e directory.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMove to your desktop directory:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ecd ~/Desktop\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWe’ll convert the \u003ccode\u003e.vmdk\u003c/code\u003e file into a raw hard drive file, then convert that raw file into the native \u003ccode\u003e.vdi\u003c/code\u003e format:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e/Applications/Q.app/Contents/MacOS/qemu-img convert -O raw IE6-XP.vmdk IE6-XP.raw \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003e/Applications/VirtualBox.app/Contents/MacOS/VBoxManage convertdd IE6-XP.raw IE6-XP.vdi \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\\n\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\u003c/span\u003erm IE6-XP.raw\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWait. Depending on your computer, this will probably take 20–45 minutes.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOnce it’s done, you can delete the \u003ccode\u003eIE6-XP.vmdk\u003c/code\u003e file.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"configuring-the-vm\"\u003eConfiguring the VM\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eMove the new \u003ccode\u003e.vdi\u003c/code\u003e file to wherever you’ll want your virtual machines to live.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLaunch VirtualBox. You’ll be presented with the “Welcome to VirtualBox” dialog.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick “New.” A “Create new virtual machine” dialog box will pop up. Click “Next.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eName your virtual machine. I named mine “IE6-XP.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOperating system is “Microsoft Windows.” Version is “Windows XP.” Click “Next.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDetermine the amount of RAM you want to allow the virtual machine to use. I have 4 GB of RAM, so I allow 512 MB. Adjust as necessary, but I wouldn’t go below 192 MB. Click “Next.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eHere, you select the disk image to use. Choose “Use existing hard disk.” There is a pull-down menu that says “\u0026lt;no media\u0026gt;”. Click the icon to the right of it.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe “Virtual Media Manager” dialog should pop up. Click “Add.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFind where you saved the \u003ccode\u003e.vdi\u003c/code\u003e file to, and select it. Once that’s done, click the “Select” button. This will close the Virtual Media Manager\u0026rdquo; dialog.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eBack on the “Create new virtual machine” dialog, the pull-down menu that used to say “\u0026lt;no media\u0026gt;” should now say something along the lines of “IE6-XP.vdi (Normal, 16.00 GB).” Click “Next,” then “Finish.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFrom there, click “Settings” along the top of the application.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick the “Audio” tab, and deselect “Enable audio.” We don’t have the drivers for this, so we’ll save ourselves the nag-ware.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick the “Network” tab, and choose “Intel PRO/1000 MT Desktop” from the Adapter Type pull-down.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLeave everything else as default, and click OK.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick “Start” along the top of the application to start the virtual machine.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"installing-the-drivers-and-guest-additions\"\u003eInstalling the drivers and Guest Additions\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eWhen the virtual machine starts, the viewport will be very small. Windows also may be asking you to find drivers. Make it go away for now.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn the “Devices” menu, choose “Install Guest Additions.” This will load a virtual CD-ROM.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe setup should begin automatically. If it doesn’t, go to the Start Menu, choose “My Computer,” then double-click on “VirtualBox Guest Additions.”\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eGo through the process and install the software, then restart your VM.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWhile that restarts, switch back to Mac OS X and download the driver for the \u003ca href=\"https://web.archive.org/web/20090701043314/http://downloadcenter.intel.com/Detail_Desc.aspx?agr=N\u0026amp;DwnldId=8659\u0026amp;lang=eng\"\u003eIntel PRO/1000 MT\u003c/a\u003e ethernet card. Download the version for Windows XP (32-bit). Copy it to your USB flash drive.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWhen the virtual machine comes back up, you’ll need to connect your USB flash drive to your virtual machine. To do this, you’ll need to drag the flash drive icon to the trash from Mac OS X (but leave it physically connected). In VirtualBox, go to the menubar and choose \u003cem\u003eDevices\u003c/em\u003e → \u003cem\u003eUSB Devices\u003c/em\u003e → \u003cem\u003eUSB Flash Drive\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNavigate to the installer on your flash drive, and install the Intel drivers.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLastly, go to \u003cem\u003eStart Menu\u003c/em\u003e → \u003cem\u003eRun\u003c/em\u003e, then in the dialog type the following so that you can keep the additional drivers on your VM:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-plain\" data-lang=\"plain\"\u003eD:\\VBoxWindowsAdditions-x86.exe /extract /D=C:\\Drivers\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"done\"\u003eDone!\u003c/h2\u003e\n\u003cp\u003eYou should be all set! If you want to get all super-hacky, you can check out \u0026ldquo;\u003ca href=\"https://web.archive.org/web/20090701043314/http://www.peculier.com/blog/create-ie-vbox.html\"\u003eCreate IE VBox\u003c/a\u003e\u0026rdquo; for geekier details.\u003c/p\u003e\n",
        "plain":"These days I’m looking to save money anywhere I can. How about you? Whereas VMWare Fusion (as awesome as it is) runs around $80 USD per copy, Sun’s VirtualBox is a free, open-source product for virtualization that runs on Mac OS X, Linux, and Windows.\nUpdate: Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at MSDN. If you’ve not yet read the related post, \u0026ldquo;Run Internet Explorer 6 (or IE7, or IE8) images in VMWare Fusion on Mac OS X, you should. This is a follow up on how to take those virtual machines (which we’ve already done a lot of work on), and convert them for use VirtualBox.\nPrerequisites   You need to have access to a Mac OS X machine.\n  A broadband connection would be quite helpful.\n  A USB flash drive (or some other way to copy files to the VM before you have network access enabled).\n  VMWare Fusion uses the .vmdk disk format for its virtual drives. VirtualBox uses the .vdi format. Although VirtualBox can use the existing .vmdk images, you get better performance if you convert them to .vdi.\nDownloading and Preparing stuff   Download and install VirtualBox. It should live in the /Applications directory.\n  Download and install Q (a Mac version of Qemu). It should live in the /Applications directory.\n  Download and decompress an IE6, IE7, or IE8 VMWare Fusion image that I’ve posted previously. If you need ALL of them, you can save yourself the bandwidth by downloading the IE6 image, making a copy of the file, and upgrading that copy to IE7 or IE8.\n  Extracting the disk image   When you decompress the VMWare Fusion image, you should end up with a folder containing 3 files: Two text files, and a .vmware file.\n  Right-click (or command-click) the .vmware file and choose “Show package contents.” This will open up a new window.\n  Find the .vmdk file and drag it some place that’s easy to find. In this tutorial, we’ll use the desktop.\n  Converting the VMWare image to a VirtualBox image (Optional) This step is optional. VirtualBox can read the VMWare Fusion disk image format if you’re short on time. However, you get better performance if you convert to the native VirtualBox format.\n  Fire up Terminal.app. It lives inside your /Applications/Utilities directory.\n  Move to your desktop directory:\ncd ~/Desktop   We’ll convert the .vmdk file into a raw hard drive file, then convert that raw file into the native .vdi format:\n/Applications/Q.app/Contents/MacOS/qemu-img convert -O raw IE6-XP.vmdk IE6-XP.raw \u0026amp;\u0026amp; \\ /Applications/VirtualBox.app/Contents/MacOS/VBoxManage convertdd IE6-XP.raw IE6-XP.vdi \u0026amp;\u0026amp; \\ rm IE6-XP.raw   Wait. Depending on your computer, this will probably take 20–45 minutes.\n  Once it’s done, you can delete the IE6-XP.vmdk file.\n  Configuring the VM   Move the new .vdi file to wherever you’ll want your virtual machines to live.\n  Launch VirtualBox. You’ll be presented with the “Welcome to VirtualBox” dialog.\n  Click “New.” A “Create new virtual machine” dialog box will pop up. Click “Next.”\n  Name your virtual machine. I named mine “IE6-XP.”\n  Operating system is “Microsoft Windows.” Version is “Windows XP.” Click “Next.”\n  Determine the amount of RAM you want to allow the virtual machine to use. I have 4 GB of RAM, so I allow 512 MB. Adjust as necessary, but I wouldn’t go below 192 MB. Click “Next.”\n  Here, you select the disk image to use. Choose “Use existing hard disk.” There is a pull-down menu that says “\u0026lt;no media\u0026gt;”. Click the icon to the right of it.\n  The “Virtual Media Manager” dialog should pop up. Click “Add.”\n  Find where you saved the .vdi file to, and select it. Once that’s done, click the “Select” button. This will close the Virtual Media Manager\u0026rdquo; dialog.\n  Back on the “Create new virtual machine” dialog, the pull-down menu that used to say “\u0026lt;no media\u0026gt;” should now say something along the lines of “IE6-XP.vdi (Normal, 16.00 GB).” Click “Next,” then “Finish.”\n  From there, click “Settings” along the top of the application.\n  Click the “Audio” tab, and deselect “Enable audio.” We don’t have the drivers for this, so we’ll save ourselves the nag-ware.\n  Click the “Network” tab, and choose “Intel PRO/1000 MT Desktop” from the Adapter Type pull-down.\n  Leave everything else as default, and click OK.\n  Click “Start” along the top of the application to start the virtual machine.\n  Installing the drivers and Guest Additions   When the virtual machine starts, the viewport will be very small. Windows also may be asking you to find drivers. Make it go away for now.\n  In the “Devices” menu, choose “Install Guest Additions.” This will load a virtual CD-ROM.\n  The setup should begin automatically. If it doesn’t, go to the Start Menu, choose “My Computer,” then double-click on “VirtualBox Guest Additions.”\n  Go through the process and install the software, then restart your VM.\n  While that restarts, switch back to Mac OS X and download the driver for the Intel PRO/1000 MT ethernet card. Download the version for Windows XP (32-bit). Copy it to your USB flash drive.\n  When the virtual machine comes back up, you’ll need to connect your USB flash drive to your virtual machine. To do this, you’ll need to drag the flash drive icon to the trash from Mac OS X (but leave it physically connected). In VirtualBox, go to the menubar and choose Devices → USB Devices → USB Flash Drive.\n  Navigate to the installer on your flash drive, and install the Intel drivers.\n  Lastly, go to Start Menu → Run, then in the dialog type the following so that you can keep the additional drivers on your VM:\nD:\\VBoxWindowsAdditions-x86.exe /extract /D=C:\\Drivers   Done! You should be all set! If you want to get all super-hacky, you can check out \u0026ldquo;Create IE VBox\u0026rdquo; for geekier details.\n",
        "source":"\nThese days I’m looking to save money anywhere I can. How about you? Whereas VMWare Fusion (as awesome as it is) runs around $80 USD per copy, Sun’s VirtualBox is a free, open-source product for virtualization that runs on Mac OS X, Linux, and Windows.\n\n**Update:** Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at [MSDN]({{% wayback \"http://blogs.msdn.com/petel/archive/2009/09/09/running-the-ie-vpc-s-on-other-vpc-hosts.aspx\" %}}). If you’ve not yet read the related post, \"[Run Internet Explorer 6 (or IE7, or IE8) images in VMWare Fusion on Mac OS X](/2009/01/07/run-ie6-ie7-ie8-images-vmware-fusion-macosx/), you should. This is a follow up on how to take those virtual machines (which we’ve already done a lot of work on), and convert them for use VirtualBox.\n\n## Prerequisites\n\n* You need to have access to a Mac OS X machine.\n\n* A broadband connection would be quite helpful.\n\n* A USB flash drive (or some other way to copy files to the VM before you have network access enabled).\n\nVMWare Fusion uses the `.vmdk` disk format for its virtual drives. VirtualBox uses the `.vdi` format. Although VirtualBox can use the existing `.vmdk` images, you get better performance if you convert them to `.vdi`.\n\n## Downloading and Preparing stuff\n\n1. Download and install [VirtualBox]({{% wayback \"http://www.virtualbox.org/wiki/Downloads\" %}}). It should live in the `/Applications` directory.\n\n2. Download and install [Q]({{% wayback \"http://www.kju-app.org\" %}}) (a Mac version of [Qemu]({{% wayback \"http://qemu.org\" %}})). It should live in the `/Applications` directory.\n\n3. Download and decompress an [IE6]({{% wayback \"http://cdn.ryanparman.com/ie6-xpsp3.tar.gz\" %}}), [IE7]({{% wayback \"http://cdn.ryanparman.com/ie7-xpsp3.tar.gz\" %}}), or [IE8]({{% wayback \"http://cdn.ryanparman.com/ie8-xpsp3.tar.gz\" %}}) VMWare Fusion image that I’ve posted previously. If you need ALL of them, you can save yourself the bandwidth by downloading the IE6 image, making a copy of the file, and upgrading that copy to IE7 or IE8.\n\n## Extracting the disk image\n\n1. When you decompress the VMWare Fusion image, you should end up with a folder containing 3 files: Two text files, and a `.vmware` file.\n\n2. Right-click (or command-click) the `.vmware` file and choose “Show package contents.” This will open up a new window.\n\n3. Find the `.vmdk` file and drag it some place that’s easy to find. In this tutorial, we’ll use the desktop.\n\n## Converting the VMWare image to a VirtualBox image (Optional)\n\nThis step is optional. VirtualBox can read the VMWare Fusion disk image format if you’re short on time. However, you get better performance if you convert to the native VirtualBox format.\n\n1. Fire up `Terminal.app`. It lives inside your `/Applications/Utilities` directory.\n\n2. Move to your desktop directory:\n\n    ```bash\n    cd ~/Desktop\n    ```\n\n3. We’ll convert the `.vmdk` file into a raw hard drive file, then convert that raw file into the native `.vdi` format:\n\n    ```bash\n    /Applications/Q.app/Contents/MacOS/qemu-img convert -O raw IE6-XP.vmdk IE6-XP.raw \u0026\u0026 \\\n    /Applications/VirtualBox.app/Contents/MacOS/VBoxManage convertdd IE6-XP.raw IE6-XP.vdi \u0026\u0026 \\\n    rm IE6-XP.raw\n    ```\n\n4. Wait. Depending on your computer, this will probably take 20–45 minutes.\n\n5. Once it’s done, you can delete the `IE6-XP.vmdk` file.\n\n## Configuring the VM\n\n1. Move the new `.vdi` file to wherever you’ll want your virtual machines to live.\n\n2. Launch VirtualBox. You’ll be presented with the “Welcome to VirtualBox” dialog.\n\n3. Click “New.” A “Create new virtual machine” dialog box will pop up. Click “Next.”\n\n4. Name your virtual machine. I named mine “IE6-XP.”\n\n5. Operating system is “Microsoft Windows.” Version is “Windows XP.” Click “Next.”\n\n6. Determine the amount of RAM you want to allow the virtual machine to use. I have 4 GB of RAM, so I allow 512 MB. Adjust as necessary, but I wouldn’t go below 192 MB. Click “Next.”\n\n7. Here, you select the disk image to use. Choose “Use existing hard disk.” There is a pull-down menu that says “\u0026lt;no media\u0026gt;”. Click the icon to the right of it.\n\n8. The “Virtual Media Manager” dialog should pop up. Click “Add.”\n\n9. Find where you saved the `.vdi` file to, and select it. Once that’s done, click the “Select” button. This will close the Virtual Media Manager\" dialog.\n\n10. Back on the “Create new virtual machine” dialog, the pull-down menu that used to say “\u0026lt;no media\u0026gt;” should now say something along the lines of “IE6-XP.vdi (Normal, 16.00 GB).” Click “Next,” then “Finish.”\n\n11. From there, click “Settings” along the top of the application.\n\n12. Click the “Audio” tab, and deselect “Enable audio.” We don’t have the drivers for this, so we’ll save ourselves the nag-ware.\n\n13. Click the “Network” tab, and choose “Intel PRO/1000 MT Desktop” from the Adapter Type pull-down.\n\n14. Leave everything else as default, and click OK.\n\n15. Click “Start” along the top of the application to start the virtual machine.\n\n## Installing the drivers and Guest Additions\n\n1. When the virtual machine starts, the viewport will be very small. Windows also may be asking you to find drivers. Make it go away for now.\n\n2. In the “Devices” menu, choose “Install Guest Additions.” This will load a virtual CD-ROM.\n\n3. The setup should begin automatically. If it doesn’t, go to the Start Menu, choose “My Computer,” then double-click on “VirtualBox Guest Additions.”\n\n4. Go through the process and install the software, then restart your VM.\n\n5. While that restarts, switch back to Mac OS X and download the driver for the [Intel PRO/1000 MT]({{% wayback \"http://downloadcenter.intel.com/Detail_Desc.aspx?agr=N\u0026DwnldId=8659\u0026lang=eng\" %}}) ethernet card. Download the version for Windows XP (32-bit). Copy it to your USB flash drive.\n\n6. When the virtual machine comes back up, you’ll need to connect your USB flash drive to your virtual machine. To do this, you’ll need to drag the flash drive icon to the trash from Mac OS X (but leave it physically connected). In VirtualBox, go to the menubar and choose _Devices_ → _USB Devices_ → _USB Flash Drive_.\n\n7. Navigate to the installer on your flash drive, and install the Intel drivers.\n\n8. Lastly, go to _Start Menu_ → _Run_, then in the dialog type the following so that you can keep the additional drivers on your VM:\n\n    ```plain\n    D:\\VBoxWindowsAdditions-x86.exe /extract /D=C:\\Drivers\n    ```\n\n## Done!\n\nYou should be all set! If you want to get all super-hacky, you can check out \"[Create IE VBox]({{% wayback \"http://www.peculier.com/blog/create-ie-vbox.html\" %}})\" for geekier details.\n"},
    "links": {
        "prev": {"title": "Those kids and their Wiis", "permalink": "https://ryanparman.com/posts/2009/those-kids-and-their-wiis/"},
        "next": {"title": "Installing PHP 5.3 with mysqlnd on Mac OS X with MacPorts", "permalink": "https://ryanparman.com/posts/2009/installing-php-5-3-with-mysqlnd-on-mac-os-x-with-macports/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Run Internet Explorer 6 (or IE7, or IE8) images in VMware Fusion on Mac OS X",
    "description": "",
    "summary": {
        "content": "By now, most front-end web developers have heard of the Standalone Internet Explorers (Wikipedia article). Although these are incredibly useful, they’ve always been hacky at best. Because of that, we need to go the long way. We’ll download the “officially sanctioned” VirtualPC images containing a time-limited version of Windows XP SP3 and Internet Explorer 6.0, and then we’ll convert these images to the kind that work with VMware Fusion (which works on Mac OS X). This should only need to be done every 3 or 4 months when the images expire.",
        "isTruncated": true
    },
    "published": "2009-01-07T20:33:34Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2009/run-ie6-ie7-ie8-images-vmware-fusion-macosx/",
    "relativePermalink": "/posts/2009/run-ie6-ie7-ie8-images-vmware-fusion-macosx/",
    "aliases": ["/2009/01/07/run-ie6-ie7-ie8-images-vmware-fusion-macosx/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 744,
        "readingTime": "4 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2009/20090107-run-ie6-ie7-ie8-images-vmware-fusion-macosx.md",
        "logicalName": "20090107-run-ie6-ie7-ie8-images-vmware-fusion-macosx.md",
        "translationBaseName": "20090107-run-ie6-ie7-ie8-images-vmware-fusion-macosx",
        "baseFileName": "20090107-run-ie6-ie7-ie8-images-vmware-fusion-macosx",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2009/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#prerequisites\"\u003ePrerequisites\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installing-qemu-first-time-only\"\u003eInstalling Qemu (FIRST-TIME ONLY)\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#downloading-and-preparing-stuff\"\u003eDownloading and Preparing stuff\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#converting-the-image\"\u003eConverting the image\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#configuring-the-vm\"\u003eConfiguring the VM\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"#installing-the-drivers-and-vmware-tools\"\u003eInstalling the drivers and VMWare Tools\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp itemprop=\"description\" class=\"f5 f4-m f3-l mt0 lh-copy p-summary entry-summary\"\u003e\nBy now, most front-end web developers have heard of the \u003ca href=\"/2003/11/06/multiple-versions-of-internet-explorer/\"\u003eStandalone Internet Explorers\u003c/a\u003e (\u003ca href=\"https://web.archive.org/web/20090107203334/http://en.wikipedia.org/wiki/Internet_Explorer#.22Standalone.22_Internet_Explorer\"\u003eWikipedia article\u003c/a\u003e). Although these are incredibly useful, they’ve always been hacky at best.\n\u003c/p\u003e\n\n\u003cp\u003eBecause of that, we need to go the long way. We’ll download the “officially sanctioned” VirtualPC images containing a time-limited version of Windows XP SP3 and Internet Explorer 6.0, and then we’ll convert these images to the kind that work with VMware Fusion (which works on Mac OS X). This should only need to be done every 3 or 4 months when the images expire. These instructions are loosely based on the ones found at \u003ca href=\"https://web.archive.org/web/20090107203334/http://blog.mozmonkey.com/2008/vpc-ie6-ie7-ie8-on-mac-os-x/\"\u003eRunning IE6, IE7 and IE8 on your Mac\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUpdate:\u003c/strong\u003e Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at \u003ca href=\"https://web.archive.org/web/20090107203334/http://petelepage.com/blog/2009/09/running-the-ie-vpcs-on-other-vpc-hosts/\"\u003eRunning The IE VPC’s on other VPC Hosts?\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"prerequisites\"\u003ePrerequisites\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eYou need to have \u003ca href=\"https://web.archive.org/web/20090107203334/http://vmware.com/products/fusion/\"\u003eVMware Fusion\u003c/a\u003e installed on your Mac.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eYou need to have access to a Windows XP machine, as this is where the converting will happen.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"installing-qemu-first-time-only\"\u003eInstalling Qemu (FIRST-TIME ONLY)\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eDownload a small application to our Windows machine called \u003ca href=\"https://web.archive.org/web/20090107203334/http://lassauge.free.fr/qemu/\"\u003eQemu\u003c/a\u003e. At the time of this writing, you want to download the \u003ca href=\"https://web.archive.org/web/20090107203334/http://lassauge.free.fr/qemu/release/Qemu-0.9.1-windows.zip\"\u003eregular version 0.9.1\u003c/a\u003e. Once it’s done, unzip it someplace that’s easy to get to via the command line (e.g., \u003ccode\u003ec:\\qemu\u003c/code\u003e).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eGo into the Qemu folder, then into the \u003ccode\u003ebin\u003c/code\u003e folder and copy all of the files in the \u003ccode\u003ebin\u003c/code\u003e folder back to the original Qemu folder (you can simply copy-paste).\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"downloading-and-preparing-stuff\"\u003eDownloading and Preparing stuff\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eOn Microsoft’s website, they have a page entitled \u003ca href=\"https://web.archive.org/web/20090107203334/http://www.microsoft.com/downloads/details.aspx?FamilyId=21EABB90-958F-4B64-B5F1-73D0A413C8EF\u0026amp;displaylang=en\"\u003eInternet Explorer Application Compatibility VPC Image\u003c/a\u003e where you can download various time-limited images that allow you to test combinations of Windows XP SP3 or Vista, along with Internet Explorer 6.0, 7.0, and the 8.0 betas. In this example, we’re going to install the IE6/XP image but you can do whatever you need to do.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWe’ll need to unpack this download in Windows, so if you haven’t already, make sure you’re doing this part in Windows.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDouble-click it (in Windows) to begin unpacking it. It will warn you that it has an expiration date. On that date, we’ll have to download a fresh VPC image from Microsoft and do this all over again.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"converting-the-image\"\u003eConverting the image\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eYou’ll want to copy the \u003ccode\u003eXP SP3 with IE6.vhd\u003c/code\u003e file into the Qemu folder. This will allow us to use simpler, more consistent commands to convert the image.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn your Windows VM go to \u003cem\u003eStart Menu\u003c/em\u003e → \u003cem\u003eRun\u003c/em\u003e, type the \u003ccode\u003ecmd\u003c/code\u003e command, and click OK.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUsing your deftly intimate knowledge of MS-DOS, use commands like \u003ccode\u003ecd\u003c/code\u003e to navigate to where you unpacked Qemu.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIf you don’t know MS-DOS commands from a hole in the wall, you can download \u003ca href=\"https://cdn.ryanparman.com/wp-content/uploads/2009/01/CmdHerePowertoySetup.exe\"\u003eOpen Command Window Here\u003c/a\u003e from Microsoft, install it, find the Qemu folder in the normal Windows Explorer, right-click, and choose “Open Command Window Here”. One method is shorter and harder, while the other is easier and slower. Take your pick.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eType the following command in your MS-DOS window:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eqemu-img.exe convert -f vpc \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;XP SP3 with IE6.vhd\u0026#34;\u003c/span\u003e -O vmdk IE6-XP.vmdk\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNote that \u003ccode\u003eXP SP3 with IE6.vhd\u003c/code\u003e is the path to the IE6 VPC file you downloaded, while \u003ccode\u003eIE6-XP.vmdk\u003c/code\u003e is the new file that VMWare Fusion will use.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWait. This will probably take 5–10 minutes.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"configuring-the-vm\"\u003eConfiguring the VM\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eMove the new \u003ccode\u003e.vmdk\u003c/code\u003e file to your Mac.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOpen VMWare Fusion (or shutdown the Windows VM you may already have running) and click \u003cem\u003eFile\u003c/em\u003e → \u003cem\u003eNew\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eGo through the wizard and when you get to the “Virtual Hard Disk” page, expand “Advanced disk options”, check “Use an existing virtual disk” and use the dropdown to find the new \u003ccode\u003e.vmdk\u003c/code\u003e image you just copied back to your Mac.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFinish the wizard and start it! If prompted to upgrade the virtual hard drive, click “Yes.”\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"installing-the-drivers-and-vmware-tools\"\u003eInstalling the drivers and VMWare Tools\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eWith VMWare Fusion running, download and decompress \u003ca href=\"https://cdn.ryanparman.com/wp-content/uploads/2009/01/vmware_xpsp3_drivers.tar.gz\"\u003evmware_xpsp3_drivers.tar.gz\u003c/a\u003e. Copy all of the resulting files to \u003ccode\u003ec:\\windows\\system32\\drivers\u003c/code\u003e. \u003cem\u003eMake sure you install these BEFORE the VMware tools!\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDownload \u003ca href=\"http://cdn.ryanparman.com/vmware_mouse.reg\"\u003evmware_mouse.reg\u003c/a\u003e and double-click it to load its settings into the Windows registry. \u003cem\u003eVMware doesn’t correctly overwrite these setting upon install of the VMware tools, and the mouse can start doing wonky things. These registry settings fix it.\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn VMware, click \u003cem\u003eVirtual Machine\u003c/em\u003e → \u003cem\u003eInstall VMWare Tools\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFollow the instructions. If Windows asks for additional drivers, point it to \u003ccode\u003ec:\\windows\\system32\\drivers\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMake sure that you shutdown the VM and configure your memory (etc.) settings appropriately.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n",
        "plain":"By now, most front-end web developers have heard of the Standalone Internet Explorers (Wikipedia article). Although these are incredibly useful, they’ve always been hacky at best. Because of that, we need to go the long way. We’ll download the “officially sanctioned” VirtualPC images containing a time-limited version of Windows XP SP3 and Internet Explorer 6.0, and then we’ll convert these images to the kind that work with VMware Fusion (which works on Mac OS X). This should only need to be done every 3 or 4 months when the images expire. These instructions are loosely based on the ones found at Running IE6, IE7 and IE8 on your Mac.\nUpdate: Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at Running The IE VPC’s on other VPC Hosts?.\nPrerequisites   You need to have VMware Fusion installed on your Mac.\n  You need to have access to a Windows XP machine, as this is where the converting will happen.\n  Installing Qemu (FIRST-TIME ONLY)   Download a small application to our Windows machine called Qemu. At the time of this writing, you want to download the regular version 0.9.1. Once it’s done, unzip it someplace that’s easy to get to via the command line (e.g., c:\\qemu).\n  Go into the Qemu folder, then into the bin folder and copy all of the files in the bin folder back to the original Qemu folder (you can simply copy-paste).\n  Downloading and Preparing stuff   On Microsoft’s website, they have a page entitled Internet Explorer Application Compatibility VPC Image where you can download various time-limited images that allow you to test combinations of Windows XP SP3 or Vista, along with Internet Explorer 6.0, 7.0, and the 8.0 betas. In this example, we’re going to install the IE6/XP image but you can do whatever you need to do.\n  We’ll need to unpack this download in Windows, so if you haven’t already, make sure you’re doing this part in Windows.\n  Double-click it (in Windows) to begin unpacking it. It will warn you that it has an expiration date. On that date, we’ll have to download a fresh VPC image from Microsoft and do this all over again.\n  Converting the image   You’ll want to copy the XP SP3 with IE6.vhd file into the Qemu folder. This will allow us to use simpler, more consistent commands to convert the image.\n  In your Windows VM go to Start Menu → Run, type the cmd command, and click OK.\n  Using your deftly intimate knowledge of MS-DOS, use commands like cd to navigate to where you unpacked Qemu.\n  If you don’t know MS-DOS commands from a hole in the wall, you can download Open Command Window Here from Microsoft, install it, find the Qemu folder in the normal Windows Explorer, right-click, and choose “Open Command Window Here”. One method is shorter and harder, while the other is easier and slower. Take your pick.\n  Type the following command in your MS-DOS window:\nqemu-img.exe convert -f vpc \u0026#34;XP SP3 with IE6.vhd\u0026#34; -O vmdk IE6-XP.vmdk Note that XP SP3 with IE6.vhd is the path to the IE6 VPC file you downloaded, while IE6-XP.vmdk is the new file that VMWare Fusion will use.\n  Wait. This will probably take 5–10 minutes.\n  Configuring the VM   Move the new .vmdk file to your Mac.\n  Open VMWare Fusion (or shutdown the Windows VM you may already have running) and click File → New.\n  Go through the wizard and when you get to the “Virtual Hard Disk” page, expand “Advanced disk options”, check “Use an existing virtual disk” and use the dropdown to find the new .vmdk image you just copied back to your Mac.\n  Finish the wizard and start it! If prompted to upgrade the virtual hard drive, click “Yes.”\n  Installing the drivers and VMWare Tools   With VMWare Fusion running, download and decompress vmware_xpsp3_drivers.tar.gz. Copy all of the resulting files to c:\\windows\\system32\\drivers. Make sure you install these BEFORE the VMware tools!\n  Download vmware_mouse.reg and double-click it to load its settings into the Windows registry. VMware doesn’t correctly overwrite these setting upon install of the VMware tools, and the mouse can start doing wonky things. These registry settings fix it.\n  In VMware, click Virtual Machine → Install VMWare Tools.\n  Follow the instructions. If Windows asks for additional drivers, point it to c:\\windows\\system32\\drivers.\n  Make sure that you shutdown the VM and configure your memory (etc.) settings appropriately.\n  ",
        "source":"\n{{\u003cdescription\u003e}}\nBy now, most front-end web developers have heard of the \u003ca href=\"/2003/11/06/multiple-versions-of-internet-explorer/\"\u003eStandalone Internet Explorers\u003c/a\u003e (\u003ca href=\"https://web.archive.org/web/20090107203334/http://en.wikipedia.org/wiki/Internet_Explorer#.22Standalone.22_Internet_Explorer\"\u003eWikipedia article\u003c/a\u003e). Although these are incredibly useful, they’ve always been hacky at best.\n{{\u003c/description\u003e}}\n\nBecause of that, we need to go the long way. We’ll download the “officially sanctioned” VirtualPC images containing a time-limited version of Windows XP SP3 and Internet Explorer 6.0, and then we’ll convert these images to the kind that work with VMware Fusion (which works on Mac OS X). This should only need to be done every 3 or 4 months when the images expire. These instructions are loosely based on the ones found at [Running IE6, IE7 and IE8 on your Mac]({{% wayback \"http://blog.mozmonkey.com/2008/vpc-ie6-ie7-ie8-on-mac-os-x/\" %}}).\n\n**Update:** Microsoft’s images are broken, and don’t work on anything except VirtualPC now. Mac and Linux users are out of luck for the time being. More information on the subject can be found at [Running The IE VPC’s on other VPC Hosts?]({{% wayback \"http://petelepage.com/blog/2009/09/running-the-ie-vpcs-on-other-vpc-hosts/\" %}}).\n\n## Prerequisites\n\n* You need to have [VMware Fusion]({{% wayback \"http://vmware.com/products/fusion/\" %}}) installed on your Mac.\n\n* You need to have access to a Windows XP machine, as this is where the converting will happen.\n\n## Installing Qemu (FIRST-TIME ONLY)\n\n1. Download a small application to our Windows machine called [Qemu]({{% wayback \"http://lassauge.free.fr/qemu/\" %}}). At the time of this writing, you want to download the [regular version 0.9.1]({{% wayback \"http://lassauge.free.fr/qemu/release/Qemu-0.9.1-windows.zip\" %}}). Once it’s done, unzip it someplace that’s easy to get to via the command line (e.g., `c:\\qemu`).\n\n2. Go into the Qemu folder, then into the `bin` folder and copy all of the files in the `bin` folder back to the original Qemu folder (you can simply copy-paste).\n\n## Downloading and Preparing stuff\n\n1. On Microsoft’s website, they have a page entitled [Internet Explorer Application Compatibility VPC Image]({{% wayback \"http://www.microsoft.com/downloads/details.aspx?FamilyId=21EABB90-958F-4B64-B5F1-73D0A413C8EF\u0026displaylang=en\" %}}) where you can download various time-limited images that allow you to test combinations of Windows XP SP3 or Vista, along with Internet Explorer 6.0, 7.0, and the 8.0 betas. In this example, we’re going to install the IE6/XP image but you can do whatever you need to do.\n\n2. We’ll need to unpack this download in Windows, so if you haven’t already, make sure you’re doing this part in Windows.\n\n3. Double-click it (in Windows) to begin unpacking it. It will warn you that it has an expiration date. On that date, we’ll have to download a fresh VPC image from Microsoft and do this all over again.\n\n## Converting the image\n\n1. You’ll want to copy the `XP SP3 with IE6.vhd` file into the Qemu folder. This will allow us to use simpler, more consistent commands to convert the image.\n\n2. In your Windows VM go to _Start Menu_ → _Run_, type the `cmd` command, and click OK.\n\n3. Using your deftly intimate knowledge of MS-DOS, use commands like `cd` to navigate to where you unpacked Qemu.\n\n4. If you don’t know MS-DOS commands from a hole in the wall, you can download [Open Command Window Here](https://cdn.ryanparman.com/wp-content/uploads/2009/01/CmdHerePowertoySetup.exe) from Microsoft, install it, find the Qemu folder in the normal Windows Explorer, right-click, and choose “Open Command Window Here”. One method is shorter and harder, while the other is easier and slower. Take your pick.\n\n5. Type the following command in your MS-DOS window:\n\n    ```bash\n    qemu-img.exe convert -f vpc \"XP SP3 with IE6.vhd\" -O vmdk IE6-XP.vmdk\n    ```\n\n    Note that `XP SP3 with IE6.vhd` is the path to the IE6 VPC file you downloaded, while `IE6-XP.vmdk` is the new file that VMWare Fusion will use.\n\n6. Wait. This will probably take 5–10 minutes.\n\n## Configuring the VM\n\n1. Move the new `.vmdk` file to your Mac.\n\n2. Open VMWare Fusion (or shutdown the Windows VM you may already have running) and click _File_ → _New_.\n\n3. Go through the wizard and when you get to the “Virtual Hard Disk” page, expand “Advanced disk options”, check “Use an existing virtual disk” and use the dropdown to find the new `.vmdk` image you just copied back to your Mac.\n\n4. Finish the wizard and start it! If prompted to upgrade the virtual hard drive, click “Yes.”\n\n## Installing the drivers and VMWare Tools\n\n1. With VMWare Fusion running, download and decompress [vmware_xpsp3_drivers.tar.gz](https://cdn.ryanparman.com/wp-content/uploads/2009/01/vmware_xpsp3_drivers.tar.gz). Copy all of the resulting files to `c:\\windows\\system32\\drivers`. *Make sure you install these BEFORE the VMware tools!*\n\n2. Download [vmware_mouse.reg](http://cdn.ryanparman.com/vmware_mouse.reg) and double-click it to load its settings into the Windows registry. *VMware doesn’t correctly overwrite these setting upon install of the VMware tools, and the mouse can start doing wonky things. These registry settings fix it.*\n\n3. In VMware, click _Virtual Machine_ → _Install VMWare Tools_.\n\n4. Follow the instructions. If Windows asks for additional drivers, point it to `c:\\windows\\system32\\drivers`.\n\n5. Make sure that you shutdown the VM and configure your memory (etc.) settings appropriately.\n"},
    "links": {
        "prev": {"title": "Tarzan 2.0 is finally here!", "permalink": "https://ryanparman.com/posts/2008/tarzan-20-is-finally-here/"},
        "next": {"title": "Introducing DOMBuilder", "permalink": "https://ryanparman.com/posts/2009/introducing-dombuilder/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Hide a Boot Camp NTFS Volume (Drive) under Tiger or Leopard",
    "description": "",
    "summary": {
        "content": "I was trying to figure out how to hide my Boot Camp NTFS drive icon from my desktop, and after some searching I discovered a relatively simple 4-step process. If your Boot Camp drive is FAT32, you can skip the first 2 steps, and begin with step 3. Install MacFUSE. This is a Google project that allows you to mount other file systems on your desktop, including even things like SSH and FTP. Install the NTFS–3G plugin for MacFUSE, which will allow us to not only read, but also write to NTFS drives.",
        "isTruncated": true
    },
    "published": "2007-11-24T02:04:51Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2007/hide-a-boot-camp-ntfs-volume-drive-under-tiger-or-leopard/",
    "relativePermalink": "/posts/2007/hide-a-boot-camp-ntfs-volume-drive-under-tiger-or-leopard/",
    "aliases": ["/2007/11/23/hide-a-boot-camp-ntfs-volume-drive-under-tiger-or-leopard/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 165,
        "readingTime": "1 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2007/20071124-hide-a-boot-camp-ntfs-volume-drive-under-tiger-or-leopard.md",
        "logicalName": "20071124-hide-a-boot-camp-ntfs-volume-drive-under-tiger-or-leopard.md",
        "translationBaseName": "20071124-hide-a-boot-camp-ntfs-volume-drive-under-tiger-or-leopard",
        "baseFileName": "20071124-hide-a-boot-camp-ntfs-volume-drive-under-tiger-or-leopard",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2007/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eI was trying to figure out how to hide my Boot Camp NTFS drive icon from my desktop, and after some searching I discovered a relatively simple 4-step process. If your Boot Camp drive is FAT32, you can skip the first 2 steps, and begin with step 3.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eInstall \u003ca href=\"https://web.archive.org/web/20071124020451/http://code.google.com/p/macfuse/\"\u003eMacFUSE\u003c/a\u003e. This is a Google project that allows you to mount other file systems on your desktop, including even things like SSH and FTP.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eInstall the \u003ca href=\"https://web.archive.org/web/20071124020451/http://macntfs-3g.blogspot.com/\"\u003eNTFS–3G\u003c/a\u003e plugin for MacFUSE, which will allow us to not only read, but also write to NTFS drives.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eInstall the \u003ca href=\"https://web.archive.org/web/20071124020451/http://developer.apple.com/tools/\"\u003eMac OS X Developer Tools\u003c/a\u003e. They should be an optional install on the Mac OS X install disc, or I believe you can download them manually.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAccording to \u003ca href=\"https://web.archive.org/web/20071124020451/http://www.gigoblog.com/2007/03/07/boot-camp-hide-a-windows-xp-volume-on-mac-desktop/\"\u003eGarbage In, Garbage Out\u003c/a\u003e, simply copy-paste this line into your Terminal, and press Enter:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e/Developer/Tools/SetFile -a V /Volumes/Untitled; killall Finder;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eYour Boot Camp drive icon should be hidden from your desktop, but may still show up in things like open/save dialogs. :)\u003c/p\u003e\n",
        "plain":"I was trying to figure out how to hide my Boot Camp NTFS drive icon from my desktop, and after some searching I discovered a relatively simple 4-step process. If your Boot Camp drive is FAT32, you can skip the first 2 steps, and begin with step 3.\n  Install MacFUSE. This is a Google project that allows you to mount other file systems on your desktop, including even things like SSH and FTP.\n  Install the NTFS–3G plugin for MacFUSE, which will allow us to not only read, but also write to NTFS drives.\n  Install the Mac OS X Developer Tools. They should be an optional install on the Mac OS X install disc, or I believe you can download them manually.\n  According to Garbage In, Garbage Out, simply copy-paste this line into your Terminal, and press Enter:\n/Developer/Tools/SetFile -a V /Volumes/Untitled; killall Finder;   Your Boot Camp drive icon should be hidden from your desktop, but may still show up in things like open/save dialogs. :)\n",
        "source":"\nI was trying to figure out how to hide my Boot Camp NTFS drive icon from my desktop, and after some searching I discovered a relatively simple 4-step process. If your Boot Camp drive is FAT32, you can skip the first 2 steps, and begin with step 3.\n\n1. Install [MacFUSE]({{% wayback \"http://code.google.com/p/macfuse/\" %}}). This is a Google project that allows you to mount other file systems on your desktop, including even things like SSH and FTP.\n\n2. Install the [NTFS–3G]({{% wayback \"http://macntfs-3g.blogspot.com/\" %}}) plugin for MacFUSE, which will allow us to not only read, but also write to NTFS drives.\n\n3. Install the [Mac OS X Developer Tools]({{% wayback \"http://developer.apple.com/tools/\" %}}). They should be an optional install on the Mac OS X install disc, or I believe you can download them manually.\n\n4. According to [Garbage In, Garbage Out]({{% wayback \"http://www.gigoblog.com/2007/03/07/boot-camp-hide-a-windows-xp-volume-on-mac-desktop/\" %}}), simply copy-paste this line into your Terminal, and press Enter:\n\n    ```bash\n    /Developer/Tools/SetFile -a V /Volumes/Untitled; killall Finder;\n    ```\n\nYour Boot Camp drive icon should be hidden from your desktop, but may still show up in things like open/save dialogs. :)\n"},
    "links": {
        "prev": {"title": "I support the Writer's Guild of America", "permalink": "https://ryanparman.com/posts/2007/i-support-the-writers-guild-of-america/"},
        "next": {"title": "Why do you love coming back to a sales person?", "permalink": "https://ryanparman.com/posts/2008/why-do-you-love-coming-back-to-a-sales-person/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Google Toolbar Awesomeness!",
    "description": "",
    "summary": {
        "content": "My wife works for a bank, and she forwarded me a phishing scam for Washington Mutual bank. Besides misspelling the word “customer” as “costomer”, it was pretty convincing for those who don’t know any better. When she sent it to me, I took a look at the page, and this is what Firefox+Google toolbar presented me with: Everybody needs this! Even those of us who have spent lots and lots of time around the web, this is a good thing.",
        "isTruncated": true
    },
    "published": "2006-06-20T17:17:25Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2006/google-toolbar-awesomeness/",
    "relativePermalink": "/posts/2006/google-toolbar-awesomeness/",
    "aliases": ["/2006/06/20/google-toolbar-awesomeness/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 374,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2006/20060620-google-toolbar-awesomeness.md",
        "logicalName": "20060620-google-toolbar-awesomeness.md",
        "translationBaseName": "20060620-google-toolbar-awesomeness",
        "baseFileName": "20060620-google-toolbar-awesomeness",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2006/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eMy wife works for a bank, and she forwarded me a phishing scam for Washington Mutual bank. Besides misspelling the word “customer” as “costomer”, it was pretty convincing for those who don’t know any better. When she sent it to me, I took a look at the page, and this is what Firefox+Google toolbar presented me with:\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/img/fakewamu.webp\" alt=\"Fake WAMU\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/img/fakewamu.png\" alt=\"Fake WAMU\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eEverybody needs this! Even those of us who have spent lots and lots of time around the web, this is a good thing. It’s especially good for people like my in-laws and many of my other friends and family. Besides that, here’s some good information my wife passed along to me:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHaving worked for a bank for over 5 years, I will tell you that a little bit of education goes a long way. Never ever EVER give out your pin # to ANYONE!!! Banks will never ask for this information (Other than asking you to enter you own pin # into a machine). Bank employees don’t even have access to your pin #. Your bank would never send you an email asking you to verify your personal information — the bank already has it if they need it. I recently received an email (I think that it was a bank from Tenessee); When I clicked on the link, it took me to a sign on page. It was really quite clever, you could enter any user ID, and any password. Then, they asked you to verify your bank information. (Including your pin) The other type of phishing email that I have been receiving a lot lately, has been on behalf of phony people from other countries. These people will ask you to reply to their email with your contact info. Then, they will try to get you to cash a fake cashier’s check from them of some ridiculously large amount. They will tell you that your cut is 30% or 40% in some cases. Don’t be fooled by these either. If you receive an email asking you for any sort of financial information/help know that it is probably a scam, you should delete it at once, or you can forward it to the Federal Trade Commission at \u003ca href=\"mailto:spam@uce.gov\"\u003espam@uce.gov\u003c/a\u003e, or contact them at \u003ca href=\"http://www.consumer.gov/idtheft\"\u003ewww.consumer.gov/idtheft\u003c/a\u003e or 877.IDTHEFT (877.438.4338).\u003c/p\u003e\n\u003c/blockquote\u003e\n",
        "plain":"My wife works for a bank, and she forwarded me a phishing scam for Washington Mutual bank. Besides misspelling the word “customer” as “costomer”, it was pretty convincing for those who don’t know any better. When she sent it to me, I took a look at the page, and this is what Firefox+Google toolbar presented me with:\n  Everybody needs this! Even those of us who have spent lots and lots of time around the web, this is a good thing. It’s especially good for people like my in-laws and many of my other friends and family. Besides that, here’s some good information my wife passed along to me:\n Having worked for a bank for over 5 years, I will tell you that a little bit of education goes a long way. Never ever EVER give out your pin # to ANYONE!!! Banks will never ask for this information (Other than asking you to enter you own pin # into a machine). Bank employees don’t even have access to your pin #. Your bank would never send you an email asking you to verify your personal information — the bank already has it if they need it. I recently received an email (I think that it was a bank from Tenessee); When I clicked on the link, it took me to a sign on page. It was really quite clever, you could enter any user ID, and any password. Then, they asked you to verify your bank information. (Including your pin) The other type of phishing email that I have been receiving a lot lately, has been on behalf of phony people from other countries. These people will ask you to reply to their email with your contact info. Then, they will try to get you to cash a fake cashier’s check from them of some ridiculously large amount. They will tell you that your cut is 30% or 40% in some cases. Don’t be fooled by these either. If you receive an email asking you for any sort of financial information/help know that it is probably a scam, you should delete it at once, or you can forward it to the Federal Trade Commission at spam@uce.gov, or contact them at www.consumer.gov/idtheft or 877.IDTHEFT (877.438.4338).\n ",
        "source":"\nMy wife works for a bank, and she forwarded me a phishing scam for Washington Mutual bank. Besides misspelling the word “customer” as “costomer”, it was pretty convincing for those who don’t know any better. When she sent it to me, I took a look at the page, and this is what Firefox+Google toolbar presented me with:\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/img/fakewamu.png\" alt=\"Fake WAMU\"\u003e}}\n\nEverybody needs this! Even those of us who have spent lots and lots of time around the web, this is a good thing. It’s especially good for people like my in-laws and many of my other friends and family. Besides that, here’s some good information my wife passed along to me:\n\n\u003e Having worked for a bank for over 5 years, I will tell you that a little bit of education goes a long way. Never ever EVER give out your pin \\# to ANYONE!!! Banks will never ask for this information (Other than asking you to enter you own pin # into a machine). Bank employees don’t even have access to your pin \\#. Your bank would never send you an email asking you to verify your personal information — the bank already has it if they need it. I recently received an email (I think that it was a bank from Tenessee); When I clicked on the link, it took me to a sign on page. It was really quite clever, you could enter any user ID, and any password. Then, they asked you to verify your bank information. (Including your pin) The other type of phishing email that I have been receiving a lot lately, has been on behalf of phony people from other countries. These people will ask you to reply to their email with your contact info. Then, they will try to get you to cash a fake cashier’s check from them of some ridiculously large amount. They will tell you that your cut is 30% or 40% in some cases. Don’t be fooled by these either. If you receive an email asking you for any sort of financial information/help know that it is probably a scam, you should delete it at once, or you can forward it to the Federal Trade Commission at spam@uce.gov, or contact them at www.consumer.gov/idtheft or 877.IDTHEFT (877.438.4338).\n"},
    "links": {
        "prev": {"title": "SimplePie Plugin for Wordpress", "permalink": "https://ryanparman.com/posts/2006/simplepie-plugin-for-wordpress/"},
        "next": {"title": "Nine Months", "permalink": "https://ryanparman.com/posts/2007/nine-months/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Sweet Little Utility: BluePhoneElite",
    "description": "",
    "summary": {
        "content": "Normally, new bits of software don’t warrant a normal posting on this site, but I’ve just found a little Mac OS X utility that’s awesome! The utility is called BluePhoneElite. If you have a Bluetooth phone that is compatible with iSync (you’ll have to check the site for exact compatibility details), this little thing is a gem! Depending on your phone’s level of compatibility with Bluetooth and such, you can: Have an alert show up on your screen when someone calls you, listing their name, phone number, and picture — pulled straight from your Address Book!",
        "isTruncated": true
    },
    "published": "2005-06-05T00:47:07Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2005/sweet-little-utility-bluephoneelite/",
    "relativePermalink": "/posts/2005/sweet-little-utility-bluephoneelite/",
    "aliases": ["/2005/06/04/sweet-little-utility-bluephoneelite/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 160,
        "readingTime": "1 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2005/20050605-sweet-little-utility-bluephoneelite.md",
        "logicalName": "20050605-sweet-little-utility-bluephoneelite.md",
        "translationBaseName": "20050605-sweet-little-utility-bluephoneelite",
        "baseFileName": "20050605-sweet-little-utility-bluephoneelite",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2005/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eNormally, new bits of software don’t warrant a normal posting on this site, but I’ve just found a little Mac OS X utility that’s \u003cem\u003eawesome!\u003c/em\u003e The utility is called \u003ca href=\"https://web.archive.org/web/20050605004707/http://www.reelintelligence.com/BluePhoneElite/\"\u003eBluePhoneElite\u003c/a\u003e. If you have a Bluetooth phone that is compatible with iSync (you’ll have to check the site for exact compatibility details), this little thing is a gem!\u003c/p\u003e\n\u003cp\u003eDepending on your phone’s level of compatibility with Bluetooth and such, you can:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eHave an alert show up on your screen when someone calls you, listing their name, phone number, and picture — pulled straight from your Address Book!\u003c/li\u003e\n\u003cli\u003eSend SMS messages straight from your computer!\u003c/li\u003e\n\u003cli\u003eShow you your signal strength and remaining battery life in either your dock, your menubar, or both!\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eNow, my Motorola v330 isn’t officially supported by iSync or BluePhoneElite. However, I \u003ca href=\"https://web.archive.org/web/20050605004707/http://www.macosxhints.com/article.php?story=20050520214153122\"\u003ehacked in support\u003c/a\u003e for my phone into iSync 2.0 last week. When I installed BluePhoneElite, it picked my phone right up — no problems.\u003c/p\u003e\n\u003cp\u003eVery, very cool.\u003c/p\u003e\n",
        "plain":"Normally, new bits of software don’t warrant a normal posting on this site, but I’ve just found a little Mac OS X utility that’s awesome! The utility is called BluePhoneElite. If you have a Bluetooth phone that is compatible with iSync (you’ll have to check the site for exact compatibility details), this little thing is a gem!\nDepending on your phone’s level of compatibility with Bluetooth and such, you can:\n Have an alert show up on your screen when someone calls you, listing their name, phone number, and picture — pulled straight from your Address Book! Send SMS messages straight from your computer! Show you your signal strength and remaining battery life in either your dock, your menubar, or both!  Now, my Motorola v330 isn’t officially supported by iSync or BluePhoneElite. However, I hacked in support for my phone into iSync 2.0 last week. When I installed BluePhoneElite, it picked my phone right up — no problems.\nVery, very cool.\n",
        "source":"\nNormally, new bits of software don’t warrant a normal posting on this site, but I’ve just found a little Mac OS X utility that’s *awesome!* The utility is called [BluePhoneElite]({{% wayback \"http://www.reelintelligence.com/BluePhoneElite/\" %}}). If you have a Bluetooth phone that is compatible with iSync (you’ll have to check the site for exact compatibility details), this little thing is a gem!\n\nDepending on your phone’s level of compatibility with Bluetooth and such, you can:\n\n1. Have an alert show up on your screen when someone calls you, listing their name, phone number, and picture — pulled straight from your Address Book!\n2. Send SMS messages straight from your computer!\n3. Show you your signal strength and remaining battery life in either your dock, your menubar, or both!\n\nNow, my Motorola v330 isn’t officially supported by iSync or BluePhoneElite. However, I [hacked in support]({{% wayback \"http://www.macosxhints.com/article.php?story=20050520214153122\" %}}) for my phone into iSync 2.0 last week. When I installed BluePhoneElite, it picked my phone right up — no problems.\n\nVery, very cool.\n"},
    "links": {
        "prev": {"title": "Mac OS X: A Look Back", "permalink": "https://ryanparman.com/posts/2005/mac-os-x-a-look-back/"},
        "next": {"title": "Tiger Revisited: A Month Into It", "permalink": "https://ryanparman.com/posts/2005/tiger-revisited-a-month-into-it/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "iCal Widget",
    "description": "",
    "summary": {
        "content": "Unfortunately, the iCal widget that Jeff Croft asked about never shipped with Tiger. On the other hand, Ben Kazez has developed one himself. This one is called iCal Events. It doesn’t yet support all-day calendars, but I’m sure that functionality is on it’s way. If you (1) have Tiger, (2) are looking for an iCal Widget, or (3) haven’t already purchased Konfabulator 2 (which includes a state-of-the-art iCal Widget), you should definitely give this one a try.",
        "isTruncated": true
    },
    "published": "2005-05-25T09:54:01Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2005/ical-widget/",
    "relativePermalink": "/posts/2005/ical-widget/",
    "aliases": ["/2005/05/25/ical-widget/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 137,
        "readingTime": "1 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2005/20050525-ical-widget.md",
        "logicalName": "20050525-ical-widget.md",
        "translationBaseName": "20050525-ical-widget",
        "baseFileName": "20050525-ical-widget",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2005/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eUnfortunately, the iCal widget that \u003ca href=\"https://web.archive.org/web/20050525095401/http://jeffcroft.com/blog/archives/2005/05/ical_widget_for.php\"\u003eJeff Croft asked about\u003c/a\u003e never shipped with Tiger. On the other hand, \u003ca href=\"https://web.archive.org/web/20050525095401/http://www.benkazez.com/\"\u003eBen Kazez\u003c/a\u003e has developed one himself. This one is called \u003ca href=\"https://web.archive.org/web/20050525095401/http://www.benkazez.com/icalevents.php\"\u003eiCal Events\u003c/a\u003e. It doesn’t yet support all-day calendars, but I’m sure that functionality is on it’s way.\u003c/p\u003e\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/img/icalevents-front.webp\" alt=\"Front of widget\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/img/icalevents-front.gif\" alt=\"Front of widget\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/img/icalevents-back.webp\" alt=\"Back of widget\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/img/icalevents-back.gif\" alt=\"Back of widget\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eIf you (1) have Tiger, (2) are looking for an iCal Widget, or (3) haven’t already purchased \u003ca href=\"https://web.archive.org/web/20050525095401/http://www.konfabulator.com\"\u003eKonfabulator 2\u003c/a\u003e (which includes a state-of-the-art iCal Widget), you should definitely give this one a try. \u003ca href=\"https://web.archive.org/web/20050525095401/http://www.benkazez.com/icalevents.php\"\u003eiCal Events\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThanks so much for the widget, Ben!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUpdate:\u003c/strong\u003e Ben has asked me to remove my customized version of his widget. If you want to make the changes yourself, you can open the widget package, edit the CSS file, change all references of Helvetica to Verdana, and fiddle with some of the font sizes so that everything fits nicely.\u003c/p\u003e\n",
        "plain":"Unfortunately, the iCal widget that Jeff Croft asked about never shipped with Tiger. On the other hand, Ben Kazez has developed one himself. This one is called iCal Events. It doesn’t yet support all-day calendars, but I’m sure that functionality is on it’s way.\n    If you (1) have Tiger, (2) are looking for an iCal Widget, or (3) haven’t already purchased Konfabulator 2 (which includes a state-of-the-art iCal Widget), you should definitely give this one a try. iCal Events.\nThanks so much for the widget, Ben!\nUpdate: Ben has asked me to remove my customized version of his widget. If you want to make the changes yourself, you can open the widget package, edit the CSS file, change all references of Helvetica to Verdana, and fiddle with some of the font sizes so that everything fits nicely.\n",
        "source":"\nUnfortunately, the iCal widget that [Jeff Croft asked about]({{% wayback \"http://jeffcroft.com/blog/archives/2005/05/ical_widget_for.php\" %}}) never shipped with Tiger. On the other hand, [Ben Kazez]({{% wayback \"http://www.benkazez.com/\" %}}) has developed one himself. This one is called [iCal Events]({{% wayback \"http://www.benkazez.com/icalevents.php\" %}}). It doesn’t yet support all-day calendars, but I’m sure that functionality is on it’s way.\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/img/icalevents-front.gif\" alt=\"Front of widget\"\u003e}}\n\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/img/icalevents-back.gif\" alt=\"Back of widget\"\u003e}}\n\nIf you (1) have Tiger, (2) are looking for an iCal Widget, or (3) haven’t already purchased [Konfabulator 2]({{% wayback \"http://www.konfabulator.com\" %}}) (which includes a state-of-the-art iCal Widget), you should definitely give this one a try. [iCal Events]({{% wayback \"http://www.benkazez.com/icalevents.php\" %}}).\n\nThanks so much for the widget, Ben!\n\n**Update:** Ben has asked me to remove my customized version of his widget. If you want to make the changes yourself, you can open the widget package, edit the CSS file, change all references of Helvetica to Verdana, and fiddle with some of the font sizes so that everything fits nicely.\n"},
    "links": {
        "prev": {"title": "*Pwang*  I've Been Batoned", "permalink": "https://ryanparman.com/posts/2005/pwang-ive-been-batoned/"},
        "next": {"title": "American Idol 2005", "permalink": "https://ryanparman.com/posts/2005/american-idol-2005/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Switching to Apple Mail/Safari",
    "description": "",
    "summary": {
        "content": "Ever since I first bought my Mac, I’ve been using Thunderbird as my email client. I really like Thunderbird, and being a Mozilla advocate, I wanted to use the software that I promote to so many people. However, with the impending release of Tiger and the new Mail 2.0 (with Smart Folders), I decided it was time to give Apple Mail a try for the first time. Now, there’s no easy way to import your Thunderbird email into Apple Mail. After about 30 minutes of Google searching, I came across the simplest way to convert my mailbox from one client to another.",
        "isTruncated": true
    },
    "published": "2005-04-21T05:54:34Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2005/switching-to-apple-mailsafari/",
    "relativePermalink": "/posts/2005/switching-to-apple-mailsafari/",
    "aliases": ["/2005/04/20/switching-to-apple-mailsafari/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 329,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2005/20050421-switching-to-apple-mailsafari.md",
        "logicalName": "20050421-switching-to-apple-mailsafari.md",
        "translationBaseName": "20050421-switching-to-apple-mailsafari",
        "baseFileName": "20050421-switching-to-apple-mailsafari",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2005/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eEver since \u003ca href=\"/archives/000269.php\"\u003eI first bought my Mac\u003c/a\u003e, I’ve been using \u003ca href=\"https://web.archive.org/web/20050421055434/http://www.getthunderbird.com\"\u003eThunderbird\u003c/a\u003e as my email client. I really like Thunderbird, and being a Mozilla advocate, I wanted to use the software that I promote to so many people. However, with the impending release of \u003ca href=\"https://web.archive.org/web/20050421055434/http://www.apple.com/macosx/\"\u003eTiger\u003c/a\u003e and the new \u003ca href=\"https://web.archive.org/web/20050421055434/http://www.apple.com/macosx/features/mail/\"\u003eMail 2.0\u003c/a\u003e (with Smart Folders), I decided it was time to give Apple Mail a try for the first time.\u003c/p\u003e\n\u003cp\u003eNow, there’s no easy way to import your Thunderbird email into Apple Mail. After about 30 minutes of Google searching, I came across the \u003ca href=\"https://web.archive.org/web/20050421055434/http://www.macosxhints.com/article.php?story=20050402143519725\"\u003esimplest way to convert my mailbox\u003c/a\u003e from one client to another. After the initial import, it took some tweaking to get everything organized the way I wanted it, but overall it was a relatively simple process considering that there is absolutely no Thunderbird import feature. Hopefully, when my copy of Tiger comes in, the upgrade will be smooth and I’ll be able to immediately take advantage of the new Mail 2.0 features.\u003c/p\u003e\n\u003cp\u003eIn terms of my web browser, I’ve been using Omniweb 5.1 for the last few months. I liked the side-tab layout as well as the per-site settings that Omniweb offered, but after hearing about all of the speed improvements in Safari 1.3, I had to give it another whirl.\u003c/p\u003e\n\u003cp\u003eOh. My. Goodness.\u003c/p\u003e\n\u003cp\u003eSafari 1.3 flies! That, and for some reason, things just look a little nicer and a little smoother in Safari. Don’t even get me started on Firefox for OSX. Firefox for OSX is about as ugly as Netscape 4.x for Windows 95. Well, maybe I’m exaggerating a bit, but it’s still pretty ugly on OSX.\u003c/p\u003e\n\u003cp\u003eBack to the point, I went ahead and re-imported my bookmarks back into Safari, and reset it as my default browser in OSX. The new features in Safari 2.0 will be awesome, I think, and hopefully Firefox 1.1 will get its long-awaited “Aquification”.\u003c/p\u003e\n\u003cp\u003eAnyways, my copy of Tiger is on track to be shipped on April 29th. Is yours?\u003c/p\u003e\n",
        "plain":"Ever since I first bought my Mac, I’ve been using Thunderbird as my email client. I really like Thunderbird, and being a Mozilla advocate, I wanted to use the software that I promote to so many people. However, with the impending release of Tiger and the new Mail 2.0 (with Smart Folders), I decided it was time to give Apple Mail a try for the first time.\nNow, there’s no easy way to import your Thunderbird email into Apple Mail. After about 30 minutes of Google searching, I came across the simplest way to convert my mailbox from one client to another. After the initial import, it took some tweaking to get everything organized the way I wanted it, but overall it was a relatively simple process considering that there is absolutely no Thunderbird import feature. Hopefully, when my copy of Tiger comes in, the upgrade will be smooth and I’ll be able to immediately take advantage of the new Mail 2.0 features.\nIn terms of my web browser, I’ve been using Omniweb 5.1 for the last few months. I liked the side-tab layout as well as the per-site settings that Omniweb offered, but after hearing about all of the speed improvements in Safari 1.3, I had to give it another whirl.\nOh. My. Goodness.\nSafari 1.3 flies! That, and for some reason, things just look a little nicer and a little smoother in Safari. Don’t even get me started on Firefox for OSX. Firefox for OSX is about as ugly as Netscape 4.x for Windows 95. Well, maybe I’m exaggerating a bit, but it’s still pretty ugly on OSX.\nBack to the point, I went ahead and re-imported my bookmarks back into Safari, and reset it as my default browser in OSX. The new features in Safari 2.0 will be awesome, I think, and hopefully Firefox 1.1 will get its long-awaited “Aquification”.\nAnyways, my copy of Tiger is on track to be shipped on April 29th. Is yours?\n",
        "source":"\nEver since [I first bought my Mac](/archives/000269.php), I’ve been using [Thunderbird]({{% wayback \"http://www.getthunderbird.com\" %}}) as my email client. I really like Thunderbird, and being a Mozilla advocate, I wanted to use the software that I promote to so many people. However, with the impending release of [Tiger]({{% wayback \"http://www.apple.com/macosx/\" %}}) and the new [Mail 2.0]({{% wayback \"http://www.apple.com/macosx/features/mail/\" %}}) (with Smart Folders), I decided it was time to give Apple Mail a try for the first time.\n\nNow, there’s no easy way to import your Thunderbird email into Apple Mail. After about 30 minutes of Google searching, I came across the [simplest way to convert my mailbox]({{% wayback \"http://www.macosxhints.com/article.php?story=20050402143519725\" %}}) from one client to another. After the initial import, it took some tweaking to get everything organized the way I wanted it, but overall it was a relatively simple process considering that there is absolutely no Thunderbird import feature. Hopefully, when my copy of Tiger comes in, the upgrade will be smooth and I’ll be able to immediately take advantage of the new Mail 2.0 features.\n\nIn terms of my web browser, I’ve been using Omniweb 5.1 for the last few months. I liked the side-tab layout as well as the per-site settings that Omniweb offered, but after hearing about all of the speed improvements in Safari 1.3, I had to give it another whirl.\n\nOh. My. Goodness.\n\nSafari 1.3 flies! That, and for some reason, things just look a little nicer and a little smoother in Safari. Don’t even get me started on Firefox for OSX. Firefox for OSX is about as ugly as Netscape 4.x for Windows 95. Well, maybe I’m exaggerating a bit, but it’s still pretty ugly on OSX.\n\nBack to the point, I went ahead and re-imported my bookmarks back into Safari, and reset it as my default browser in OSX. The new features in Safari 2.0 will be awesome, I think, and hopefully Firefox 1.1 will get its long-awaited “Aquification”.\n\nAnyways, my copy of Tiger is on track to be shipped on April 29th. Is yours?\n"},
    "links": {
        "prev": {"title": "Tarzan Incomplete Pre-Release Nightly Beta", "permalink": "https://ryanparman.com/posts/2005/tarzan-incomplete-pre-release-nightly-beta/"},
        "next": {"title": "Thoughts on Mac OS X 10.4", "permalink": "https://ryanparman.com/posts/2005/thoughts-on-mac-os-x-104/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Wireless Printing from Mac OS X to Windows XP",
    "description": "",
    "summary": {
        "content": "Now, I feel like a bit of a bonehead for not figuring this out earlier considering how much networking I’ve done over the last few years, but I’m thrilled that I finally figured out how to print a document from my wireless Powerbook to the printer connected to my Windows XP desktop. First off, here’s how everything was setup and configured, before I tweaked it all to do what I wanted it to: The phone cord comes out of the wall, and into the DSL modem (well, duh).",
        "isTruncated": true
    },
    "published": "2005-02-15T07:48:09Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2005/wireless-printing-from-mac-os-x-to-windows-xp/",
    "relativePermalink": "/posts/2005/wireless-printing-from-mac-os-x-to-windows-xp/",
    "aliases": ["/2005/02/14/wireless-printing-from-mac-os-x-to-windows-xp/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 619,
        "readingTime": "3 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2005/20050215-wireless-printing-from-mac-os-x-to-windows-xp.md",
        "logicalName": "20050215-wireless-printing-from-mac-os-x-to-windows-xp.md",
        "translationBaseName": "20050215-wireless-printing-from-mac-os-x-to-windows-xp",
        "baseFileName": "20050215-wireless-printing-from-mac-os-x-to-windows-xp",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2005/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eNow, I feel like a bit of a bonehead for not figuring this out earlier considering how much networking I’ve done over the last few years, but I’m thrilled that I finally figured out how to print a document from my wireless Powerbook to the printer connected to my Windows XP desktop.\u003c/p\u003e\n\u003cp\u003eFirst off, here’s how everything \u003cem\u003ewas\u003c/em\u003e setup and configured, before I tweaked it all to do what I wanted it to:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eThe phone cord comes out of the wall, and into the DSL modem (well, duh). The modem has a built-in, non-configurable IP of \u003ccode\u003e192.168.0.1\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe DSL modem plugs into my 4-port \u003cem\u003ewired\u003c/em\u003e Linksys router, which then splits the internet signal. The router’s address is \u003ccode\u003e192.168.0.2\u003c/code\u003e, and that keeps things simple.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFrom the router, slot 1 plugs into my desktop PC running Windows XP, and assigns an IP (range of \u003ccode\u003e192.168.0.4\u003c/code\u003e - \u003ccode\u003e192.168.0.10\u003c/code\u003e) via DHCP.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSlot 2 is a loose wire that plugs into my laptop when I’m sitting at my desk. This also gets assigned an IP within the same range listed above (of course).\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSlot 3 is connected to a cable that runs from my bedroom where my PC is into the living room where I keep my TV, video games, surround sound system, and namely my \u003ca href=\"https://web.archive.org/web/20050215074809/http://www.apple.com/airportexpress/\"\u003eAirport Express\u003c/a\u003e, which allows me to listen to my music on my surround sound system, and gives me a better wireless signal when I’m in that part of the house. The Airport Express is manually assigned \u003ccode\u003e192.168.0.3\u003c/code\u003e, and spits out IP addresses in the \u003ccode\u003e192.168.1.x\u003c/code\u003e range.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMost things worked great. I could get on the internet all right, I could connect to my printer, as well as my PC’s share when I was plugged in with the loose cable from slot 2, but not when I was wireless. It’s been kind of a pain at times, but nothing too huge.\u003c/p\u003e\n\u003cp\u003eThis weekend, I found myself needing to print something from the living room, but couldn’t, and didn’t feel like disconnecting my printer from the back of my PC and plugging it into my Mac. So I decided to do some fiddling.\u003c/p\u003e\n\u003cp\u003eTo tell the truth, I’d’ve probably just left it alone had I not had an idea of what to do (you like my double-contraction there, don’t you? “I’d’ve.” You know you do…). I got tipped off by reading somewhere about iTunes playlist sharing, which I do at work regularly. \u003ccode\u003e\u0026lt;gloat\u0026gt;\u003c/code\u003e\u003cem\u003eWell, really, most people share from me as I have the largest MP3 collection at work so far with over 5000 legit songs.\u003c/em\u003e\u003ccode\u003e\u0026lt;/gloat\u0026gt;\u003c/code\u003e But what I read was that it used to work via any IP, but because some people were irresponsible with it (stealing music), Apple restricted this functionality to those network users \u003cem\u003eon the same subnet\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eHmmm… now I know that it isn’t exactly the same as having \u003cem\u003esubnet\u003c/em\u003e, but what if I changed the settings on my Airport Express to assign IP’s in the same range (\u003ccode\u003e192.168.0.x\u003c/code\u003e) as my wired router? I figured I’d give it a try, and sure enough, it worked. After setting my Airport Express to assign IP’s in the \u003ccode\u003e192.168.0.200\u003c/code\u003e - \u003ccode\u003e192.168.0.254\u003c/code\u003e range, I was (finally) able to see my PC’s shared resources without having to manually type in a specific IP address. I added the shared printer with no problems, and am finally able to print wirelessly from my Mac to my PC’s desk printer.\u003c/p\u003e\n\u003cp\u003eSo kids, that’s the trick. If you’re at home with 254 or less IP-needing devices (I believe that 192.168.0.255 is reserved for something or another), you can tell your routers to assign certain ranges of IP’s all in the same happy little group.\u003c/p\u003e\n\u003cp\u003eI hope this can help at least one person out there someday.\u003c/p\u003e\n",
        "plain":"Now, I feel like a bit of a bonehead for not figuring this out earlier considering how much networking I’ve done over the last few years, but I’m thrilled that I finally figured out how to print a document from my wireless Powerbook to the printer connected to my Windows XP desktop.\nFirst off, here’s how everything was setup and configured, before I tweaked it all to do what I wanted it to:\n  The phone cord comes out of the wall, and into the DSL modem (well, duh). The modem has a built-in, non-configurable IP of 192.168.0.1.\n  The DSL modem plugs into my 4-port wired Linksys router, which then splits the internet signal. The router’s address is 192.168.0.2, and that keeps things simple.\n  From the router, slot 1 plugs into my desktop PC running Windows XP, and assigns an IP (range of 192.168.0.4 - 192.168.0.10) via DHCP.\n  Slot 2 is a loose wire that plugs into my laptop when I’m sitting at my desk. This also gets assigned an IP within the same range listed above (of course).\n  Slot 3 is connected to a cable that runs from my bedroom where my PC is into the living room where I keep my TV, video games, surround sound system, and namely my Airport Express, which allows me to listen to my music on my surround sound system, and gives me a better wireless signal when I’m in that part of the house. The Airport Express is manually assigned 192.168.0.3, and spits out IP addresses in the 192.168.1.x range.\n  Most things worked great. I could get on the internet all right, I could connect to my printer, as well as my PC’s share when I was plugged in with the loose cable from slot 2, but not when I was wireless. It’s been kind of a pain at times, but nothing too huge.\nThis weekend, I found myself needing to print something from the living room, but couldn’t, and didn’t feel like disconnecting my printer from the back of my PC and plugging it into my Mac. So I decided to do some fiddling.\nTo tell the truth, I’d’ve probably just left it alone had I not had an idea of what to do (you like my double-contraction there, don’t you? “I’d’ve.” You know you do…). I got tipped off by reading somewhere about iTunes playlist sharing, which I do at work regularly. \u0026lt;gloat\u0026gt;Well, really, most people share from me as I have the largest MP3 collection at work so far with over 5000 legit songs.\u0026lt;/gloat\u0026gt; But what I read was that it used to work via any IP, but because some people were irresponsible with it (stealing music), Apple restricted this functionality to those network users on the same subnet.\nHmmm… now I know that it isn’t exactly the same as having subnet, but what if I changed the settings on my Airport Express to assign IP’s in the same range (192.168.0.x) as my wired router? I figured I’d give it a try, and sure enough, it worked. After setting my Airport Express to assign IP’s in the 192.168.0.200 - 192.168.0.254 range, I was (finally) able to see my PC’s shared resources without having to manually type in a specific IP address. I added the shared printer with no problems, and am finally able to print wirelessly from my Mac to my PC’s desk printer.\nSo kids, that’s the trick. If you’re at home with 254 or less IP-needing devices (I believe that 192.168.0.255 is reserved for something or another), you can tell your routers to assign certain ranges of IP’s all in the same happy little group.\nI hope this can help at least one person out there someday.\n",
        "source":"\nNow, I feel like a bit of a bonehead for not figuring this out earlier considering how much networking I’ve done over the last few years, but I’m thrilled that I finally figured out how to print a document from my wireless Powerbook to the printer connected to my Windows XP desktop.\n\nFirst off, here’s how everything *was* setup and configured, before I tweaked it all to do what I wanted it to:\n\n1. The phone cord comes out of the wall, and into the DSL modem (well, duh). The modem has a built-in, non-configurable IP of `192.168.0.1`.\n\n2. The DSL modem plugs into my 4-port *wired* Linksys router, which then splits the internet signal. The router’s address is `192.168.0.2`, and that keeps things simple.\n\n3. From the router, slot 1 plugs into my desktop PC running Windows XP, and assigns an IP (range of `192.168.0.4` - `192.168.0.10`) via DHCP.\n\n4. Slot 2 is a loose wire that plugs into my laptop when I’m sitting at my desk. This also gets assigned an IP within the same range listed above (of course).\n\n5. Slot 3 is connected to a cable that runs from my bedroom where my PC is into the living room where I keep my TV, video games, surround sound system, and namely my [Airport Express]({{% wayback \"http://www.apple.com/airportexpress/\" %}}), which allows me to listen to my music on my surround sound system, and gives me a better wireless signal when I’m in that part of the house. The Airport Express is manually assigned `192.168.0.3`, and spits out IP addresses in the `192.168.1.x` range.\n\nMost things worked great. I could get on the internet all right, I could connect to my printer, as well as my PC’s share when I was plugged in with the loose cable from slot 2, but not when I was wireless. It’s been kind of a pain at times, but nothing too huge.\n\nThis weekend, I found myself needing to print something from the living room, but couldn’t, and didn’t feel like disconnecting my printer from the back of my PC and plugging it into my Mac. So I decided to do some fiddling.\n\nTo tell the truth, I’d’ve probably just left it alone had I not had an idea of what to do (you like my double-contraction there, don’t you? “I’d’ve.” You know you do…). I got tipped off by reading somewhere about iTunes playlist sharing, which I do at work regularly. `\u003cgloat\u003e`*Well, really, most people share from me as I have the largest MP3 collection at work so far with over 5000 legit songs.*`\u003c/gloat\u003e` But what I read was that it used to work via any IP, but because some people were irresponsible with it (stealing music), Apple restricted this functionality to those network users *on the same subnet*.\n\nHmmm… now I know that it isn’t exactly the same as having *subnet*, but what if I changed the settings on my Airport Express to assign IP’s in the same range (`192.168.0.x`) as my wired router? I figured I’d give it a try, and sure enough, it worked. After setting my Airport Express to assign IP’s in the `192.168.0.200` - `192.168.0.254` range, I was (finally) able to see my PC’s shared resources without having to manually type in a specific IP address. I added the shared printer with no problems, and am finally able to print wirelessly from my Mac to my PC’s desk printer.\n\nSo kids, that’s the trick. If you’re at home with 254 or less IP-needing devices (I believe that 192.168.0.255 is reserved for something or another), you can tell your routers to assign certain ranges of IP’s all in the same happy little group.\n\nI hope this can help at least one person out there someday.\n"},
    "links": {
        "prev": {"title": "Mac OS X 10.3.8 Is Now Available!", "permalink": "https://ryanparman.com/posts/2005/mac-os-x-1038-is-now-available/"},
        "next": {"title": "The Coolness That Is TiVo", "permalink": "https://ryanparman.com/posts/2005/the-coolness-that-is-tivo/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Remove Spyware and Adware",
    "description": "",
    "summary": {
        "content": "I’ve been very fortunate to have never been hit with spy/ad-ware. I’ve always been careful, and I’ve tried to teach my wife what actions are smart and which ones are not. Last night, however, I was looking for some information and ended up downloading a file from a shady website. After scanning the file and finding no viruses, I ran the executable. How stupid. It immediately began installing adware and my antivirus app began showing warnings of a trojan being installed.",
        "isTruncated": true
    },
    "published": "2004-12-30T18:39:40Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/remove-spyware-and-adware/",
    "relativePermalink": "/posts/2004/remove-spyware-and-adware/",
    "aliases": ["/2004/12/30/remove-spyware-and-adware/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 330,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20041230-remove-spyware-and-adware.md",
        "logicalName": "20041230-remove-spyware-and-adware.md",
        "translationBaseName": "20041230-remove-spyware-and-adware",
        "baseFileName": "20041230-remove-spyware-and-adware",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eI’ve been very fortunate to have never been hit with spy/ad-ware. I’ve always been careful, and I’ve tried to teach my wife what actions are smart and which ones are not. Last night, however, I was looking for some information and ended up downloading a file from a shady website.\u003c/p\u003e\n\u003cp\u003eAfter scanning the file and finding no viruses, I ran the executable. How stupid. It immediately began installing adware and my antivirus app began showing warnings of a trojan being installed. I quarantined the files that were causing problems, and while I was doing that, a few more non-cancellable installers ran before I could stop them. I immediately pulled the power plug from the wall.\u003c/p\u003e\n\u003cp\u003eIt took me about 2 hours to get everything worked out last night, but in the end I learned two things: (A) Don’t be a freakin’ moron, you freakin’ moron, and (B) there are some really good anti-adware tools out there that I didn’t know about. Here are a few useful tools/apps that I want to share with those that may not know about them:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://web.archive.org/web/20041230183940/http://scribbling.net/how-to-fix-moms-computer\"\u003eHow to fix mom’s computer\u003c/a\u003e. Sounds like what I did over the holidays. Use this guide to fix your parents (or your own) adware-infested computer.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://web.archive.org/web/20041230183940/http://www.dslreports.com/scan\"\u003eOnline Port Scan\u003c/a\u003e. This free online utility checks your computer for ports that may be open to attack.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://web.archive.org/web/20041230183940/http://www.lavasoft.de/\"\u003eAd-Aware\u003c/a\u003e. Spyware scan and removal utility.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://web.archive.org/web/20041230183940/http://www.zonelabs.com\"\u003eZoneAlarm\u003c/a\u003e. A very good software firewall application and AntiVirus application. Free version available.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://web.archive.org/web/20041230183940/http://www.safer-networking.org/en/download/index.html\"\u003eSpybot Search \u0026amp; Destroy\u003c/a\u003e. This application prevents bad software from being installed in the first place.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://web.archive.org/web/20041230183940/http://www.free-av.com/\"\u003eAntiVir\u003c/a\u003e. A free AntiVirus application for Windows, protecting against over 80,000 viruses. (I’ve already got Norton AntiVirus, and ZoneAlarm has their own AV app)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://web.archive.org/web/20041230183940/http://www.spywareinfo.com/~merijn/\"\u003eHijack-This\u003c/a\u003e. This application tracks what processes are currently running. Great for detecting malware.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eI’ve now learned that it doesn’t matter how good you are. If you’re willing to take a risk, you need to be willing to accept the consequences of that risk. Anyway, I hope this helps.\u003c/p\u003e\n",
        "plain":"I’ve been very fortunate to have never been hit with spy/ad-ware. I’ve always been careful, and I’ve tried to teach my wife what actions are smart and which ones are not. Last night, however, I was looking for some information and ended up downloading a file from a shady website.\nAfter scanning the file and finding no viruses, I ran the executable. How stupid. It immediately began installing adware and my antivirus app began showing warnings of a trojan being installed. I quarantined the files that were causing problems, and while I was doing that, a few more non-cancellable installers ran before I could stop them. I immediately pulled the power plug from the wall.\nIt took me about 2 hours to get everything worked out last night, but in the end I learned two things: (A) Don’t be a freakin’ moron, you freakin’ moron, and (B) there are some really good anti-adware tools out there that I didn’t know about. Here are a few useful tools/apps that I want to share with those that may not know about them:\n  How to fix mom’s computer. Sounds like what I did over the holidays. Use this guide to fix your parents (or your own) adware-infested computer.\n  Online Port Scan. This free online utility checks your computer for ports that may be open to attack.\n  Ad-Aware. Spyware scan and removal utility.\n  ZoneAlarm. A very good software firewall application and AntiVirus application. Free version available.\n  Spybot Search \u0026amp; Destroy. This application prevents bad software from being installed in the first place.\n  AntiVir. A free AntiVirus application for Windows, protecting against over 80,000 viruses. (I’ve already got Norton AntiVirus, and ZoneAlarm has their own AV app)\n  Hijack-This. This application tracks what processes are currently running. Great for detecting malware.\n  I’ve now learned that it doesn’t matter how good you are. If you’re willing to take a risk, you need to be willing to accept the consequences of that risk. Anyway, I hope this helps.\n",
        "source":"\nI’ve been very fortunate to have never been hit with spy/ad-ware. I’ve always been careful, and I’ve tried to teach my wife what actions are smart and which ones are not. Last night, however, I was looking for some information and ended up downloading a file from a shady website.\n\nAfter scanning the file and finding no viruses, I ran the executable. How stupid. It immediately began installing adware and my antivirus app began showing warnings of a trojan being installed. I quarantined the files that were causing problems, and while I was doing that, a few more non-cancellable installers ran before I could stop them. I immediately pulled the power plug from the wall.\n\nIt took me about 2 hours to get everything worked out last night, but in the end I learned two things: (A) Don’t be a freakin’ moron, you freakin’ moron, and (B) there are some really good anti-adware tools out there that I didn’t know about. Here are a few useful tools/apps that I want to share with those that may not know about them:\n\n1. [How to fix mom’s computer]({{% wayback \"http://scribbling.net/how-to-fix-moms-computer\" %}}). Sounds like what I did over the holidays. Use this guide to fix your parents (or your own) adware-infested computer.\n\n2. [Online Port Scan]({{% wayback \"http://www.dslreports.com/scan\" %}}). This free online utility checks your computer for ports that may be open to attack.\n\n3. [Ad-Aware]({{% wayback \"http://www.lavasoft.de/\" %}}). Spyware scan and removal utility.\n\n4. [ZoneAlarm]({{% wayback \"http://www.zonelabs.com\" %}}). A very good software firewall application and AntiVirus application. Free version available.\n\n5. [Spybot Search \u0026 Destroy]({{% wayback \"http://www.safer-networking.org/en/download/index.html\" %}}). This application prevents bad software from being installed in the first place.\n\n6. [AntiVir]({{% wayback \"http://www.free-av.com/\" %}}). A free AntiVirus application for Windows, protecting against over 80,000 viruses. (I’ve already got Norton AntiVirus, and ZoneAlarm has their own AV app)\n\n7. [Hijack-This]({{% wayback \"http://www.spywareinfo.com/~merijn/\" %}}). This application tracks what processes are currently running. Great for detecting malware.\n\nI’ve now learned that it doesn’t matter how good you are. If you’re willing to take a risk, you need to be willing to accept the consequences of that risk. Anyway, I hope this helps.\n"},
    "links": {
        "prev": {"title": "God Came Near", "permalink": "https://ryanparman.com/posts/2004/god-came-near/"},
        "next": {"title": "Happiness Is...", "permalink": "https://ryanparman.com/posts/2005/happiness-is/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Firefox Mirrors",
    "description": "",
    "summary": {
        "content": "If you’re having a hard time getting to the Mozilla FTP or websites to download Firefox 1.0, you can get builds from me. Windows Installer Mac OS X Disk Image Linux Installer ",
        "isTruncated": false
    },
    "published": "2004-11-09T17:15:01Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/firefox-mirrors/",
    "relativePermalink": "/posts/2004/firefox-mirrors/",
    "aliases": ["/2004/11/09/firefox-mirrors/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 32,
        "readingTime": "1 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20041109-firefox-mirrors.md",
        "logicalName": "20041109-firefox-mirrors.md",
        "translationBaseName": "20041109-firefox-mirrors",
        "baseFileName": "20041109-firefox-mirrors",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eIf you’re having a hard time getting to the Mozilla FTP or websites to download Firefox 1.0, you can get builds from me.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20041109171501/http://downloads.skyzyx.net/firefox/Firefox%20Setup%201.0.exe\"\u003eWindows Installer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20041109171501/http://downloads.skyzyx.net/firefox/Firefox%201.0.dmg.gz\"\u003eMac OS X Disk Image\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20041109171501/http://downloads.skyzyx.net/firefox/firefox-1.0.installer.tar.gz\"\u003eLinux Installer\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n",
        "plain":"If you’re having a hard time getting to the Mozilla FTP or websites to download Firefox 1.0, you can get builds from me.\n Windows Installer Mac OS X Disk Image Linux Installer  ",
        "source":"\nIf you’re having a hard time getting to the Mozilla FTP or websites to download Firefox 1.0, you can get builds from me.\n\n* [Windows Installer]({{% wayback \"http://downloads.skyzyx.net/firefox/Firefox%20Setup%201.0.exe\" %}})\n* [Mac OS X Disk Image]({{% wayback \"http://downloads.skyzyx.net/firefox/Firefox%201.0.dmg.gz\" %}})\n* [Linux Installer]({{% wayback \"http://downloads.skyzyx.net/firefox/firefox-1.0.installer.tar.gz\" %}})\n\n"},
    "links": {
        "prev": {"title": "Firefox Optimized for G4/G5", "permalink": "https://ryanparman.com/posts/2004/firefox-optimized-for-g4g5/"},
        "next": {"title": "iTunes Remote Control?", "permalink": "https://ryanparman.com/posts/2004/itunes-remote-control/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Firefox Optimized for G4/G5",
    "description": "",
    "summary": {
        "content": "On my work and home PC’s I use Firefox… period. There is no better browser. The only thing that really irks me, however, is how slowly it starts up on my 400 MHz Pentium II running Windows 2000 at work. Since the FFX team won’t implement Mozilla Suite’s “Turbo Mode”, then to get around it, I usually just leave the download manager open and minimized so that whenever I need to open a browser window, it opens super-fast. The Mac platform just doesn’t work the same.",
        "isTruncated": true
    },
    "published": "2004-11-08T20:26:51Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/firefox-optimized-for-g4g5/",
    "relativePermalink": "/posts/2004/firefox-optimized-for-g4g5/",
    "aliases": ["/2004/11/08/firefox-optimized-for-g4g5/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 250,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20041108-firefox-optimized-for-g4g5.md",
        "logicalName": "20041108-firefox-optimized-for-g4g5.md",
        "translationBaseName": "20041108-firefox-optimized-for-g4g5",
        "baseFileName": "20041108-firefox-optimized-for-g4g5",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eOn my work and home PC’s I use \u003ca href=\"https://web.archive.org/web/20041108202651/http://www.mozilla.org/products/firefox/\"\u003eFirefox\u003c/a\u003e… period. There is no better browser. The only thing that really irks me, however, is how slowly it starts up on my 400 MHz Pentium II running Windows 2000 at work. Since the FFX team won’t implement Mozilla Suite’s “Turbo Mode”, then to get around it, I usually just leave the download manager open and minimized so that whenever I need to open a browser window, it opens super-fast.\u003c/p\u003e\n\u003cp\u003eThe Mac platform just doesn’t work the same. I suppose I could just leave the app open, but I have a habit of quitting apps when I’m done with them. Because it always takes Firefox so much longer to start up than Safari, usually I just use Safari for normal surfing, and only open Firefox if I need to do something that requires better JavaScript/DOM/XML/Whatever support than Safari provides.\u003c/p\u003e\n\u003cp\u003eBut today I came across something very, \u003cem\u003every\u003c/em\u003e cool. Firefox builds that are optimized for the PowerBook G4. Instead of waiting the usual 6–7 Dock bounces for Firefox to start up, it only takes one, and everything else about it is significantly faster than the default builds.\u003c/p\u003e\n\u003cp\u003eI came across the forum for optimized builds over at MozillaZine.org. Here is some linkage:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20041108202651/http://forums.mozillazine.org/viewtopic.php?t=149532\"\u003eFirefox optimized for OSX on a G4.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20041108202651/http://forums.mozillazine.org/viewtopic.php?t=156735\"\u003eFirefox optimized for Panther (OSX 10.3.x) on a G5\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://web.archive.org/web/20041108202651/http://forums.mozillazine.org/viewforum.php?f=42\"\u003eOther Firefox builds optimized for Windows, Mac, and Linux\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFirefox is now running zippier than ever on my \u003ca href=\"https://web.archive.org/web/20041108202651/http://www.everymac.com/systems/apple/powerbook_g4/stats/powerbook_g4_1.33_17.html\"\u003ePowerBook\u003c/a\u003e. I hope these’ll help you out!\u003c/p\u003e\n",
        "plain":"On my work and home PC’s I use Firefox… period. There is no better browser. The only thing that really irks me, however, is how slowly it starts up on my 400 MHz Pentium II running Windows 2000 at work. Since the FFX team won’t implement Mozilla Suite’s “Turbo Mode”, then to get around it, I usually just leave the download manager open and minimized so that whenever I need to open a browser window, it opens super-fast.\nThe Mac platform just doesn’t work the same. I suppose I could just leave the app open, but I have a habit of quitting apps when I’m done with them. Because it always takes Firefox so much longer to start up than Safari, usually I just use Safari for normal surfing, and only open Firefox if I need to do something that requires better JavaScript/DOM/XML/Whatever support than Safari provides.\nBut today I came across something very, very cool. Firefox builds that are optimized for the PowerBook G4. Instead of waiting the usual 6–7 Dock bounces for Firefox to start up, it only takes one, and everything else about it is significantly faster than the default builds.\nI came across the forum for optimized builds over at MozillaZine.org. Here is some linkage:\n Firefox optimized for OSX on a G4. Firefox optimized for Panther (OSX 10.3.x) on a G5 Other Firefox builds optimized for Windows, Mac, and Linux  Firefox is now running zippier than ever on my PowerBook. I hope these’ll help you out!\n",
        "source":"\nOn my work and home PC’s I use [Firefox]({{% wayback \"http://www.mozilla.org/products/firefox/\" %}})… period. There is no better browser. The only thing that really irks me, however, is how slowly it starts up on my 400 MHz Pentium II running Windows 2000 at work. Since the FFX team won’t implement Mozilla Suite’s “Turbo Mode”, then to get around it, I usually just leave the download manager open and minimized so that whenever I need to open a browser window, it opens super-fast.\n\nThe Mac platform just doesn’t work the same. I suppose I could just leave the app open, but I have a habit of quitting apps when I’m done with them. Because it always takes Firefox so much longer to start up than Safari, usually I just use Safari for normal surfing, and only open Firefox if I need to do something that requires better JavaScript/DOM/XML/Whatever support than Safari provides.\n\nBut today I came across something very, *very* cool. Firefox builds that are optimized for the PowerBook G4. Instead of waiting the usual 6–7 Dock bounces for Firefox to start up, it only takes one, and everything else about it is significantly faster than the default builds.\n\nI came across the forum for optimized builds over at MozillaZine.org. Here is some linkage:\n\n* [Firefox optimized for OSX on a G4.]({{% wayback \"http://forums.mozillazine.org/viewtopic.php?t=149532\" %}})\n* [Firefox optimized for Panther (OSX 10.3.x) on a G5]({{% wayback \"http://forums.mozillazine.org/viewtopic.php?t=156735\" %}})\n* [Other Firefox builds optimized for Windows, Mac, and Linux]({{% wayback \"http://forums.mozillazine.org/viewforum.php?f=42\" %}})\n\nFirefox is now running zippier than ever on my [PowerBook]({{% wayback \"http://www.everymac.com/systems/apple/powerbook_g4/stats/powerbook_g4_1.33_17.html\" %}}). I hope these’ll help you out!\n"},
    "links": {
        "prev": {"title": "Standalone Internet Explorer and Hosting", "permalink": "https://ryanparman.com/posts/2004/standalone-internet-explorer-and-hosting/"},
        "next": {"title": "Firefox Mirrors", "permalink": "https://ryanparman.com/posts/2004/firefox-mirrors/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Standalone Internet Explorer and Hosting",
    "description": "",
    "summary": {
        "content": "For those interested, I’ve added a few more mirrors for the Standalone IE downloads. I’m really beginning to feel the download stress here at Skyzyx.com, as I hit ~25GB transfer last month and my max is 30GB per month. So, I signed up for a Dreamhost account (I caught the 1 year for $7.77 deal!) which added another 40 or 60 GB of transfer a month… I forget which. Either way, I’m not too worried anymore about going over my transfer bandwidth for the month anymore.",
        "isTruncated": true
    },
    "published": "2004-11-06T02:10:15Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/standalone-internet-explorer-and-hosting/",
    "relativePermalink": "/posts/2004/standalone-internet-explorer-and-hosting/",
    "aliases": ["/2004/11/05/standalone-internet-explorer-and-hosting/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 226,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20041106-standalone-internet-explorer-and-hosting.md",
        "logicalName": "20041106-standalone-internet-explorer-and-hosting.md",
        "translationBaseName": "20041106-standalone-internet-explorer-and-hosting",
        "baseFileName": "20041106-standalone-internet-explorer-and-hosting",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003ca href=\"#update\"\u003eUpdate\u003c/a\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/nav\u003e",
        "html":"\u003cp\u003eFor those interested, I’ve added a few more mirrors for the \u003ca href=\"/downloads/\"\u003eStandalone IE downloads\u003c/a\u003e. I’m really beginning to feel the download stress here at Skyzyx.com, as I hit ~25GB transfer last month and my max is 30GB per month. So, I signed up for a \u003ca href=\"https://web.archive.org/web/20041106021015/http://www.dreamhost.com\"\u003eDreamhost\u003c/a\u003e account (I caught the 1 year for $7.77 deal!) which added another 40 or 60 GB of transfer a month… I forget which. Either way, I’m not too worried anymore about going over my transfer bandwidth for the month anymore.\u003c/p\u003e\n\u003cp\u003eI’ve gone ahead and added my new server (\u003ca href=\"http://www.skyzyx.net\"\u003ewww.skyzyx.net\u003c/a\u003e) to the download list as “Primary Download 1”. I’ve also finally gotten around to adding the \u003ca href=\"https://web.archive.org/web/20041106021015/http://www.mackhosting.com\"\u003eMackHosting.com\u003c/a\u003e mirror. Chris at MackHosting.com has turned out to be a cool guy that I’ve gotten a chance to talk to a bit via IM. Although he’s not a weblogger, he does offer really good small business hosting plans (100 MB space and 1GB transfer for $30/year). Go give his website some love.\u003c/p\u003e\n\u003cp\u003eI’ve also been contacted by someone who knows how to enable conditional comments in the Standalone IE’s. I’ve really been lagging on getting this information out to the public, but I’m hoping to get to it this weekend. Keep an eye out.\u003c/p\u003e\n\u003ch2 id=\"update\"\u003eUpdate\u003c/h2\u003e\n\u003cp\u003eI figured out how to get Bit Torrent setup, so you can now download these files via BT too!\u003c/p\u003e\n",
        "plain":"For those interested, I’ve added a few more mirrors for the Standalone IE downloads. I’m really beginning to feel the download stress here at Skyzyx.com, as I hit ~25GB transfer last month and my max is 30GB per month. So, I signed up for a Dreamhost account (I caught the 1 year for $7.77 deal!) which added another 40 or 60 GB of transfer a month… I forget which. Either way, I’m not too worried anymore about going over my transfer bandwidth for the month anymore.\nI’ve gone ahead and added my new server (www.skyzyx.net) to the download list as “Primary Download 1”. I’ve also finally gotten around to adding the MackHosting.com mirror. Chris at MackHosting.com has turned out to be a cool guy that I’ve gotten a chance to talk to a bit via IM. Although he’s not a weblogger, he does offer really good small business hosting plans (100 MB space and 1GB transfer for $30/year). Go give his website some love.\nI’ve also been contacted by someone who knows how to enable conditional comments in the Standalone IE’s. I’ve really been lagging on getting this information out to the public, but I’m hoping to get to it this weekend. Keep an eye out.\nUpdate I figured out how to get Bit Torrent setup, so you can now download these files via BT too!\n",
        "source":"\nFor those interested, I’ve added a few more mirrors for the [Standalone IE downloads](/downloads/). I’m really beginning to feel the download stress here at Skyzyx.com, as I hit ~25GB transfer last month and my max is 30GB per month. So, I signed up for a [Dreamhost]({{% wayback \"http://www.dreamhost.com\" %}}) account (I caught the 1 year for $7.77 deal!) which added another 40 or 60 GB of transfer a month… I forget which. Either way, I’m not too worried anymore about going over my transfer bandwidth for the month anymore.\n\nI’ve gone ahead and added my new server (www.skyzyx.net) to the download list as “Primary Download 1”. I’ve also finally gotten around to adding the [MackHosting.com]({{% wayback \"http://www.mackhosting.com\" %}}) mirror. Chris at MackHosting.com has turned out to be a cool guy that I’ve gotten a chance to talk to a bit via IM. Although he’s not a weblogger, he does offer really good small business hosting plans (100 MB space and 1GB transfer for $30/year). Go give his website some love.\n\nI’ve also been contacted by someone who knows how to enable conditional comments in the Standalone IE’s. I’ve really been lagging on getting this information out to the public, but I’m hoping to get to it this weekend. Keep an eye out.\n\n## Update\n\nI figured out how to get Bit Torrent setup, so you can now download these files via BT too!\n"},
    "links": {
        "prev": {"title": "Why Did The Chicken Cross The Road?", "permalink": "https://ryanparman.com/posts/2004/why-did-the-chicken-cross-the-road/"},
        "next": {"title": "Firefox Optimized for G4/G5", "permalink": "https://ryanparman.com/posts/2004/firefox-optimized-for-g4g5/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Windows XP SP2 and Mac OS X 10.3.5",
    "description": "",
    "summary": {
        "content": "You can get the Windows XP Service Pack 2 full installer (272 MB), or you can wait a few days for the update to become available (in a much smaller size) from Windows Update. Also, for those using Panther, v10.3.5 is now available from Software Update. The only problem is that it doesn’t set the disk permissions properly. To fix this, go into Applications → Utilities → Disk Utility, and choose to repair permissions. Voila!",
        "isTruncated": false
    },
    "published": "2004-08-16T14:53:26Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/windows-xp-sp2-and-mac-os-x-1035/",
    "relativePermalink": "/posts/2004/windows-xp-sp2-and-mac-os-x-1035/",
    "aliases": ["/2004/08/16/windows-xp-sp2-and-mac-os-x-1035/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 75,
        "readingTime": "1 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20040816-windows-xp-sp2-and-mac-os-x-1035.md",
        "logicalName": "20040816-windows-xp-sp2-and-mac-os-x-1035.md",
        "translationBaseName": "20040816-windows-xp-sp2-and-mac-os-x-1035",
        "baseFileName": "20040816-windows-xp-sp2-and-mac-os-x-1035",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eYou can get the Windows XP Service Pack 2 \u003ca href=\"https://web.archive.org/web/20040816145326/http://www.microsoft.com/downloads/details.aspx?FamilyId=049C9DBE-3B8E-4F30-8245-9E368D3CDB5A\u0026amp;displaylang=en\"\u003efull installer\u003c/a\u003e (272 MB), or you can wait a few days for the update to become available (in a much smaller size) from \u003ca href=\"https://web.archive.org/web/20040816145326/http://windowsupdate.microsoft.com\" title=\"Internet Explorer for Windows is required.\"\u003eWindows Update\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAlso, for those using \u003ca href=\"https://web.archive.org/web/20040816145326/http://www.apple.com/macosx/\"\u003ePanther\u003c/a\u003e, v10.3.5 is now available from Software Update. The only problem is that it doesn’t set the disk permissions properly. To fix this, go into \u003cem\u003eApplications\u003c/em\u003e → \u003cem\u003eUtilities\u003c/em\u003e → \u003cem\u003eDisk Utility\u003c/em\u003e, and choose to repair permissions. Voila!\u003c/p\u003e\n",
        "plain":"You can get the Windows XP Service Pack 2 full installer (272 MB), or you can wait a few days for the update to become available (in a much smaller size) from Windows Update.\nAlso, for those using Panther, v10.3.5 is now available from Software Update. The only problem is that it doesn’t set the disk permissions properly. To fix this, go into Applications → Utilities → Disk Utility, and choose to repair permissions. Voila!\n",
        "source":"\nYou can get the Windows XP Service Pack 2 [full installer]({{% wayback \"http://www.microsoft.com/downloads/details.aspx?FamilyId=049C9DBE-3B8E-4F30-8245-9E368D3CDB5A\u0026displaylang=en\" %}}) (272 MB), or you can wait a few days for the update to become available (in a much smaller size) from [Windows Update]({{% wayback \"http://windowsupdate.microsoft.com\" %}} \"Internet Explorer for Windows is required.\").\n\nAlso, for those using [Panther]({{% wayback \"http://www.apple.com/macosx/\" %}}), v10.3.5 is now available from Software Update. The only problem is that it doesn’t set the disk permissions properly. To fix this, go into _Applications_ → _Utilities_ → _Disk Utility_, and choose to repair permissions. Voila!\n"},
    "links": {
        "prev": {"title": "The Ultrafast SimplePie 0.9 Is Now Available!", "permalink": "https://ryanparman.com/posts/2004/the-ultrafast-simplepie-09-is-now-available/"},
        "next": {"title": "Which OS Are You?", "permalink": "https://ryanparman.com/posts/2004/which-os-are-you/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "RealNetworks and the FairPlay DRM",
    "description": "",
    "summary": {
        "content": "Apparently, RealNetworks has reverse-engineered Apple’s FairPlay software. FairPlay is the name of Apple’s DRM (digital rights management) software. RealNetworks has been trying to get Apple to license their FairPlay software so that Real can sell iPod-ready music files from their online music store. Apple has consistently denied their requests. My biggest issue is just wanting to play the music that I’ve purchased anywhere I want. Hymn is a very good DRE (digital rights enabler) for iTunes Music Store files.",
        "isTruncated": false
    },
    "published": "2004-07-26T23:30:17Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/realnetworks-and-the-fairplay-drm/",
    "relativePermalink": "/posts/2004/realnetworks-and-the-fairplay-drm/",
    "aliases": ["/2004/07/26/realnetworks-and-the-fairplay-drm/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 79,
        "readingTime": "1 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20040726-realnetworks-and-the-fairplay-drm.md",
        "logicalName": "20040726-realnetworks-and-the-fairplay-drm.md",
        "translationBaseName": "20040726-realnetworks-and-the-fairplay-drm",
        "baseFileName": "20040726-realnetworks-and-the-fairplay-drm",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eApparently, \u003ca href=\"https://web.archive.org/web/20040726233017/http://www.real.com\"\u003eRealNetworks\u003c/a\u003e has \u003ca href=\"https://web.archive.org/web/20040726233017/http://www.apple-x.net/modules.php?op=modload\u0026amp;name=News\u0026amp;file=article\u0026amp;sid=1021\"\u003ereverse-engineered\u003c/a\u003e Apple’s \u003ca href=\"https://web.archive.org/web/20040726233017/http://www.apple.com/support/itunes/authorization.html\"\u003eFairPlay\u003c/a\u003e software. FairPlay is the name of Apple’s DRM (digital rights management) software. RealNetworks has been trying to get Apple to license their FairPlay software so that Real can sell iPod-ready music files from their online music store. Apple has consistently denied their requests.\u003c/p\u003e\n\u003cp\u003eMy biggest issue is just wanting to play the music that I’ve \u003cem\u003epurchased\u003c/em\u003e anywhere I want. \u003ca href=\"https://web.archive.org/web/20040726233017/http://hymn-project.org/\"\u003eHymn\u003c/a\u003e is a very good DRE (digital rights \u003cem\u003eenabler\u003c/em\u003e) for iTunes Music Store files.\u003c/p\u003e\n",
        "plain":"Apparently, RealNetworks has reverse-engineered Apple’s FairPlay software. FairPlay is the name of Apple’s DRM (digital rights management) software. RealNetworks has been trying to get Apple to license their FairPlay software so that Real can sell iPod-ready music files from their online music store. Apple has consistently denied their requests.\nMy biggest issue is just wanting to play the music that I’ve purchased anywhere I want. Hymn is a very good DRE (digital rights enabler) for iTunes Music Store files.\n",
        "source":"\nApparently, [RealNetworks]({{% wayback \"http://www.real.com\" %}}) has [reverse-engineered]({{% wayback \"http://www.apple-x.net/modules.php?op=modload\u0026name=News\u0026file=article\u0026sid=1021\" %}}) Apple’s [FairPlay]({{% wayback \"http://www.apple.com/support/itunes/authorization.html\" %}}) software. FairPlay is the name of Apple’s DRM (digital rights management) software. RealNetworks has been trying to get Apple to license their FairPlay software so that Real can sell iPod-ready music files from their online music store. Apple has consistently denied their requests.\n\nMy biggest issue is just wanting to play the music that I’ve *purchased* anywhere I want. [Hymn]({{% wayback \"http://hymn-project.org/\" %}}) is a very good DRE (digital rights *enabler*) for iTunes Music Store files.\n"},
    "links": {
        "prev": {"title": "Letting Go of Legacy Code", "permalink": "https://ryanparman.com/posts/2004/letting-go-of-legacy-code/"},
        "next": {"title": "Standards, Invalidation, and Missing the Point", "permalink": "https://ryanparman.com/posts/2004/standards-invalidation-and-missing-the-point/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Good IM, RSS, and FTP Software",
    "description": "",
    "summary": {
        "content": "It’s almost 2am, so I really need to get to bed. Before that, however, I’d like to share some really good new software I’ve come across lately. The first is Gaim. Gaim is an IM client for Windows/Linux that can log into AIM, ICQ, MSN, Yahoo, Jabber, and others. I know that a lot of people use Trillian, and it already does that. Two features that make me suggest Gaim over Trillian are: You can give people real names (you can set aliases), rather than being stuck with screen names.",
        "isTruncated": true
    },
    "published": "2004-07-23T10:34:18Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/good-im-rss-and-ftp-software/",
    "relativePermalink": "/posts/2004/good-im-rss-and-ftp-software/",
    "aliases": ["/2004/07/23/good-im-rss-and-ftp-software/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 322,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20040723-good-im-rss-and-ftp-software.md",
        "logicalName": "20040723-good-im-rss-and-ftp-software.md",
        "translationBaseName": "20040723-good-im-rss-and-ftp-software",
        "baseFileName": "20040723-good-im-rss-and-ftp-software",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eIt’s almost 2am, so I really need to get to bed. Before that, however, I’d like to share some really good new software I’ve come across lately.\u003c/p\u003e\n\u003cp\u003eThe first is \u003ca href=\"https://web.archive.org/web/20040723103418/http://gaim.sourceforge.net\"\u003eGaim\u003c/a\u003e. Gaim is an IM client for Windows/Linux that can log into AIM, ICQ, MSN, Yahoo, Jabber, and others. I know that a lot of people use Trillian, and it already does that. Two features that make me suggest Gaim over Trillian are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eYou can give people real names (you can set aliases), rather than being stuck with screen names.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eYou can group multiple screen names together as a single person. This is very helpful if some of your buddies have multiple screen names, or are logged on to multiple services at once. Instead of listing your best friend 5 times, you only see them once in your buddy list. Very handy.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThe next is \u003ca href=\"https://web.archive.org/web/20040723103418/http://www.adiumx.com\"\u003eAdium X\u003c/a\u003e. Adium X is an IM client for Mac OS X. It is very customizable, and the development team seems to want to create a fun product… which is what they’ve done. You can customize sound sets, smileys, IM message display, the Dock icon, and a few other things.\u003c/p\u003e\n\u003cp\u003eFor RSS readers, I’d suggest \u003ca href=\"https://web.archive.org/web/20040723103418/http://www.feeddemon.com\"\u003eFeed Demon\u003c/a\u003e for Windows and \u003ca href=\"https://web.archive.org/web/20040723103418/http://freshsqueeze.com/products/pulpfiction/\"\u003ePulp Fiction\u003c/a\u003e for Mac OS X. Both of them cost money, but they both seem to be worth it. I’ve been using Feed Demon since November, and absolutely love it. I just started using Pulp Fiction tonight, but it’s already better than Shrook and NetNewsWire Lite. There’s a 15 day trial for PF, so I’d recommend checking it out.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://web.archive.org/web/20040723103418/http://www.flashfxp.com\"\u003eFlash FXP\u003c/a\u003e is a terrific FTP client for Windows. I used to use CuteFTP and FTP Voyager, and Flash FXP is far better than both. \u003ca href=\"https://web.archive.org/web/20040723103418/http://www.panic.com/transmit/\"\u003eTransmit\u003c/a\u003e was recommended on \u003ca href=\"https://web.archive.org/web/20040723103418/http://www.9rules.com/whitespace/\"\u003eWhitespace\u003c/a\u003e a couple of months back for Mac OS X. I gave it a try, and I love it.\u003c/p\u003e\n\u003cp\u003eThat’s enough promoting for tonight. I’m going to bed. G’nite.\u003c/p\u003e\n",
        "plain":"It’s almost 2am, so I really need to get to bed. Before that, however, I’d like to share some really good new software I’ve come across lately.\nThe first is Gaim. Gaim is an IM client for Windows/Linux that can log into AIM, ICQ, MSN, Yahoo, Jabber, and others. I know that a lot of people use Trillian, and it already does that. Two features that make me suggest Gaim over Trillian are:\n  You can give people real names (you can set aliases), rather than being stuck with screen names.\n  You can group multiple screen names together as a single person. This is very helpful if some of your buddies have multiple screen names, or are logged on to multiple services at once. Instead of listing your best friend 5 times, you only see them once in your buddy list. Very handy.\n  The next is Adium X. Adium X is an IM client for Mac OS X. It is very customizable, and the development team seems to want to create a fun product… which is what they’ve done. You can customize sound sets, smileys, IM message display, the Dock icon, and a few other things.\nFor RSS readers, I’d suggest Feed Demon for Windows and Pulp Fiction for Mac OS X. Both of them cost money, but they both seem to be worth it. I’ve been using Feed Demon since November, and absolutely love it. I just started using Pulp Fiction tonight, but it’s already better than Shrook and NetNewsWire Lite. There’s a 15 day trial for PF, so I’d recommend checking it out.\nFlash FXP is a terrific FTP client for Windows. I used to use CuteFTP and FTP Voyager, and Flash FXP is far better than both. Transmit was recommended on Whitespace a couple of months back for Mac OS X. I gave it a try, and I love it.\nThat’s enough promoting for tonight. I’m going to bed. G’nite.\n",
        "source":"\nIt’s almost 2am, so I really need to get to bed. Before that, however, I’d like to share some really good new software I’ve come across lately.\n\nThe first is [Gaim]({{% wayback \"http://gaim.sourceforge.net\" %}}). Gaim is an IM client for Windows/Linux that can log into AIM, ICQ, MSN, Yahoo, Jabber, and others. I know that a lot of people use Trillian, and it already does that. Two features that make me suggest Gaim over Trillian are:\n\n1. You can give people real names (you can set aliases), rather than being stuck with screen names.\n\n1. You can group multiple screen names together as a single person. This is very helpful if some of your buddies have multiple screen names, or are logged on to multiple services at once. Instead of listing your best friend 5 times, you only see them once in your buddy list. Very handy.\n\nThe next is [Adium X]({{% wayback \"http://www.adiumx.com\" %}}). Adium X is an IM client for Mac OS X. It is very customizable, and the development team seems to want to create a fun product… which is what they’ve done. You can customize sound sets, smileys, IM message display, the Dock icon, and a few other things.\n\nFor RSS readers, I’d suggest [Feed Demon]({{% wayback \"http://www.feeddemon.com\" %}}) for Windows and [Pulp Fiction]({{% wayback \"http://freshsqueeze.com/products/pulpfiction/\" %}}) for Mac OS X. Both of them cost money, but they both seem to be worth it. I’ve been using Feed Demon since November, and absolutely love it. I just started using Pulp Fiction tonight, but it’s already better than Shrook and NetNewsWire Lite. There’s a 15 day trial for PF, so I’d recommend checking it out.\n\n[Flash FXP]({{% wayback \"http://www.flashfxp.com\" %}}) is a terrific FTP client for Windows. I used to use CuteFTP and FTP Voyager, and Flash FXP is far better than both. [Transmit]({{% wayback \"http://www.panic.com/transmit/\" %}}) was recommended on [Whitespace]({{% wayback \"http://www.9rules.com/whitespace/\" %}}) a couple of months back for Mac OS X. I gave it a try, and I love it.\n\nThat’s enough promoting for tonight. I’m going to bed. G’nite.\n"},
    "links": {
        "prev": {"title": "Psychos Need Not Apply", "permalink": "https://ryanparman.com/posts/2004/psychos-need-not-apply/"},
        "next": {"title": "Letting Go of Legacy Code", "permalink": "https://ryanparman.com/posts/2004/letting-go-of-legacy-code/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "OpenOffice.org, Mac OS X, and X11",
    "description": "",
    "summary": {
        "content": "After realizing that the pre-installed copy of Microsoft Office was simply a 30-day trial, I had the wonderful experience of trying to get OpenOffice.org installed today. Because there hasn’t been a native “Aquification” release of OpenOffice, I started reading directions about installing XDarwin — an open source version of the X-Windows X11 windowing system. Time to fire up the old command line. Woo-hoo! I’ve spent a bit of time fooling around with both BeOS 5 and Red Hat Linux 8.0, so the Posix-compliant shell isn’t new to me.",
        "isTruncated": true
    },
    "published": "2004-06-14T02:46:14Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/openofficeorg-mac-os-x-and-x11/",
    "relativePermalink": "/posts/2004/openofficeorg-mac-os-x-and-x11/",
    "aliases": ["/2004/06/13/openofficeorg-mac-os-x-and-x11/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 294,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20040614-openofficeorg-mac-os-x-and-x11.md",
        "logicalName": "20040614-openofficeorg-mac-os-x-and-x11.md",
        "translationBaseName": "20040614-openofficeorg-mac-os-x-and-x11",
        "baseFileName": "20040614-openofficeorg-mac-os-x-and-x11",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eAfter realizing that the pre-installed copy of Microsoft Office was simply a 30-day trial, I had the wonderful experience of trying to get OpenOffice.org installed today.\u003c/p\u003e\n\u003cp\u003eBecause there hasn’t been a native “Aquification” release of OpenOffice, I started reading directions about installing XDarwin — an open source version of the X-Windows X11 windowing system. Time to fire up the old command line. Woo-hoo!\u003c/p\u003e\n\u003cp\u003eI’ve spent a bit of time fooling around with both BeOS 5 and Red Hat Linux 8.0, so the Posix-compliant shell isn’t new to me. I’ve also spent quite a bit of time in MS-DOS, so that isn’t much of a problem.\u003c/p\u003e\n\u003cp\u003eAfter downloading the necessary \u003ccode\u003e.tgz\u003c/code\u003e files, figuring out how to run the Xinstall.sh file as ‘root’, and getting everything worked out, I’d get the dialog box asking me if I wanted to use Full Screen or Rootless mode, and as soon as I’d choose one, XDarwin would close. No explanation or anything.\u003c/p\u003e\n\u003cp\u003eWelcome to the world of Unix.\u003c/p\u003e\n\u003cp\u003eI then downloaded and installed OroborOSX. What I didn’t know was that OroborOSX requires XDarwin… and XDarwin kept crashing. Well crap.\u003c/p\u003e\n\u003cp\u003eI did quite a bit more digging around, and came across information on downloading Apple’s semi-open-source X11.app. Voila! OpenOffice was able to launch with no problems! The only thing I don’t like about it — which is extremely minor — is that the X11.app doesn’t minimize when Open Office starts.\u003c/p\u003e\n\u003cp\u003eThe other thing is that it looks way more like Unix than it does Mac OS X. I was under the belief that OroborOSX adds some cool OSX-like widgets, but I could never get it to run.\u003c/p\u003e\n\u003cp\u003eThis Mac OS X stuff is cool! I’m off to do more of it! Anyone got any insight about getting XDarwin to work?\u003c/p\u003e\n",
        "plain":"After realizing that the pre-installed copy of Microsoft Office was simply a 30-day trial, I had the wonderful experience of trying to get OpenOffice.org installed today.\nBecause there hasn’t been a native “Aquification” release of OpenOffice, I started reading directions about installing XDarwin — an open source version of the X-Windows X11 windowing system. Time to fire up the old command line. Woo-hoo!\nI’ve spent a bit of time fooling around with both BeOS 5 and Red Hat Linux 8.0, so the Posix-compliant shell isn’t new to me. I’ve also spent quite a bit of time in MS-DOS, so that isn’t much of a problem.\nAfter downloading the necessary .tgz files, figuring out how to run the Xinstall.sh file as ‘root’, and getting everything worked out, I’d get the dialog box asking me if I wanted to use Full Screen or Rootless mode, and as soon as I’d choose one, XDarwin would close. No explanation or anything.\nWelcome to the world of Unix.\nI then downloaded and installed OroborOSX. What I didn’t know was that OroborOSX requires XDarwin… and XDarwin kept crashing. Well crap.\nI did quite a bit more digging around, and came across information on downloading Apple’s semi-open-source X11.app. Voila! OpenOffice was able to launch with no problems! The only thing I don’t like about it — which is extremely minor — is that the X11.app doesn’t minimize when Open Office starts.\nThe other thing is that it looks way more like Unix than it does Mac OS X. I was under the belief that OroborOSX adds some cool OSX-like widgets, but I could never get it to run.\nThis Mac OS X stuff is cool! I’m off to do more of it! Anyone got any insight about getting XDarwin to work?\n",
        "source":"\nAfter realizing that the pre-installed copy of Microsoft Office was simply a 30-day trial, I had the wonderful experience of trying to get OpenOffice.org installed today.\n\nBecause there hasn’t been a native “Aquification” release of OpenOffice, I started reading directions about installing XDarwin — an open source version of the X-Windows X11 windowing system. Time to fire up the old command line. Woo-hoo!\n\nI’ve spent a bit of time fooling around with both BeOS 5 and Red Hat Linux 8.0, so the Posix-compliant shell isn’t new to me. I’ve also spent quite a bit of time in MS-DOS, so that isn’t much of a problem.\n\nAfter downloading the necessary `.tgz` files, figuring out how to run the Xinstall.sh file as ‘root’, and getting everything worked out, I’d get the dialog box asking me if I wanted to use Full Screen or Rootless mode, and as soon as I’d choose one, XDarwin would close. No explanation or anything.\n\nWelcome to the world of Unix.\n\nI then downloaded and installed OroborOSX. What I didn’t know was that OroborOSX requires XDarwin… and XDarwin kept crashing. Well crap.\n\nI did quite a bit more digging around, and came across information on downloading Apple’s semi-open-source X11.app. Voila! OpenOffice was able to launch with no problems! The only thing I don’t like about it — which is extremely minor — is that the X11.app doesn’t minimize when Open Office starts.\n\nThe other thing is that it looks way more like Unix than it does Mac OS X. I was under the belief that OroborOSX adds some cool OSX-like widgets, but I could never get it to run.\n\nThis Mac OS X stuff is cool! I’m off to do more of it! Anyone got any insight about getting XDarwin to work?\n"},
    "links": {
        "prev": {"title": "Re-learning Macs", "permalink": "https://ryanparman.com/posts/2004/re-learning-macs/"},
        "next": {"title": "What's New?", "permalink": "https://ryanparman.com/posts/2004/whats-new/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "37 Signal's Basecamp™ Is Cool!",
    "description": "",
    "summary": {
        "content": "I’ve just started using the brand-new Basecamp™ project management system (created by 37 Signals to begin handling a few web design projects that I have going right now. So far, I’m impressed. It really says a lot, actually. It takes a lot to impress me. Sure there are plenty of things out there that are cool, but they’re not necessarily impressive. Basecamp is impressive. One of the niftiest features, is that it generates both an RSS feed (which is great for an RSS-junkie like me), and an iCal file (compatible with Apple’s iCal as well as Mozilla Calendar).",
        "isTruncated": true
    },
    "published": "2004-02-05T20:15:18Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/37-signals-basecamp-is-cool/",
    "relativePermalink": "/posts/2004/37-signals-basecamp-is-cool/",
    "aliases": ["/2004/02/05/37-signals-basecamp-is-cool/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 144,
        "readingTime": "1 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20040205-37-signals-basecamp-is-cool.md",
        "logicalName": "20040205-37-signals-basecamp-is-cool.md",
        "translationBaseName": "20040205-37-signals-basecamp-is-cool",
        "baseFileName": "20040205-37-signals-basecamp-is-cool",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cdiv class=\"pa2-ns\"\u003e\n    \u003cpicture\u003e\u003csource type=\"image/webp\" srcset=\"https://cdn.ryanparman.com/img/basecamplogo.webp\" alt=\"Basecamp Logo\" class=\"db fullimage\" decoding=\"async\"\u003e\n        \u003cimg src=\"https://cdn.ryanparman.com/img/basecamplogo.png\" alt=\"Basecamp Logo\" class=\"db fullimage\" decoding=\"async\"\u003e\n    \u003c/picture\u003e\n    \u003cp class=\"f6 gray tc db\"\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\u003cp\u003eI’ve just started using the brand-new \u003ca href=\"https://web.archive.org/web/20040205201518/http://www.basecamphq.com\"\u003e\u003cstrong\u003eBasecamp™\u003c/strong\u003e\u003c/a\u003e project management system (created by \u003ca href=\"https://web.archive.org/web/20040205201518/http://www.37signals.com\"\u003e37 Signals\u003c/a\u003e to begin handling a few web design projects that I have going right now.\u003c/p\u003e\n\u003cp\u003eSo far, I’m impressed.\u003c/p\u003e\n\u003cp\u003eIt really says a lot, actually. It takes a lot to impress me. Sure there are plenty of things out there that are \u003cem\u003ecool\u003c/em\u003e, but they’re not necessarily impressive. Basecamp is \u003cem\u003eimpressive\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eOne of the niftiest features, is that it generates both an RSS feed (which is great for an RSS-junkie like me), and an iCal file (compatible with Apple’s iCal as well as Mozilla Calendar). This makes it easy to keep up with my client’s comments as well as my upcoming milestones (deadlines).\u003c/p\u003e\n\u003cp\u003eI’d suggest it to just about anyone who has a need for (or could benefit from) a project management system. There’s even a free trial. Have a look.\u003c/p\u003e\n",
        "plain":"  I’ve just started using the brand-new Basecamp™ project management system (created by 37 Signals to begin handling a few web design projects that I have going right now.\nSo far, I’m impressed.\nIt really says a lot, actually. It takes a lot to impress me. Sure there are plenty of things out there that are cool, but they’re not necessarily impressive. Basecamp is impressive.\nOne of the niftiest features, is that it generates both an RSS feed (which is great for an RSS-junkie like me), and an iCal file (compatible with Apple’s iCal as well as Mozilla Calendar). This makes it easy to keep up with my client’s comments as well as my upcoming milestones (deadlines).\nI’d suggest it to just about anyone who has a need for (or could benefit from) a project management system. There’s even a free trial. Have a look.\n",
        "source":"\n{{\u003cfullimage src=\"https://cdn.ryanparman.com/img/basecamplogo.png\" alt=\"Basecamp Logo\"\u003e}}\n\nI’ve just started using the brand-new [**Basecamp™**]({{% wayback \"http://www.basecamphq.com\" %}}) project management system (created by [37 Signals]({{% wayback \"http://www.37signals.com\" %}}) to begin handling a few web design projects that I have going right now.\n\nSo far, I’m impressed.\n\nIt really says a lot, actually. It takes a lot to impress me. Sure there are plenty of things out there that are *cool*, but they’re not necessarily impressive. Basecamp is *impressive*.\n\nOne of the niftiest features, is that it generates both an RSS feed (which is great for an RSS-junkie like me), and an iCal file (compatible with Apple’s iCal as well as Mozilla Calendar). This makes it easy to keep up with my client’s comments as well as my upcoming milestones (deadlines).\n\nI’d suggest it to just about anyone who has a need for (or could benefit from) a project management system. There’s even a free trial. Have a look.\n"},
    "links": {
        "prev": {"title": "The Browser Wars", "permalink": "https://ryanparman.com/posts/2004/the-browser-wars/"},
        "next": {"title": "Extensibly Extensible", "permalink": "https://ryanparman.com/posts/2004/extensibly-extensible/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "The Power of Feedback",
    "description": "",
    "summary": {
        "content": "I’ve been using the Feed Demon RSS reader since 1.0 rc4, which was around November-ish. I liked it so much, that when 1.0 went final in January, I bought a license. This was the first time I’d ever actually bought shareware, and it kinda made me feel good. Wierd. Anyways, the only real problem I had with Feed Demon was that it didn’t properly parse the feed for Dunstan’s blog. I went back and looked at his XML, and he wasn’t using a \u0026lt;link\u0026gt; tag for his permalinks.",
        "isTruncated": true
    },
    "published": "2004-02-02T19:26:17Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2004/the-power-of-feedback/",
    "relativePermalink": "/posts/2004/the-power-of-feedback/",
    "aliases": ["/2004/02/02/the-power-of-feedback/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 308,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2004/20040202-the-power-of-feedback.md",
        "logicalName": "20040202-the-power-of-feedback.md",
        "translationBaseName": "20040202-the-power-of-feedback",
        "baseFileName": "20040202-the-power-of-feedback",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2004/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eI’ve been using the \u003ca href=\"https://web.archive.org/web/20040202192617/http://www.bradsoft.com/feeddemon/\"\u003eFeed Demon\u003c/a\u003e RSS reader since 1.0 rc4, which was around November-ish. I liked it so much, that when 1.0 went final in January, I bought a license. This was the first time I’d ever actually \u003cem\u003ebought\u003c/em\u003e shareware, and it kinda made me feel good. Wierd.\u003c/p\u003e\n\u003cp\u003eAnyways, the only real problem I had with Feed Demon was that it didn’t properly parse the feed for \u003ca href=\"https://web.archive.org/web/20040202192617/http://www.1976design.com/blog/\"\u003eDunstan’s blog\u003c/a\u003e. I went back and looked at his XML, and he wasn’t using a \u003ccode\u003e\u0026lt;link\u0026gt;\u003c/code\u003e tag for his permalinks. He was using the \u003ccode\u003e\u0026lt;guid\u0026gt;\u003c/code\u003e tag instead. Hmmm…\u003c/p\u003e\n\u003cp\u003eI went and dug up the \u003ca href=\"https://web.archive.org/web/20040202192617/http://blogs.law.harvard.edu/tech/rss\"\u003eRSS 2.0 specification\u003c/a\u003e so that I could read up on the \u003ccode\u003e\u0026lt;guid\u0026gt;\u003c/code\u003e tag. The \u003ca href=\"https://web.archive.org/web/20040202192617/http://blogs.law.harvard.edu/tech/rss#ltguidgtSubelementOfLtitemgt\"\u003etags details\u003c/a\u003e say this:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIf the guid element has an attribute named \u003ccode\u003eisPermaLink\u003c/code\u003e with a value of true, the reader may assume that it is a permalink to the item, that is, a url that can be opened in a Web browser, that points to the full item described by the \u003ccode\u003e\u0026lt;item\u0026gt;\u003c/code\u003e element.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThat’s all fine and dandy, but Dunstan’s \u003ccode\u003e\u0026lt;guid\u0026gt;\u003c/code\u003e tag didn’t have that. Oh no! Was Dunstan’s XML feed not well-formed? *Gasp!* I read on, and came across this:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eisPermaLink\u003c/code\u003e is optional, its default value is \u003ccode\u003etrue\u003c/code\u003e. If its value is \u003ccode\u003efalse\u003c/code\u003e, the guid may not be assumed to be a url, or a url to anything in particular.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eOkay, okay. So Dunstan knows what he’s doing. Fair enough. But will my favorite feed reader never be able to properly read Dunstan’s Permalinks?\u003c/p\u003e\n\u003cp\u003eI submitted this as a bug report on the Feed Demon newsgroup last week. Today, \u003ca href=\"https://web.archive.org/web/20040202192617/http://nick.typepad.com/blog/\"\u003eNick Bradbury\u003c/a\u003e released \u003ca href=\"https://web.archive.org/web/20040202192617/http://nick.typepad.com/blog/2004/01/feeddemon_110_b.html\"\u003eFeed Demon 1.1 Beta 1\u003c/a\u003e (it kinda rolls off the tongue, doesn’t it?). This issue is fixed in this release. Woo-hoo! There’s also basic support for \u003ca href=\"https://web.archive.org/web/20040202192617/http://www.mnot.net/drafts/draft-nottingham-atom-format-02.html\"\u003eAtom 0.3\u003c/a\u003e, which is kinda cool too.\u003c/p\u003e\n\u003cp\u003eI love the power of feedback.\u003c/p\u003e\n",
        "plain":"I’ve been using the Feed Demon RSS reader since 1.0 rc4, which was around November-ish. I liked it so much, that when 1.0 went final in January, I bought a license. This was the first time I’d ever actually bought shareware, and it kinda made me feel good. Wierd.\nAnyways, the only real problem I had with Feed Demon was that it didn’t properly parse the feed for Dunstan’s blog. I went back and looked at his XML, and he wasn’t using a \u0026lt;link\u0026gt; tag for his permalinks. He was using the \u0026lt;guid\u0026gt; tag instead. Hmmm…\nI went and dug up the RSS 2.0 specification so that I could read up on the \u0026lt;guid\u0026gt; tag. The tags details say this:\n If the guid element has an attribute named isPermaLink with a value of true, the reader may assume that it is a permalink to the item, that is, a url that can be opened in a Web browser, that points to the full item described by the \u0026lt;item\u0026gt; element.\n That’s all fine and dandy, but Dunstan’s \u0026lt;guid\u0026gt; tag didn’t have that. Oh no! Was Dunstan’s XML feed not well-formed? *Gasp!* I read on, and came across this:\n isPermaLink is optional, its default value is true. If its value is false, the guid may not be assumed to be a url, or a url to anything in particular.\n Okay, okay. So Dunstan knows what he’s doing. Fair enough. But will my favorite feed reader never be able to properly read Dunstan’s Permalinks?\nI submitted this as a bug report on the Feed Demon newsgroup last week. Today, Nick Bradbury released Feed Demon 1.1 Beta 1 (it kinda rolls off the tongue, doesn’t it?). This issue is fixed in this release. Woo-hoo! There’s also basic support for Atom 0.3, which is kinda cool too.\nI love the power of feedback.\n",
        "source":"\nI’ve been using the [Feed Demon]({{% wayback \"http://www.bradsoft.com/feeddemon/\" %}}) RSS reader since 1.0 rc4, which was around November-ish. I liked it so much, that when 1.0 went final in January, I bought a license. This was the first time I’d ever actually *bought* shareware, and it kinda made me feel good. Wierd.\n\nAnyways, the only real problem I had with Feed Demon was that it didn’t properly parse the feed for [Dunstan’s blog]({{% wayback \"http://www.1976design.com/blog/\" %}}). I went back and looked at his XML, and he wasn’t using a `\u003clink\u003e` tag for his permalinks. He was using the `\u003cguid\u003e` tag instead. Hmmm…\n\nI went and dug up the [RSS 2.0 specification]({{% wayback \"http://blogs.law.harvard.edu/tech/rss\" %}}) so that I could read up on the `\u003cguid\u003e` tag. The [tags details]({{% wayback \"http://blogs.law.harvard.edu/tech/rss#ltguidgtSubelementOfLtitemgt\" %}}) say this:\n\n\u003e If the guid element has an attribute named `isPermaLink` with a value of true, the reader may assume that it is a permalink to the item, that is, a url that can be opened in a Web browser, that points to the full item described by the `\u003citem\u003e` element.\n\nThat’s all fine and dandy, but Dunstan’s `\u003cguid\u003e` tag didn’t have that. Oh no! Was Dunstan’s XML feed not well-formed? \\*Gasp!\\* I read on, and came across this:\n\n\u003e `isPermaLink` is optional, its default value is `true`. If its value is `false`, the guid may not be assumed to be a url, or a url to anything in particular.\n\nOkay, okay. So Dunstan knows what he’s doing. Fair enough. But will my favorite feed reader never be able to properly read Dunstan’s Permalinks?\n\nI submitted this as a bug report on the Feed Demon newsgroup last week. Today, [Nick Bradbury]({{% wayback \"http://nick.typepad.com/blog/\" %}}) released [Feed Demon 1.1 Beta 1]({{% wayback \"http://nick.typepad.com/blog/2004/01/feeddemon_110_b.html\" %}}) (it kinda rolls off the tongue, doesn’t it?). This issue is fixed in this release. Woo-hoo! There’s also basic support for [Atom 0.3]({{% wayback \"http://www.mnot.net/drafts/draft-nottingham-atom-format-02.html\" %}}), which is kinda cool too.\n\nI love the power of feedback.\n"},
    "links": {
        "prev": {"title": "SpamMaster Joe", "permalink": "https://ryanparman.com/posts/2004/spammaster-joe/"},
        "next": {"title": "The Browser Wars", "permalink": "https://ryanparman.com/posts/2004/the-browser-wars/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Winamp 5, Wasabi, and the Future",
    "description": "",
    "summary": {
        "content": "I’ve been a Winamp fan for quite some time now. I’ve been using it since the days of 2.1-ish, and it’s been near impossible to get me to switch to another full-time media player. Winamp 5 pretty much seals the deal with me. The naming convention for Winamp 5 has already been discussed, and I’ve made available my favorite Winamp skins. Although I wasn’t much of a fan of Winamp 3 in terms of using it (it was very, very slow), the thing that I did think was fantastic was Wasabi.",
        "isTruncated": true
    },
    "published": "2003-12-16T19:22:13Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2003/winamp-5-wasabi-and-the-future/",
    "relativePermalink": "/posts/2003/winamp-5-wasabi-and-the-future/",
    "aliases": ["/archives/000131.php", "/articles/000131.php", "/2003/12/16/winamp-5-wasabi-and-the-future/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 329,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2003/20031216-winamp-5-wasabi-and-the-future.md",
        "logicalName": "20031216-winamp-5-wasabi-and-the-future.md",
        "translationBaseName": "20031216-winamp-5-wasabi-and-the-future",
        "baseFileName": "20031216-winamp-5-wasabi-and-the-future",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2003/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eI’ve been a \u003ca href=\"https://web.archive.org/web/20031216192213/http://www.winamp.com\" title=\"Winamp.com\"\u003eWinamp\u003c/a\u003e fan for quite some time now. I’ve been using it since the days of 2.1-ish, and it’s been near impossible to get me to switch to another full-time media player. Winamp 5 pretty much seals the deal with me.\u003c/p\u003e\n\u003cp\u003eThe naming convention for Winamp 5 has \u003ca href=\"/archives/000086.php\"\u003ealready been discussed\u003c/a\u003e, and I’ve made available my \u003ca href=\"/archives/000097.php\"\u003efavorite Winamp skins\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eAlthough I wasn’t much of a fan of Winamp 3 in terms of using it (it was very, \u003cem\u003every\u003c/em\u003e slow), the thing that I did think was fantastic was \u003ca href=\"https://web.archive.org/web/20031216192213/http://www.guiolympics.com/articles/interview_nullsoft.html\"\u003eWasabi\u003c/a\u003e. Even though it was slow, it was a brilliant piece of work that had much potential to be something really useful.\u003c/p\u003e\n\u003cp\u003eAccording to \u003ca href=\"https://web.archive.org/web/20031216192213/http://news.com.com/2100-1025_3-5125657.html?tag=nefd_top\"\u003eC|Net\u003c/a\u003e, Brennan Underwood (the head honcho behind Wasabi) has been laid-off by AOL. Apparently, it seems as though AOL is making \u003ca href=\"/archives/000039.php\"\u003emore and more mistakes\u003c/a\u003e with the technology that it owns, which leads me to believe that AOL won’t be around for much longer.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://web.archive.org/web/20031216192213/http://forums.winamp.com/showthread.php?s=cc552c0d20d3dafae0261afd318c74c8\u0026amp;threadid=158594\"\u003eWasabi Development Board\u003c/a\u003e over at the Winamp Forums has a posting about making Wasabi an open-source project. The \u003ca href=\"https://web.archive.org/web/20031216192213/http://www.wasabidev.org/\"\u003eWasabiDev\u003c/a\u003e website says pretty much the same thing. I know that Winamp 5 has compatibility with the Wasabi API, since the whole point of Winamp 5 was to “Wasabify Winamp 2”. So far, so good.\u003c/p\u003e\n\u003cp\u003eAlthough I’m kinda bummed that Wasabi Development at Nullsoft is being abandoned (although I’m sure that other Nullsofters will contribute time and code to the new project), I’m sure that the newly dubbed “wasabi.player” (based on Winamp 3) will do very well once the API matures. Winamp 5 support for Wasabi will probably be limited to skinning and components — the same as it is now. I’d be suprised if AOL continued to pay their Nullsoft employees to continue work on their own Wasabi, separate from the open-source Wasabi.\u003c/p\u003e\n\u003cp\u003eAll of that aside, I’m loving the new Winamp 5 Final release. It’s fast, supports cool skins, and even plays my excessively large video files like a champ.\u003c/p\u003e\n",
        "plain":"I’ve been a Winamp fan for quite some time now. I’ve been using it since the days of 2.1-ish, and it’s been near impossible to get me to switch to another full-time media player. Winamp 5 pretty much seals the deal with me.\nThe naming convention for Winamp 5 has already been discussed, and I’ve made available my favorite Winamp skins.\nAlthough I wasn’t much of a fan of Winamp 3 in terms of using it (it was very, very slow), the thing that I did think was fantastic was Wasabi. Even though it was slow, it was a brilliant piece of work that had much potential to be something really useful.\nAccording to C|Net, Brennan Underwood (the head honcho behind Wasabi) has been laid-off by AOL. Apparently, it seems as though AOL is making more and more mistakes with the technology that it owns, which leads me to believe that AOL won’t be around for much longer.\nThe Wasabi Development Board over at the Winamp Forums has a posting about making Wasabi an open-source project. The WasabiDev website says pretty much the same thing. I know that Winamp 5 has compatibility with the Wasabi API, since the whole point of Winamp 5 was to “Wasabify Winamp 2”. So far, so good.\nAlthough I’m kinda bummed that Wasabi Development at Nullsoft is being abandoned (although I’m sure that other Nullsofters will contribute time and code to the new project), I’m sure that the newly dubbed “wasabi.player” (based on Winamp 3) will do very well once the API matures. Winamp 5 support for Wasabi will probably be limited to skinning and components — the same as it is now. I’d be suprised if AOL continued to pay their Nullsoft employees to continue work on their own Wasabi, separate from the open-source Wasabi.\nAll of that aside, I’m loving the new Winamp 5 Final release. It’s fast, supports cool skins, and even plays my excessively large video files like a champ.\n",
        "source":"\nI’ve been a [Winamp]({{% wayback \"http://www.winamp.com\" %}} \"Winamp.com\") fan for quite some time now. I’ve been using it since the days of 2.1-ish, and it’s been near impossible to get me to switch to another full-time media player. Winamp 5 pretty much seals the deal with me.\n\nThe naming convention for Winamp 5 has [already been discussed](/archives/000086.php), and I’ve made available my [favorite Winamp skins](/archives/000097.php).\n\nAlthough I wasn’t much of a fan of Winamp 3 in terms of using it (it was very, *very* slow), the thing that I did think was fantastic was [Wasabi]({{% wayback \"http://www.guiolympics.com/articles/interview_nullsoft.html\" %}}). Even though it was slow, it was a brilliant piece of work that had much potential to be something really useful.\n\nAccording to [C|Net]({{% wayback \"http://news.com.com/2100-1025_3-5125657.html?tag=nefd_top\" %}}), Brennan Underwood (the head honcho behind Wasabi) has been laid-off by AOL. Apparently, it seems as though AOL is making [more and more mistakes](/archives/000039.php) with the technology that it owns, which leads me to believe that AOL won’t be around for much longer.\n\nThe [Wasabi Development Board]({{% wayback \"http://forums.winamp.com/showthread.php?s=cc552c0d20d3dafae0261afd318c74c8\u0026threadid=158594\" %}}) over at the Winamp Forums has a posting about making Wasabi an open-source project. The [WasabiDev]({{% wayback \"http://www.wasabidev.org/\" %}}) website says pretty much the same thing. I know that Winamp 5 has compatibility with the Wasabi API, since the whole point of Winamp 5 was to “Wasabify Winamp 2”. So far, so good.\n\nAlthough I’m kinda bummed that Wasabi Development at Nullsoft is being abandoned (although I’m sure that other Nullsofters will contribute time and code to the new project), I’m sure that the newly dubbed “wasabi.player” (based on Winamp 3) will do very well once the API matures. Winamp 5 support for Wasabi will probably be limited to skinning and components — the same as it is now. I’d be suprised if AOL continued to pay their Nullsoft employees to continue work on their own Wasabi, separate from the open-source Wasabi.\n\nAll of that aside, I’m loving the new Winamp 5 Final release. It’s fast, supports cool skins, and even plays my excessively large video files like a champ.\n"},
    "links": {
        "prev": {"title": "Christmastime Is Here...", "permalink": "https://ryanparman.com/posts/2003/christmastime-is-here/"},
        "next": {"title": "Movable Type Problems", "permalink": "https://ryanparman.com/posts/2003/movable-type-problems/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Winamp 5 Skins",
    "description": "",
    "summary": {
        "content": "Well, I changed my mind about downloading Winamp 5. I downloaded Winamp 5.0rc8 today, and began toying around with it. In my previous Winamp 5 post, I talked about how Winamp 2 was so much faster, but Winamp 3 had so much more potential. I will now say that Winamp 5 is a beautiful cross between the two, keeping the best things from Winamp 3, and adding them to Winamp 2 to create a super-fast, magnificent audio player that supports the skins from both earlier versions!",
        "isTruncated": true
    },
    "published": "2003-11-20T04:27:48Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2003/winamp-5-skins/",
    "relativePermalink": "/posts/2003/winamp-5-skins/",
    "aliases": ["/archives/000097.php", "/articles/000097.php", "/2003/11/19/winamp-5-skins/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 201,
        "readingTime": "1 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2003/20031120-winamp-5-skins.md",
        "logicalName": "20031120-winamp-5-skins.md",
        "translationBaseName": "20031120-winamp-5-skins",
        "baseFileName": "20031120-winamp-5-skins",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2003/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003eWell, I \u003ca href=\"/archives/000086.php\"\u003echanged my mind\u003c/a\u003e about downloading \u003ca href=\"https://web.archive.org/web/20031120042748/http://www.afterdawn.com/software/audio_software/audio_players/winamp_v5.cfm\"\u003eWinamp 5\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI downloaded Winamp 5.0rc8 today, and began toying around with it. In my \u003ca href=\"/archives/000086.php\"\u003eprevious Winamp 5 post\u003c/a\u003e, I talked about how Winamp 2 was so much faster, but Winamp 3 had so much more potential. I will now say that Winamp 5 is a beautiful cross between the two, keeping the best things from Winamp 3, and adding them to Winamp 2 to create a super-fast, magnificent audio player that \u003cem\u003esupports the skins from both earlier versions!\u003c/em\u003e This was definitely the coolest part of it all.\u003c/p\u003e\n\u003cp\u003eNow, I’m picky when it comes to my Winamp skins. I like to find one or two that I like, and stick with them. Winamp 2 skins were very intuitive and easy to use, but not usually very exciting. Winamp 3 skins looked awesome and were very exciting, but were often times difficult to navigate and use. Hopefully, native Winamp 5 skins will also take the best of both worlds.\u003c/p\u003e\n\u003cp\u003eHere are my personal favorite skins, available for download. You’ll want to right-click (or control-click for Mac users) and choose to “Save Target As…”\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/downloads/blackdawn.wsz\"\u003eBlackDawn\u003c/a\u003e (Winamp 2)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/downloads/dshock.wal\"\u003eD-Shock\u003c/a\u003e (Winamp 3)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/downloads/echo.wal\"\u003eEcho\u003c/a\u003e (Winamp 3)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/downloads/mmd3.wal\"\u003eMMD3\u003c/a\u003e (Winamp 3)\u003c/li\u003e\n\u003c/ul\u003e\n",
        "plain":"Well, I changed my mind about downloading Winamp 5.\nI downloaded Winamp 5.0rc8 today, and began toying around with it. In my previous Winamp 5 post, I talked about how Winamp 2 was so much faster, but Winamp 3 had so much more potential. I will now say that Winamp 5 is a beautiful cross between the two, keeping the best things from Winamp 3, and adding them to Winamp 2 to create a super-fast, magnificent audio player that supports the skins from both earlier versions! This was definitely the coolest part of it all.\nNow, I’m picky when it comes to my Winamp skins. I like to find one or two that I like, and stick with them. Winamp 2 skins were very intuitive and easy to use, but not usually very exciting. Winamp 3 skins looked awesome and were very exciting, but were often times difficult to navigate and use. Hopefully, native Winamp 5 skins will also take the best of both worlds.\nHere are my personal favorite skins, available for download. You’ll want to right-click (or control-click for Mac users) and choose to “Save Target As…”\n BlackDawn (Winamp 2) D-Shock (Winamp 3) Echo (Winamp 3) MMD3 (Winamp 3)  ",
        "source":"\nWell, I [changed my mind](/archives/000086.php) about downloading [Winamp 5]({{% wayback \"http://www.afterdawn.com/software/audio_software/audio_players/winamp_v5.cfm\" %}}).\n\nI downloaded Winamp 5.0rc8 today, and began toying around with it. In my [previous Winamp 5 post](/archives/000086.php), I talked about how Winamp 2 was so much faster, but Winamp 3 had so much more potential. I will now say that Winamp 5 is a beautiful cross between the two, keeping the best things from Winamp 3, and adding them to Winamp 2 to create a super-fast, magnificent audio player that *supports the skins from both earlier versions!* This was definitely the coolest part of it all.\n\nNow, I’m picky when it comes to my Winamp skins. I like to find one or two that I like, and stick with them. Winamp 2 skins were very intuitive and easy to use, but not usually very exciting. Winamp 3 skins looked awesome and were very exciting, but were often times difficult to navigate and use. Hopefully, native Winamp 5 skins will also take the best of both worlds.\n\nHere are my personal favorite skins, available for download. You’ll want to right-click (or control-click for Mac users) and choose to “Save Target As…”\n\n* [BlackDawn](/downloads/blackdawn.wsz) (Winamp 2)\n* [D-Shock](/downloads/dshock.wal) (Winamp 3)\n* [Echo](/downloads/echo.wal) (Winamp 3)\n* [MMD3](/downloads/mmd3.wal) (Winamp 3)\n"},
    "links": {
        "prev": {"title": "What In The World Is “Skyzyx”?", "permalink": "https://ryanparman.com/posts/2003/what-in-the-world-is-skyzyx/"},
        "next": {"title": "Better Living Through Web Standards", "permalink": "https://ryanparman.com/posts/2003/better-living-through-web-standards/"},
        "ignore": "me"
    }
}

            
            , {
    "kind": "page",
    "title": "Winamp 5 Beta",
    "description": "",
    "summary": {
        "content": "People who are familiar are asking themselves, “What? Winamp 5?! What happened to version 4?” It was explained that Winamp 2 + Winamp 3 = Winamp 5. For those unfamiliar with the technical differences between Winamp 2.x (WA2) and Winamp3 (WA3): Winamp 2.x: This was a continuation of the old 1.x codebase. It works, it’s really fast, it’s skinnable, and it’s just plain spiffy. There are many current plug-ins and skins for this application. Winamp3: Winamp3 was completely rewritten from the ground-up, based around an all-new technology from Nullsoft called “Wasabi”.",
        "isTruncated": true
    },
    "published": "2003-10-18T07:01:23Z",
    "updated": "2019-02-10T21:35:12-08:00",
    "permalink": "https://ryanparman.com/posts/2003/winamp-5-beta/",
    "relativePermalink": "/posts/2003/winamp-5-beta/",
    "aliases": ["/archives/000086.php", "/articles/000086.php", "/2003/10/17/winamp-5-beta/"],
    "images": [],
    "videos": [],
    "categories": ["Software"],
    "tags": [],
    "series": [],
    "keywords": [],
    "meta": {
        "wordCount": 399,
        "readingTime": "2 minutes",
        "language": "en",
        "isDraft": false,
        "isHome": false,
        "isNode": false,
        "isPage": true,
        "isTranslated": false
    },
    "sourceFile": {
        "path": "posts/2003/20031018-winamp-5-beta.md",
        "logicalName": "20031018-winamp-5-beta.md",
        "translationBaseName": "20031018-winamp-5-beta",
        "baseFileName": "20031018-winamp-5-beta",
        "ext": "md",
        "lang": "en",
        "dir": "posts/2003/"
    },
    "content": {
        "tableOfContents": "\u003cnav id=\"TableOfContents\"\u003e\u003c/nav\u003e",
        "html":"\u003cp\u003ePeople who are familiar are asking themselves, “What? Winamp 5?! What happened to version 4?” It was explained that \u003ca href=\"https://web.archive.org/web/20031018070123/http://forums.winamp.com/showthread.php?s=c990410ac837592a19c200aba0525a44\u0026amp;threadid=152995#post1129480\"\u003eWinamp 2 + Winamp 3 = Winamp 5\u003c/a\u003e. For those unfamiliar with the technical differences between Winamp 2.x (WA2) and Winamp3 (WA3):\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWinamp 2.x:\u003c/strong\u003e This was a continuation of the old 1.x codebase. It works, it’s really fast, it’s skinnable, and it’s just plain spiffy. There are many current \u003ca href=\"https://web.archive.org/web/20031018070123/http://classic.winamp.com/plugins/\"\u003eplug-ins\u003c/a\u003e and \u003ca href=\"https://web.archive.org/web/20031018070123/http://classic.winamp.com/skins/\"\u003eskins\u003c/a\u003e for this application.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eWinamp3:\u003c/strong\u003e Winamp3 was completely rewritten from the ground-up, based around an all-new technology from \u003ca href=\"https://web.archive.org/web/20031018070123/http://www.nullsoft.com\" title=\"Developers of Gnutella and currently owned by AOL, the killer of innovation.\"\u003eNullsoft\u003c/a\u003e called “Wasabi”. The Wasabi API has the potential for tremendously cool things. It supports a new style of skinning, as well as an all-new plug-in architecture. \u003ca href=\"https://web.archive.org/web/20031018070123/http://www.guiolympics.com/articles/interview_nullsoft.html\"\u003eRead this article\u003c/a\u003e for a better explanation of the advantages of Winamp3 (and Wasabi).\u003c/p\u003e\n\u003cp\u003eThere are many cool things about Winamp3 that I love, but there is one single, glaring problem with Winamp3. It’s \u003cem\u003ereally\u003c/em\u003e slow.\u003c/p\u003e\n\u003cp\u003eI’ve been using Winamp3 since it was released in December 2002, and after nearly a year of trying to get past the whole speed issue, I’ve decided to downgrade back to the latest version of \u003ca href=\"https://web.archive.org/web/20031018070123/http://classic.winamp.com/download/\"\u003eWinamp 2.x\u003c/a\u003e, currently 2.91. As far as Winamp 5 goes, Nullsoft wants to take the best features of Winamp 2.x and integrate the skinning, plug-in, and component features of Winamp3. What does that mean for Wasabi? Well, I’m not too sure yet. I’d like to see the continued development of Wasabi (after all, it \u003cem\u003eis\u003c/em\u003e only a 1.0 release), but that still remains to be seen.\u003c/p\u003e\n\u003cp\u003eAfter having installed Winamp 2.91 last night, I’m hesitant to \u003ca href=\"https://web.archive.org/web/20031018070123/http://www.cd-rw.org/software/audio_software/audio_players/winamp_v5.cfm\"\u003edownload the Winamp 5 Beta 1 release\u003c/a\u003e. Normally, I jump at the chance to download, test, and provide feedback for beta software, but I’m not really feeling all that ambitious tonight. Maybe I’ll feel differently in the morning, but maybe not. We’ll see.\u003c/p\u003e\n\u003cp\u003eThis here is a \u003ca href=\"https://web.archive.org/web/20031018070123/http://classic.winamp.com/team/finger.jhtml?who=Brennan\"\u003egreater and better explanation\u003c/a\u003e of Winamp 2 vs Winamp 3 vs Winamp 5.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWasabi development is not over nor dead. Think of it more as Winamp 2.x is getting Wasabified! If we do things right you’ll be able to load your Winamp3 components into Winamp right alongside your Winamp 2.x plugins, while still being able to just install Winamp 2.9 if you prefer that, or just Winamp3 if you prefer that. Basically, you’ll be able to run Winamp 2.x skins in their native skin engine, and Winamp3 skins in theirs.\u003c/p\u003e\n\u003c/blockquote\u003e\n",
        "plain":"People who are familiar are asking themselves, “What? Winamp 5?! What happened to version 4?” It was explained that Winamp 2 + Winamp 3 = Winamp 5. For those unfamiliar with the technical differences between Winamp 2.x (WA2) and Winamp3 (WA3):\nWinamp 2.x: This was a continuation of the old 1.x codebase. It works, it’s really fast, it’s skinnable, and it’s just plain spiffy. There are many current plug-ins and skins for this application.\nWinamp3: Winamp3 was completely rewritten from the ground-up, based around an all-new technology from Nullsoft called “Wasabi”. The Wasabi API has the potential for tremendously cool things. It supports a new style of skinning, as well as an all-new plug-in architecture. Read this article for a better explanation of the advantages of Winamp3 (and Wasabi).\nThere are many cool things about Winamp3 that I love, but there is one single, glaring problem with Winamp3. It’s really slow.\nI’ve been using Winamp3 since it was released in December 2002, and after nearly a year of trying to get past the whole speed issue, I’ve decided to downgrade back to the latest version of Winamp 2.x, currently 2.91. As far as Winamp 5 goes, Nullsoft wants to take the best features of Winamp 2.x and integrate the skinning, plug-in, and component features of Winamp3. What does that mean for Wasabi? Well, I’m not too sure yet. I’d like to see the continued development of Wasabi (after all, it is only a 1.0 release), but that still remains to be seen.\nAfter having installed Winamp 2.91 last night, I’m hesitant to download the Winamp 5 Beta 1 release. Normally, I jump at the chance to download, test, and provide feedback for beta software, but I’m not really feeling all that ambitious tonight. Maybe I’ll feel differently in the morning, but maybe not. We’ll see.\nThis here is a greater and better explanation of Winamp 2 vs Winamp 3 vs Winamp 5.\n Wasabi development is not over nor dead. Think of it more as Winamp 2.x is getting Wasabified! If we do things right you’ll be able to load your Winamp3 components into Winamp right alongside your Winamp 2.x plugins, while still being able to just install Winamp 2.9 if you prefer that, or just Winamp3 if you prefer that. Basically, you’ll be able to run Winamp 2.x skins in their native skin engine, and Winamp3 skins in theirs.\n ",
        "source":"\nPeople who are familiar are asking themselves, “What? Winamp 5?! What happened to version 4?” It was explained that [Winamp 2 + Winamp 3 = Winamp 5]({{% wayback \"http://forums.winamp.com/showthread.php?s=c990410ac837592a19c200aba0525a44\u0026threadid=152995#post1129480\" %}}). For those unfamiliar with the technical differences between Winamp 2.x (WA2) and Winamp3 (WA3):\n\n**Winamp 2.x:** This was a continuation of the old 1.x codebase. It works, it’s really fast, it’s skinnable, and it’s just plain spiffy. There are many current [plug-ins]({{% wayback \"http://classic.winamp.com/plugins/\" %}}) and [skins]({{% wayback \"http://classic.winamp.com/skins/\" %}}) for this application.\n\n**Winamp3:** Winamp3 was completely rewritten from the ground-up, based around an all-new technology from [Nullsoft]({{% wayback \"http://www.nullsoft.com\" %}} \"Developers of Gnutella and currently owned by AOL, the killer of innovation.\") called “Wasabi”. The Wasabi API has the potential for tremendously cool things. It supports a new style of skinning, as well as an all-new plug-in architecture. [Read this article]({{% wayback \"http://www.guiolympics.com/articles/interview_nullsoft.html\" %}}) for a better explanation of the advantages of Winamp3 (and Wasabi).\n\nThere are many cool things about Winamp3 that I love, but there is one single, glaring problem with Winamp3. It’s *really* slow.\n\nI’ve been using Winamp3 since it was released in December 2002, and after nearly a year of trying to get past the whole speed issue, I’ve decided to downgrade back to the latest version of [Winamp 2.x]({{% wayback \"http://classic.winamp.com/download/\" %}}), currently 2.91. As far as Winamp 5 goes, Nullsoft wants to take the best features of Winamp 2.x and integrate the skinning, plug-in, and component features of Winamp3. What does that mean for Wasabi? Well, I’m not too sure yet. I’d like to see the continued development of Wasabi (after all, it *is* only a 1.0 release), but that still remains to be seen.\n\nAfter having installed Winamp 2.91 last night, I’m hesitant to [download the Winamp 5 Beta 1 release]({{% wayback \"http://www.cd-rw.org/software/audio_software/audio_players/winamp_v5.cfm\" %}}). Normally, I jump at the chance to download, test, and provide feedback for beta software, but I’m not really feeling all that ambitious tonight. Maybe I’ll feel differently in the morning, but maybe not. We’ll see.\n\nThis here is a [greater and better explanation]({{% wayback \"http://classic.winamp.com/team/finger.jhtml?who=Brennan\" %}}) of Winamp 2 vs Winamp 3 vs Winamp 5.\n\n\u003e Wasabi development is not over nor dead. Think of it more as Winamp 2.x is getting Wasabified! If we do things right you’ll be able to load your Winamp3 components into Winamp right alongside your Winamp 2.x plugins, while still being able to just install Winamp 2.9 if you prefer that, or just Winamp3 if you prefer that. Basically, you’ll be able to run Winamp 2.x skins in their native skin engine, and Winamp3 skins in theirs.\n"},
    "links": {
        "prev": {"title": "iTunes for Windows", "permalink": "https://ryanparman.com/posts/2003/itunes-for-windows/"},
        "next": {"title": "Links From Around", "permalink": "https://ryanparman.com/posts/2003/links-from-around/"},
        "ignore": "me"
    }
}

            
        ]
    }
}
